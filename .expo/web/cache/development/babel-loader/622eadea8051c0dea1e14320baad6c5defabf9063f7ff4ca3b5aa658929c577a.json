{"ast":null,"code":"import ServerContext from \"@react-navigation/native/lib/module/ServerContext\";\nimport React from \"react\";\nimport { useLinkingContext } from \"../link/useLinkingContext\";\nexport function useServerState() {\n  var getStateFromPath = useGetStateFromPath();\n  var server = React.useContext(ServerContext);\n  var pathname = React.useMemo(function () {\n    var _server$location;\n    var location = (_server$location = server == null ? void 0 : server.location) != null ? _server$location : typeof window !== \"undefined\" ? window.location : undefined;\n    return location ? location.pathname + location.search : undefined;\n  }, [server]);\n  var state = React.useMemo(function () {\n    return pathname ? getStateFromPath(pathname) : null;\n  }, [pathname, getStateFromPath]);\n  return typeof document === \"undefined\" ? state : null;\n}\nfunction useGetStateFromPath() {\n  var linking = useLinkingContext();\n  return React.useCallback(function (state) {\n    return linking.getStateFromPath(state, linking.config);\n  }, [linking]);\n}","map":{"version":3,"names":["ServerContext","React","useLinkingContext","useServerState","getStateFromPath","useGetStateFromPath","server","useContext","pathname","useMemo","_server$location","location","window","undefined","search","state","document","linking","useCallback","config"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/static/useServerState.ts"],"sourcesContent":["//  TODO: This is fragile and only works on web\n// @ts-expect-error\nimport ServerContext from \"@react-navigation/native/lib/module/ServerContext\";\nimport React from \"react\";\n\nimport getStateFromPath from \"../fork/getStateFromPath\";\nimport { useLinkingContext } from \"../link/useLinkingContext\";\n\nexport function useServerState() {\n  const getStateFromPath = useGetStateFromPath();\n\n  const server = React.useContext<any>(ServerContext);\n\n  const pathname = React.useMemo(() => {\n    const location =\n      server?.location ??\n      (typeof window !== \"undefined\" ? window.location : undefined);\n\n    return location ? location.pathname + location.search : undefined;\n  }, [server]);\n\n  const state = React.useMemo(() => {\n    // TODO: useEffect is not called on the server, so we don't need these checks.\n    return pathname ? getStateFromPath(pathname) : null;\n  }, [pathname, getStateFromPath]);\n\n  return typeof document === \"undefined\" ? state : null;\n}\n\nfunction useGetStateFromPath() {\n  const linking = useLinkingContext();\n\n  return React.useCallback(\n    (state: Parameters<typeof getStateFromPath>[0]) => {\n      return linking.getStateFromPath(state, linking.config);\n    },\n    [linking]\n  );\n}\n"],"mappings":"AAEA,OAAOA,aAAa,MAAM,mDAAmD;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAGzB,SAASC,iBAAiB;AAE1B,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC/B,IAAMC,gBAAgB,GAAGC,mBAAmB,EAAE;EAE9C,IAAMC,MAAM,GAAGL,KAAK,CAACM,UAAU,CAAMP,aAAa,CAAC;EAEnD,IAAMQ,QAAQ,GAAGP,KAAK,CAACQ,OAAO,CAAC,YAAM;IAAA,IAAAC,gBAAA;IACnC,IAAMC,QAAQ,IAAAD,gBAAA,GACZJ,MAAM,oBAANA,MAAM,CAAEK,QAAQ,YAAAD,gBAAA,GACf,OAAOE,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,QAAQ,GAAGE,SAAU;IAE/D,OAAOF,QAAQ,GAAGA,QAAQ,CAACH,QAAQ,GAAGG,QAAQ,CAACG,MAAM,GAAGD,SAAS;EACnE,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,IAAMS,KAAK,GAAGd,KAAK,CAACQ,OAAO,CAAC,YAAM;IAEhC,OAAOD,QAAQ,GAAGJ,gBAAgB,CAACI,QAAQ,CAAC,GAAG,IAAI;EACrD,CAAC,EAAE,CAACA,QAAQ,EAAEJ,gBAAgB,CAAC,CAAC;EAEhC,OAAO,OAAOY,QAAQ,KAAK,WAAW,GAAGD,KAAK,GAAG,IAAI;AACvD;AAEA,SAASV,mBAAmBA,CAAA,EAAG;EAC7B,IAAMY,OAAO,GAAGf,iBAAiB,EAAE;EAEnC,OAAOD,KAAK,CAACiB,WAAW,CACtB,UAACH,KAA6C,EAAK;IACjD,OAAOE,OAAO,CAACb,gBAAgB,CAACW,KAAK,EAAEE,OAAO,CAACE,MAAM,CAAC;EACxD,CAAC,EACD,CAACF,OAAO,CAAC,CACV;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
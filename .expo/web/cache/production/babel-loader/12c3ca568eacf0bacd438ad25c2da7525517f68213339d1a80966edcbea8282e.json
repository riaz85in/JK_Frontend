{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import invariant from'invariant';import NativeModules from\"react-native-web/dist/exports/NativeModules\";import{val}from\"../val\";import{adapt,createAnimatedBlock as block}from\"./AnimatedBlock\";import{createAnimatedCall as call}from\"./AnimatedCall\";import AnimatedNode from\"./AnimatedNode\";var AnimatedDebug=function(_AnimatedNode){_inherits(AnimatedDebug,_AnimatedNode);var _super=_createSuper(AnimatedDebug);function AnimatedDebug(message,value){var _this;_classCallCheck(this,AnimatedDebug);invariant(typeof message==='string',\"Reanimated: Animated.debug node first argument should be of type string but got \"+message);invariant(value instanceof AnimatedNode,\"Reanimated: Animated.debug node second argument should be of type AnimatedNode but got \"+value);_this=_super.call(this,{type:'debug',message:message,value:value},[value]);_this._message=message;_this._value=value;return _this;}_createClass(AnimatedDebug,[{key:\"toString\",value:function toString(){return\"AnimatedDebug, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){var value=val(this._value);console.log(this._message,value);return value;}}]);return AnimatedDebug;}(AnimatedNode);export function createAnimatedDebug(message,value){if(__DEV__){var _NativeModules$Native,_NativeModules$Native2,_NativeModules$Native3;var runningInRemoteDebugger=typeof atob!=='undefined';var runningInExpoShell=((_NativeModules$Native=NativeModules.NativeUnimoduleProxy)==null?void 0:(_NativeModules$Native2=_NativeModules$Native.modulesConstants)==null?void 0:(_NativeModules$Native3=_NativeModules$Native2.ExponentConstants)==null?void 0:_NativeModules$Native3.executionEnvironment)==='storeClient';if(runningInRemoteDebugger||runningInExpoShell){return block([call([value],function(_ref){var _ref2=_slicedToArray(_ref,1),a=_ref2[0];return console.log(message+\" \"+a);}),value]);}else{return new AnimatedDebug(message,adapt(value));}}return value;}","map":{"version":3,"names":["invariant","NativeModules","val","adapt","createAnimatedBlock","block","createAnimatedCall","call","AnimatedNode","AnimatedDebug","_AnimatedNode","_inherits","_super","_createSuper","message","value","_this","_classCallCheck","type","_message","_value","_createClass","key","toString","__nodeID","__onEvaluate","console","log","createAnimatedDebug","__DEV__","_NativeModules$Native","_NativeModules$Native2","_NativeModules$Native3","runningInRemoteDebugger","atob","runningInExpoShell","NativeUnimoduleProxy","modulesConstants","ExponentConstants","executionEnvironment","_ref","_ref2","_slicedToArray","a"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedDebug.js"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeModules } from 'react-native';\nimport { val } from '../val';\nimport { adapt, createAnimatedBlock as block } from './AnimatedBlock';\nimport { createAnimatedCall as call } from './AnimatedCall';\nimport AnimatedNode from './AnimatedNode';\n\nclass AnimatedDebug extends AnimatedNode {\n  _message;\n  _value;\n\n  constructor(message, value) {\n    invariant(\n      typeof message === 'string',\n      `Reanimated: Animated.debug node first argument should be of type string but got ${message}`\n    );\n    invariant(\n      value instanceof AnimatedNode,\n      `Reanimated: Animated.debug node second argument should be of type AnimatedNode but got ${value}`\n    );\n    super({ type: 'debug', message, value }, [value]);\n    this._message = message;\n    this._value = value;\n  }\n\n  toString() {\n    return `AnimatedDebug, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const value = val(this._value);\n    console.log(this._message, value);\n    return value;\n  }\n}\n\nexport function createAnimatedDebug(message, value) {\n  if (__DEV__) {\n    // hack to detect if app is running in remote debugger\n    // https://stackoverflow.com/questions/39022216\n    const runningInRemoteDebugger = typeof atob !== 'undefined';\n\n    // read the executionEnvironment off of expo-constants without explicitly\n    // depending on the package\n    const runningInExpoShell =\n      NativeModules.NativeUnimoduleProxy?.modulesConstants?.ExponentConstants\n        ?.executionEnvironment === 'storeClient';\n\n    if (runningInRemoteDebugger || runningInExpoShell) {\n      // When running in expo or remote debugger we use JS console.log to output variables\n      // otherwise we output to the native console using native debug node\n      return block([\n        call([value], ([a]) => console.log(`${message} ${a}`)),\n        value,\n      ]);\n    } else {\n      return new AnimatedDebug(message, adapt(value));\n    }\n  }\n  // Debugging is disabled in PROD\n  return value;\n}\n"],"mappings":"skCAAA,MAAO,CAAAA,SAAS,KAAM,WAAW,CAAC,OAAAC,aAAA,mDAElC,OAASC,GAAG,cACZ,OAASC,KAAK,CAAEC,mBAAmB,GAAI,CAAAC,KAAK,uBAC5C,OAASC,kBAAkB,GAAI,CAAAC,IAAI,sBACnC,MAAO,CAAAC,YAAY,sBAAuB,GAEpC,CAAAC,aAAa,UAAAC,aAAA,EAAAC,SAAA,CAAAF,aAAA,CAAAC,aAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,aAAA,EAIjB,SAAAA,cAAYK,OAAO,CAAEC,KAAK,CAAE,KAAAC,KAAA,CAAAC,eAAA,MAAAR,aAAA,EAC1BT,SAAS,CACP,MAAO,CAAAc,OAAO,GAAK,QAAQ,oFACwDA,OAAO,CAC3F,CACDd,SAAS,CACPe,KAAK,WAAY,CAAAP,YAAY,2FAC6DO,KAAK,CAChG,CACDC,KAAA,CAAAJ,MAAA,CAAAL,IAAA,MAAM,CAAEW,IAAI,CAAE,OAAO,CAAEJ,OAAO,CAAPA,OAAO,CAAEC,KAAK,CAALA,KAAM,CAAC,CAAE,CAACA,KAAK,CAAC,EAChDC,KAAA,CAAKG,QAAQ,CAAGL,OAAO,CACvBE,KAAA,CAAKI,MAAM,CAAGL,KAAK,CAAC,OAAAC,KAAA,CACtB,CAACK,YAAA,CAAAZ,aAAA,GAAAa,GAAA,YAAAP,KAAA,CAED,SAAAQ,SAAA,CAAW,CACT,4BAA6B,IAAI,CAACC,QAAQ,CAC5C,CAAC,GAAAF,GAAA,gBAAAP,KAAA,CAED,SAAAU,aAAA,CAAe,CACb,GAAM,CAAAV,KAAK,CAAGb,GAAG,CAAC,IAAI,CAACkB,MAAM,CAAC,CAC9BM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,QAAQ,CAAEJ,KAAK,CAAC,CACjC,MAAO,CAAAA,KAAK,CACd,CAAC,WAAAN,aAAA,GA1ByBD,YAAY,EA6BxC,MAAO,SAAS,CAAAoB,mBAAmBA,CAACd,OAAO,CAAEC,KAAK,CAAE,CAClD,GAAIc,OAAO,CAAE,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,sBAAA,CAGX,GAAM,CAAAC,uBAAuB,CAAG,MAAO,CAAAC,IAAI,GAAK,WAAW,CAI3D,GAAM,CAAAC,kBAAkB,CACtB,EAAAL,qBAAA,CAAA7B,aAAa,CAACmC,oBAAoB,gBAAAL,sBAAA,CAAlCD,qBAAA,CAAoCO,gBAAgB,gBAAAL,sBAAA,CAApDD,sBAAA,CAAsDO,iBAAiB,eAAvEN,sBAAA,CACIO,oBAAoB,IAAK,aAAa,CAE5C,GAAIN,uBAAuB,EAAIE,kBAAkB,CAAE,CAGjD,MAAO,CAAA9B,KAAK,CAAC,CACXE,IAAI,CAAC,CAACQ,KAAK,CAAC,CAAE,SAAAyB,IAAA,MAAAC,KAAA,CAAAC,cAAA,CAAAF,IAAA,IAAEG,CAAC,CAAAF,KAAA,UAAM,CAAAf,OAAO,CAACC,GAAG,CAAIb,OAAO,KAAI6B,CAAC,CAAG,GAAC,CACtD5B,KAAK,CACN,CAAC,CACJ,CAAC,IAAM,CACL,MAAO,IAAI,CAAAN,aAAa,CAACK,OAAO,CAAEX,KAAK,CAACY,KAAK,CAAC,CAAC,CACjD,CACF,CAEA,MAAO,CAAAA,KAAK,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}
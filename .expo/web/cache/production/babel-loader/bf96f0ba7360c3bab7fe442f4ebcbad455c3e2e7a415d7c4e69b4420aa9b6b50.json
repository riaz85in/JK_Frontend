{"ast":null,"code":"import React from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";import registerRootComponent from\"./fork/expo/registerRootComponent\";import{SplashScreen}from\"./views/Splash\";import{jsx as _jsx}from\"react/jsx-runtime\";function isBaseObject(obj){if(Object.prototype.toString.call(obj)!==\"[object Object]\"){return false;}var proto=Object.getPrototypeOf(obj);if(proto===null){return true;}return proto===Object.prototype;}function isErrorShaped(error){return error&&typeof error===\"object\"&&typeof error.name===\"string\"&&typeof error.message===\"string\";}function convertError(error){if(isErrorShaped(error)){return error;}if(process.env.NODE_ENV===\"development\"){if(error==null){return new Error(\"A null/undefined error was thrown.\");}}if(isBaseObject(error)){return new Error(JSON.stringify(error));}return new Error(String(error));}export function renderRootComponent(Component){try{SplashScreen.preventAutoHideAsync();registerRootComponent(Component);}catch(e){SplashScreen.hideAsync();var error=convertError(e);registerRootComponent(function(){return _jsx(View,{});});if(Platform.OS===\"web\"){console.error(error);console.error(\"A runtime error has occurred while rendering the root component.\");}setTimeout(function(){throw error;});}}","map":{"version":3,"names":["React","Platform","View","registerRootComponent","SplashScreen","jsx","_jsx","isBaseObject","obj","Object","prototype","toString","call","proto","getPrototypeOf","isErrorShaped","error","name","message","convertError","process","env","NODE_ENV","Error","JSON","stringify","String","renderRootComponent","Component","preventAutoHideAsync","e","hideAsync","OS","console","setTimeout"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/renderRootComponent.tsx"],"sourcesContent":["import React from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport registerRootComponent from \"./fork/expo/registerRootComponent\";\nimport { SplashScreen } from \"./views/Splash\";\n\nfunction isBaseObject(obj: any) {\n  if (Object.prototype.toString.call(obj) !== \"[object Object]\") {\n    return false;\n  }\n  const proto = Object.getPrototypeOf(obj);\n  if (proto === null) {\n    return true;\n  }\n  return proto === Object.prototype;\n}\n\nfunction isErrorShaped(error: any): error is Error {\n  return (\n    error &&\n    typeof error === \"object\" &&\n    typeof error.name === \"string\" &&\n    typeof error.message === \"string\"\n  );\n}\n\n/**\n * After we throw this error, any number of tools could handle it.\n * This check ensures the error is always in a reason state before surfacing it to the runtime.\n */\nfunction convertError(error: any) {\n  if (isErrorShaped(error)) {\n    return error;\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (error == null) {\n      return new Error(\"A null/undefined error was thrown.\");\n    }\n  }\n\n  if (isBaseObject(error)) {\n    return new Error(JSON.stringify(error));\n  }\n\n  return new Error(String(error));\n}\n\n/**\n * Register and mount the root component using the predefined rendering\n * method. This function ensures the Splash Screen and errors are handled correctly.\n */\nexport function renderRootComponent(Component: React.ComponentType<any>) {\n  try {\n    SplashScreen.preventAutoHideAsync();\n\n    registerRootComponent(Component);\n  } catch (e) {\n    // Hide the splash screen if there was an error so the user can see it.\n    SplashScreen.hideAsync();\n\n    const error = convertError(e);\n    // Prevent the app from throwing confusing:\n    //  ERROR  Invariant Violation: \"main\" has not been registered. This can happen if:\n    // * Metro (the local dev server) is run from the wrong folder. Check if Metro is running, stop it and restart it in the current project.\n    // * A module failed to load due to an error and `AppRegistry.registerComponent` wasn't called.\n    registerRootComponent(() => <View />);\n\n    // Console is pretty useless on native, on web you get interactive stack traces.\n    if (Platform.OS === \"web\") {\n      console.error(error);\n      console.error(\n        `A runtime error has occurred while rendering the root component.`\n      );\n    }\n\n    // Give React a tick to render before throwing.\n    setTimeout(() => {\n      throw error;\n    });\n\n    // TODO: Render a production-only error screen.\n  }\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,QAAA,qDAAAC,IAAA,0CAG1B,MAAO,CAAAC,qBAAqB,yCAC5B,OAASC,YAAY,sBAAyB,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,QAAS,CAAAC,YAAYA,CAACC,GAAQ,CAAE,CAC9B,GAAIC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,GAAG,CAAC,GAAK,iBAAiB,CAAE,CAC7D,MAAO,MAAK,CACd,CACA,GAAM,CAAAK,KAAK,CAAGJ,MAAM,CAACK,cAAc,CAACN,GAAG,CAAC,CACxC,GAAIK,KAAK,GAAK,IAAI,CAAE,CAClB,MAAO,KAAI,CACb,CACA,MAAO,CAAAA,KAAK,GAAKJ,MAAM,CAACC,SAAS,CACnC,CAEA,QAAS,CAAAK,aAAaA,CAACC,KAAU,CAAkB,CACjD,MACE,CAAAA,KAAK,EACL,MAAO,CAAAA,KAAK,GAAK,QAAQ,EACzB,MAAO,CAAAA,KAAK,CAACC,IAAI,GAAK,QAAQ,EAC9B,MAAO,CAAAD,KAAK,CAACE,OAAO,GAAK,QAAQ,CAErC,CAMA,QAAS,CAAAC,YAAYA,CAACH,KAAU,CAAE,CAChC,GAAID,aAAa,CAACC,KAAK,CAAC,CAAE,CACxB,MAAO,CAAAA,KAAK,CACd,CAEA,GAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1C,GAAIN,KAAK,EAAI,IAAI,CAAE,CACjB,MAAO,IAAI,CAAAO,KAAK,CAAC,oCAAoC,CAAC,CACxD,CACF,CAEA,GAAIhB,YAAY,CAACS,KAAK,CAAC,CAAE,CACvB,MAAO,IAAI,CAAAO,KAAK,CAACC,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,CAAC,CACzC,CAEA,MAAO,IAAI,CAAAO,KAAK,CAACG,MAAM,CAACV,KAAK,CAAC,CAAC,CACjC,CAMA,MAAO,SAAS,CAAAW,mBAAmBA,CAACC,SAAmC,CAAE,CACvE,GAAI,CACFxB,YAAY,CAACyB,oBAAoB,EAAE,CAEnC1B,qBAAqB,CAACyB,SAAS,CAAC,CAClC,CAAE,MAAOE,CAAC,CAAE,CAEV1B,YAAY,CAAC2B,SAAS,EAAE,CAExB,GAAM,CAAAf,KAAK,CAAGG,YAAY,CAACW,CAAC,CAAC,CAK7B3B,qBAAqB,CAAC,iBAAM,CAAAG,IAAA,CAACJ,IAAI,IAAG,GAAC,CAGrC,GAAID,QAAQ,CAAC+B,EAAE,GAAK,KAAK,CAAE,CACzBC,OAAO,CAACjB,KAAK,CAACA,KAAK,CAAC,CACpBiB,OAAO,CAACjB,KAAK,oEAEZ,CACH,CAGAkB,UAAU,CAAC,UAAM,CACf,KAAM,CAAAlB,KAAK,CACb,CAAC,CAAC,CAGJ,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
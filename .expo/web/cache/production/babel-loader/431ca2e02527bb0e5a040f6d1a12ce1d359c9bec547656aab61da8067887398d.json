{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});function openFileInEditor(file,lineNumber){if(process.env.NODE_ENV!==\"production\"){var baseUrl=window.location.protocol+\"//\"+window.location.host;fetch(baseUrl+\"/open-stack-frame\",{method:\"POST\",body:JSON.stringify({file:file,lineNumber:lineNumber})});}}exports.default=openFileInEditor;","map":{"version":3,"names":["openFileInEditor","file","lineNumber","process","env","NODE_ENV","baseUrl","window","location","protocol","host","fetch","method","body","JSON","stringify","exports","default"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\modules\\openFileInEditor\\index.ts"],"sourcesContent":["declare const process: any;\n\nfunction openFileInEditor(file: string, lineNumber: number) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // TODO: This is not a great URL since it now blocks users from accessing the `/open-stack-frame` url in their router\n    // ideally it would be something like `/_devtools/open-stack-frame`.\n    const baseUrl = window.location.protocol + \"//\" + window.location.host;\n\n    fetch(baseUrl + \"/open-stack-frame\", {\n      method: \"POST\",\n      body: JSON.stringify({ file, lineNumber }),\n    });\n  }\n}\n\nexport default openFileInEditor;\n"],"mappings":"sEAEA,QAAS,CAAAA,gBAAgBA,CAACC,IAAY,CAAEC,UAAkB,EACxD,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CAGzC,GAAM,CAAAC,OAAO,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAG,IAAI,CAAGF,MAAM,CAACC,QAAQ,CAACE,IAAI,CAEtEC,KAAK,CAACL,OAAO,CAAG,mBAAmB,CAAE,CACnCM,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEd,IAAI,CAAJA,IAAI,CAAEC,UAAU,CAAVA,UAAU,CAAE,C,CAC1C,CAAC,C,CAEN,CAEAc,OAAA,CAAAC,OAAA,CAAejB,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
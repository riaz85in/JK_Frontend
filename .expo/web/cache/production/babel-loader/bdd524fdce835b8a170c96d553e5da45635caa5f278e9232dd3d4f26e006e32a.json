{"ast":null,"code":"import{useNavigation as useUpstreamNavigation}from\"@react-navigation/native\";import React from\"react\";import{useContextKey}from\"./Route\";import{getNameFromFilePath}from\"./matchers\";export function useNavigation(parent){var navigation=useUpstreamNavigation();var contextKey=useContextKey();var normalizedParent=React.useMemo(function(){if(!parent){return null;}var normalized=getNameFromFilePath(parent);if(parent.startsWith(\".\")){return relativePaths(contextKey,parent);}return normalized;},[contextKey,parent]);if(normalizedParent!=null){var parentNavigation=navigation.getParent(normalizedParent);if(!parentNavigation){throw new Error(\"Could not find parent navigation with route \\\"\"+parent+\"\\\".\"+(normalizedParent!==parent?\" (normalized: \"+normalizedParent+\")\":\"\"));}return parentNavigation;}return navigation;}export function resolveParentId(contextKey,parentId){if(!parentId){return null;}if(parentId.startsWith(\".\")){return getNameFromFilePath(relativePaths(contextKey,parentId));}return getNameFromFilePath(parentId);}function relativePaths(from,to){var fromParts=from.split(\"/\").filter(Boolean);var toParts=to.split(\"/\").filter(Boolean);for(var part of toParts){if(part===\"..\"){if(fromParts.length===0){throw new Error(\"Cannot resolve path \\\"\"+to+\"\\\" relative to \\\"\"+from+\"\\\"\");}fromParts.pop();}else if(part===\".\"){}else{fromParts.push(part);}}return\"/\"+fromParts.join(\"/\");}","map":{"version":3,"names":["useNavigation","useUpstreamNavigation","React","useContextKey","getNameFromFilePath","parent","navigation","contextKey","normalizedParent","useMemo","normalized","startsWith","relativePaths","parentNavigation","getParent","Error","resolveParentId","parentId","from","to","fromParts","split","filter","Boolean","toParts","part","length","pop","push","join"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/useNavigation.ts"],"sourcesContent":["import {\n  useNavigation as useUpstreamNavigation,\n  NavigationProp,\n} from \"@react-navigation/native\";\nimport React from \"react\";\n\nimport { useContextKey } from \"./Route\";\nimport { getNameFromFilePath } from \"./matchers\";\n\n/**\n * Return the navigation object for the current route.\n * @param parent Provide an absolute path like `/(root)` to the parent route or a relative path like `../../` to the parent route.\n * @returns the navigation object for the provided route.\n */\nexport function useNavigation(\n  parent?: string\n): NavigationProp<ReactNavigation.RootParamList> {\n  const navigation = useUpstreamNavigation<any>();\n\n  const contextKey = useContextKey();\n  const normalizedParent = React.useMemo(() => {\n    if (!parent) {\n      return null;\n    }\n    const normalized = getNameFromFilePath(parent);\n\n    if (parent.startsWith(\".\")) {\n      return relativePaths(contextKey, parent);\n    }\n    return normalized;\n  }, [contextKey, parent]);\n\n  if (normalizedParent != null) {\n    const parentNavigation = navigation.getParent(normalizedParent);\n\n    // TODO: Maybe print a list of parents...\n\n    if (!parentNavigation) {\n      throw new Error(\n        `Could not find parent navigation with route \"${parent}\".` +\n          (normalizedParent !== parent\n            ? ` (normalized: ${normalizedParent})`\n            : \"\")\n      );\n    }\n    return parentNavigation;\n  }\n  return navigation;\n}\n\nexport function resolveParentId(\n  contextKey: string,\n  parentId?: string | null\n): string | null {\n  if (!parentId) {\n    return null;\n  }\n\n  if (parentId.startsWith(\".\")) {\n    return getNameFromFilePath(relativePaths(contextKey, parentId));\n  }\n  return getNameFromFilePath(parentId);\n}\n\n// Resolve a path like `../` relative to a path like `/foo/bar`\nfunction relativePaths(from: string, to: string): string {\n  const fromParts = from.split(\"/\").filter(Boolean);\n  const toParts = to.split(\"/\").filter(Boolean);\n\n  for (const part of toParts) {\n    if (part === \"..\") {\n      if (fromParts.length === 0) {\n        throw new Error(`Cannot resolve path \"${to}\" relative to \"${from}\"`);\n      }\n      fromParts.pop();\n    } else if (part === \".\") {\n      // Ignore\n    } else {\n      fromParts.push(part);\n    }\n  }\n\n  return \"/\" + fromParts.join(\"/\");\n}\n"],"mappings":"AAAA,OACEA,aAAa,GAAI,CAAAC,qBAAqB,KAEjC,0BAA0B,CACjC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,OAASC,aAAa,eACtB,OAASC,mBAAmB,kBAO5B,MAAO,SAAS,CAAAJ,aAAaA,CAC3BK,MAAe,CACgC,CAC/C,GAAM,CAAAC,UAAU,CAAGL,qBAAqB,EAAO,CAE/C,GAAM,CAAAM,UAAU,CAAGJ,aAAa,EAAE,CAClC,GAAM,CAAAK,gBAAgB,CAAGN,KAAK,CAACO,OAAO,CAAC,UAAM,CAC3C,GAAI,CAACJ,MAAM,CAAE,CACX,MAAO,KAAI,CACb,CACA,GAAM,CAAAK,UAAU,CAAGN,mBAAmB,CAACC,MAAM,CAAC,CAE9C,GAAIA,MAAM,CAACM,UAAU,CAAC,GAAG,CAAC,CAAE,CAC1B,MAAO,CAAAC,aAAa,CAACL,UAAU,CAAEF,MAAM,CAAC,CAC1C,CACA,MAAO,CAAAK,UAAU,CACnB,CAAC,CAAE,CAACH,UAAU,CAAEF,MAAM,CAAC,CAAC,CAExB,GAAIG,gBAAgB,EAAI,IAAI,CAAE,CAC5B,GAAM,CAAAK,gBAAgB,CAAGP,UAAU,CAACQ,SAAS,CAACN,gBAAgB,CAAC,CAI/D,GAAI,CAACK,gBAAgB,CAAE,CACrB,KAAM,IAAI,CAAAE,KAAK,CACb,iDAAgDV,MAAM,QACnDG,gBAAgB,GAAKH,MAAM,kBACPG,gBAAgB,KACjC,EAAE,CAAC,CACV,CACH,CACA,MAAO,CAAAK,gBAAgB,CACzB,CACA,MAAO,CAAAP,UAAU,CACnB,CAEA,MAAO,SAAS,CAAAU,eAAeA,CAC7BT,UAAkB,CAClBU,QAAwB,CACT,CACf,GAAI,CAACA,QAAQ,CAAE,CACb,MAAO,KAAI,CACb,CAEA,GAAIA,QAAQ,CAACN,UAAU,CAAC,GAAG,CAAC,CAAE,CAC5B,MAAO,CAAAP,mBAAmB,CAACQ,aAAa,CAACL,UAAU,CAAEU,QAAQ,CAAC,CAAC,CACjE,CACA,MAAO,CAAAb,mBAAmB,CAACa,QAAQ,CAAC,CACtC,CAGA,QAAS,CAAAL,aAAaA,CAACM,IAAY,CAAEC,EAAU,CAAU,CACvD,GAAM,CAAAC,SAAS,CAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CACjD,GAAM,CAAAC,OAAO,CAAGL,EAAE,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAE7C,IAAK,GAAM,CAAAE,IAAI,GAAI,CAAAD,OAAO,CAAE,CAC1B,GAAIC,IAAI,GAAK,IAAI,CAAE,CACjB,GAAIL,SAAS,CAACM,MAAM,GAAK,CAAC,CAAE,CAC1B,KAAM,IAAI,CAAAX,KAAK,0BAAyBI,EAAE,qBAAkBD,IAAI,MAAI,CACtE,CACAE,SAAS,CAACO,GAAG,EAAE,CACjB,CAAC,IAAM,IAAIF,IAAI,GAAK,GAAG,CAAE,CAEzB,CAAC,IAAM,CACLL,SAAS,CAACQ,IAAI,CAACH,IAAI,CAAC,CACtB,CACF,CAEA,MAAO,GAAG,CAAGL,SAAS,CAACS,IAAI,CAAC,GAAG,CAAC,CAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{StackRouter,useNavigationBuilder}from\"@react-navigation/native\";import*as React from\"react\";import{Screen}from\"./Screen\";import{useContextKey}from\"../Route\";import{useFilterScreenChildren}from\"../layouts/withLayoutContext\";import{useSortedScreens}from\"../useScreens\";import{jsx as _jsx}from\"react/jsx-runtime\";export var NavigatorContext=React.createContext(null);if(process.env.NODE_ENV!==\"production\"){NavigatorContext.displayName=\"NavigatorContext\";}export function Navigator(_ref){var initialRouteName=_ref.initialRouteName,screenOptions=_ref.screenOptions,children=_ref.children,router=_ref.router;var contextKey=useContextKey();var _useFilterScreenChild=useFilterScreenChildren(children,{isCustomNavigator:true,contextKey:contextKey}),screens=_useFilterScreenChild.screens,otherSlot=_useFilterScreenChild.children;var sorted=useSortedScreens(screens!=null?screens:[]);if(!sorted.length){console.warn(\"Navigator at \\\"\"+contextKey+\"\\\" has no children.\");return null;}return _jsx(QualifiedNavigator,{initialRouteName:initialRouteName,screenOptions:screenOptions,screens:sorted,contextKey:contextKey,router:router,children:otherSlot});}function QualifiedNavigator(_ref2){var initialRouteName=_ref2.initialRouteName,screenOptions=_ref2.screenOptions,children=_ref2.children,screens=_ref2.screens,contextKey=_ref2.contextKey,_ref2$router=_ref2.router,router=_ref2$router===void 0?StackRouter:_ref2$router;var _useNavigationBuilder=useNavigationBuilder(router,{id:contextKey,children:screens,screenOptions:screenOptions,initialRouteName:initialRouteName}),state=_useNavigationBuilder.state,navigation=_useNavigationBuilder.navigation,descriptors=_useNavigationBuilder.descriptors,NavigationContent=_useNavigationBuilder.NavigationContent;return _jsx(NavigatorContext.Provider,{value:{contextKey:contextKey,state:state,navigation:navigation,descriptors:descriptors,router:router},children:_jsx(NavigationContent,{children:children})});}export function useNavigatorContext(){var context=React.useContext(NavigatorContext);if(!context){throw new Error(\"useNavigatorContext must be used within a <Navigator />\");}return context;}export function useSlot(){var _descriptors$current$,_descriptors$current$2;var context=useNavigatorContext();var state=context.state,descriptors=context.descriptors;var current=state.routes.find(function(route,i){return state.index===i;});if(!current){return null;}return(_descriptors$current$=(_descriptors$current$2=descriptors[current.key])==null?void 0:_descriptors$current$2.render())!=null?_descriptors$current$:null;}export function Slot(props){var contextKey=useContextKey();var context=React.useContext(NavigatorContext);if((context==null?void 0:context.contextKey)!==contextKey){return _jsx(Navigator,_objectSpread(_objectSpread({},props),{},{children:_jsx(QualifiedSlot,{})}));}return _jsx(QualifiedSlot,{});}export function QualifiedSlot(){return useSlot();}export function DefaultNavigator(){return _jsx(Navigator,{children:_jsx(QualifiedSlot,{})});}Navigator.Slot=Slot;Navigator.useContext=useNavigatorContext;Navigator.Screen=Screen;","map":{"version":3,"names":["StackRouter","useNavigationBuilder","React","Screen","useContextKey","useFilterScreenChildren","useSortedScreens","jsx","_jsx","NavigatorContext","createContext","process","env","NODE_ENV","displayName","Navigator","_ref","initialRouteName","screenOptions","children","router","contextKey","_useFilterScreenChild","isCustomNavigator","screens","otherSlot","sorted","length","console","warn","QualifiedNavigator","_ref2","_ref2$router","_useNavigationBuilder","id","state","navigation","descriptors","NavigationContent","Provider","value","useNavigatorContext","context","useContext","Error","useSlot","_descriptors$current$","_descriptors$current$2","current","routes","find","route","i","index","key","render","Slot","props","_objectSpread","QualifiedSlot","DefaultNavigator"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/views/Navigator.tsx"],"sourcesContent":["import {\n  RouterFactory,\n  StackRouter,\n  useNavigationBuilder,\n} from \"@react-navigation/native\";\nimport * as React from \"react\";\n\nimport { Screen } from \"./Screen\";\nimport { useContextKey } from \"../Route\";\nimport { useFilterScreenChildren } from \"../layouts/withLayoutContext\";\nimport { useSortedScreens } from \"../useScreens\";\n\ntype NavigatorTypes = ReturnType<typeof useNavigationBuilder>;\n\n// TODO: This might already exist upstream, maybe something like `useCurrentRender` ?\nexport const NavigatorContext = React.createContext<{\n  contextKey: string;\n  state: NavigatorTypes[\"state\"];\n  navigation: NavigatorTypes[\"navigation\"];\n  descriptors: NavigatorTypes[\"descriptors\"];\n  router: RouterFactory<any, any, any>;\n} | null>(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigatorContext.displayName = \"NavigatorContext\";\n}\n\nexport type NavigatorProps = {\n  initialRouteName?: Parameters<\n    typeof useNavigationBuilder\n  >[1][\"initialRouteName\"];\n  screenOptions?: Parameters<typeof useNavigationBuilder>[1][\"screenOptions\"];\n  children?: Parameters<typeof useNavigationBuilder>[1][\"children\"];\n  router?: Parameters<typeof useNavigationBuilder>[0];\n};\n\n/** An unstyled custom navigator. Good for basic web layouts */\nexport function Navigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  router,\n}: NavigatorProps) {\n  const contextKey = useContextKey();\n\n  // Allows adding Screen components as children to configure routes.\n  const { screens, children: otherSlot } = useFilterScreenChildren(children, {\n    isCustomNavigator: true,\n    contextKey,\n  });\n\n  const sorted = useSortedScreens(screens ?? []);\n\n  if (!sorted.length) {\n    console.warn(`Navigator at \"${contextKey}\" has no children.`);\n    return null;\n  }\n\n  return (\n    <QualifiedNavigator\n      initialRouteName={initialRouteName}\n      screenOptions={screenOptions}\n      screens={sorted}\n      contextKey={contextKey}\n      router={router}\n    >\n      {otherSlot}\n    </QualifiedNavigator>\n  );\n}\n\nfunction QualifiedNavigator({\n  initialRouteName,\n  screenOptions,\n  children,\n  screens,\n  contextKey,\n  router = StackRouter,\n}: NavigatorProps & { contextKey: string; screens: React.ReactNode[] }) {\n  const { state, navigation, descriptors, NavigationContent } =\n    useNavigationBuilder(router, {\n      // Used for getting the parent with navigation.getParent('/normalized/path')\n      id: contextKey,\n      children: screens,\n      screenOptions,\n      initialRouteName,\n    });\n\n  return (\n    <NavigatorContext.Provider\n      value={{\n        contextKey,\n        state,\n        navigation,\n        descriptors,\n        router,\n      }}\n    >\n      <NavigationContent>{children}</NavigationContent>\n    </NavigatorContext.Provider>\n  );\n}\n\nexport function useNavigatorContext() {\n  const context = React.useContext(NavigatorContext);\n  if (!context) {\n    throw new Error(\"useNavigatorContext must be used within a <Navigator />\");\n  }\n  return context;\n}\n\nexport function useSlot() {\n  const context = useNavigatorContext();\n\n  const { state, descriptors } = context;\n\n  const current = state.routes.find((route, i) => {\n    return state.index === i;\n  });\n\n  if (!current) {\n    return null;\n  }\n\n  return descriptors[current.key]?.render() ?? null;\n}\n\n/** Renders the currently selected content. */\nexport function Slot(props: Omit<NavigatorProps, \"children\">) {\n  const contextKey = useContextKey();\n  const context = React.useContext(NavigatorContext);\n  // Ensure the context is for the current contextKey\n  if (context?.contextKey !== contextKey) {\n    // Qualify the content and re-export.\n    return (\n      <Navigator {...props}>\n        <QualifiedSlot />\n      </Navigator>\n    );\n  }\n\n  return <QualifiedSlot />;\n}\n\nexport function QualifiedSlot() {\n  return useSlot();\n}\n\nexport function DefaultNavigator() {\n  return (\n    <Navigator>\n      <QualifiedSlot />\n    </Navigator>\n  );\n}\n\nNavigator.Slot = Slot;\nNavigator.useContext = useNavigatorContext;\n\n/** Used to configure route settings. */\nNavigator.Screen = Screen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
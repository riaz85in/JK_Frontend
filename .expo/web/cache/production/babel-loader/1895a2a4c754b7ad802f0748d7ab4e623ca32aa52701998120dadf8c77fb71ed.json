{"ast":null,"code":"import{useEffect,useRef}from'react';import{initialUpdaterRun}from\"../animation\";import{makeMutable,startMapper,stopMapper}from\"../core\";export function useDerivedValue(processor,dependencies){var _a;var initRef=useRef(null);var inputs=Object.values((_a=processor._closure)!==null&&_a!==void 0?_a:{});if(dependencies===undefined){dependencies=[].concat(inputs,[processor.__workletHash]);}else{dependencies.push(processor.__workletHash);}if(initRef.current===null){initRef.current=makeMutable(initialUpdaterRun(processor));}var sharedValue=initRef.current;useEffect(function(){var fun=function fun(){'worklet';sharedValue.value=processor();};var mapperId=startMapper(fun,inputs,[sharedValue]);return function(){stopMapper(mapperId);};},dependencies);useEffect(function(){return function(){initRef.current=null;};},[]);return sharedValue;}","map":{"version":3,"names":["useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","useDerivedValue","processor","dependencies","_a","initRef","inputs","Object","values","_closure","undefined","concat","__workletHash","push","current","sharedValue","fun","value","mapperId"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/react-native-reanimated/lib/reanimated2/hook/useDerivedValue.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nexport function useDerivedValue(processor, dependencies) {\n    var _a;\n    const initRef = useRef(null);\n    const inputs = Object.values((_a = processor._closure) !== null && _a !== void 0 ? _a : {});\n    // build dependencies\n    if (dependencies === undefined) {\n        dependencies = [...inputs, processor.__workletHash];\n    }\n    else {\n        dependencies.push(processor.__workletHash);\n    }\n    if (initRef.current === null) {\n        initRef.current = makeMutable(initialUpdaterRun(processor));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const sharedValue = initRef.current;\n    useEffect(() => {\n        const fun = () => {\n            'worklet';\n            sharedValue.value = processor();\n        };\n        const mapperId = startMapper(fun, inputs, [sharedValue]);\n        return () => {\n            stopMapper(mapperId);\n        };\n    }, dependencies);\n    useEffect(() => {\n        return () => {\n            initRef.current = null;\n        };\n    }, []);\n    return sharedValue;\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OAASC,iBAAiB,oBAC1B,OAASC,WAAW,CAAEC,WAAW,CAAEC,UAAU,eAC7C,MAAO,SAAS,CAAAC,eAAeA,CAACC,SAAS,CAAEC,YAAY,CAAE,CACrD,GAAI,CAAAC,EAAE,CACN,GAAM,CAAAC,OAAO,CAAGT,MAAM,CAAC,IAAI,CAAC,CAC5B,GAAM,CAAAU,MAAM,CAAGC,MAAM,CAACC,MAAM,CAAC,CAACJ,EAAE,CAAGF,SAAS,CAACO,QAAQ,IAAM,IAAI,EAAIL,EAAE,GAAK,IAAK,EAAC,CAAGA,EAAE,CAAG,CAAC,CAAC,CAAC,CAE3F,GAAID,YAAY,GAAKO,SAAS,CAAE,CAC5BP,YAAY,IAAAQ,MAAA,CAAOL,MAAM,EAAEJ,SAAS,CAACU,aAAa,EAAC,CACvD,CAAC,IACI,CACDT,YAAY,CAACU,IAAI,CAACX,SAAS,CAACU,aAAa,CAAC,CAC9C,CACA,GAAIP,OAAO,CAACS,OAAO,GAAK,IAAI,CAAE,CAC1BT,OAAO,CAACS,OAAO,CAAGhB,WAAW,CAACD,iBAAiB,CAACK,SAAS,CAAC,CAAC,CAC/D,CAEA,GAAM,CAAAa,WAAW,CAAGV,OAAO,CAACS,OAAO,CACnCnB,SAAS,CAAC,UAAM,CACZ,GAAM,CAAAqB,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CACd,SAAS,CACTD,WAAW,CAACE,KAAK,CAAGf,SAAS,EAAE,CACnC,CAAC,CACD,GAAM,CAAAgB,QAAQ,CAAGnB,WAAW,CAACiB,GAAG,CAAEV,MAAM,CAAE,CAACS,WAAW,CAAC,CAAC,CACxD,MAAO,WAAM,CACTf,UAAU,CAACkB,QAAQ,CAAC,CACxB,CAAC,CACL,CAAC,CAAEf,YAAY,CAAC,CAChBR,SAAS,CAAC,UAAM,CACZ,MAAO,WAAM,CACTU,OAAO,CAACS,OAAO,CAAG,IAAI,CAC1B,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAAAC,WAAW,CACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
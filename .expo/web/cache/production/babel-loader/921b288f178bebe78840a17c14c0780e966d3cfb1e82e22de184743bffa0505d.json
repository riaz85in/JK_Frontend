{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"children\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from\"react\";import{useContextKey}from\"../Route\";import{useSortedScreens}from\"../useScreens\";import{Screen}from\"../views/Screen\";import{jsx as _jsx}from\"react/jsx-runtime\";export function useFilterScreenChildren(children){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},isCustomNavigator=_ref.isCustomNavigator,contextKey=_ref.contextKey;return React.useMemo(function(){var customChildren=[];var screens=React.Children.map(children,function(child){if(React.isValidElement(child)&&child&&child.type===Screen){if(!child.props.name){throw new Error(\"<Screen /> component in `default export` at `app\"+contextKey+\"/_layout` must have a `name` prop when used as a child of a Layout Route.\");}if(process.env.NODE_ENV!==\"production\"){if([\"children\",\"component\",\"getComponent\"].some(function(key){return key in child.props;})){throw new Error(\"<Screen /> component in `default export` at `app\"+contextKey+\"/_layout` must not have a `children`, `component`, or `getComponent` prop when used as a child of a Layout Route\");}}return child.props;}else{if(isCustomNavigator){customChildren.push(child);}else{console.warn(\"Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \\\"app\"+contextKey+\"/_layout\\\"\");}}});if(process.env.NODE_ENV!==\"production\"){var names=screens==null?void 0:screens.map(function(screen){return screen.name;});if(names&&new Set(names).size!==names.length){throw new Error(\"Screen names must be unique: \"+names);}}return{screens:screens,children:customChildren};},[children]);}export function withLayoutContext(Nav,processor){var Navigator=React.forwardRef(function(_ref2,ref){var userDefinedChildren=_ref2.children,props=_objectWithoutProperties(_ref2,_excluded);var contextKey=useContextKey();var _useFilterScreenChild=useFilterScreenChildren(userDefinedChildren,{contextKey:contextKey}),screens=_useFilterScreenChild.screens;var processed=processor?processor(screens!=null?screens:[]):screens;var sorted=useSortedScreens(processed!=null?processed:[]);if(!sorted.length){return null;}return _jsx(Nav,_objectSpread(_objectSpread({},props),{},{id:contextKey,ref:ref,children:sorted}));});Navigator.Screen=Screen;return Navigator;}","map":{"version":3,"names":["React","useContextKey","useSortedScreens","Screen","jsx","_jsx","useFilterScreenChildren","children","_ref","arguments","length","undefined","isCustomNavigator","contextKey","useMemo","customChildren","screens","Children","map","child","isValidElement","type","props","name","Error","process","env","NODE_ENV","some","key","push","console","warn","names","screen","Set","size","withLayoutContext","Nav","processor","Navigator","forwardRef","_ref2","ref","userDefinedChildren","_objectWithoutProperties","_excluded","_useFilterScreenChild","processed","sorted","_objectSpread","id"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/layouts/withLayoutContext.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useContextKey } from \"../Route\";\nimport { PickPartial } from \"../types\";\nimport { useSortedScreens, ScreenProps } from \"../useScreens\";\nimport { Screen } from \"../views/Screen\";\n\nexport function useFilterScreenChildren(\n  children: React.ReactNode,\n  {\n    isCustomNavigator,\n    contextKey,\n  }: {\n    isCustomNavigator?: boolean;\n    /** Used for sending developer hints */\n    contextKey?: string;\n  } = {}\n) {\n  return React.useMemo(() => {\n    const customChildren: any[] = [];\n    const screens = React.Children.map(children, (child) => {\n      if (React.isValidElement(child) && child && child.type === Screen) {\n        if (!child.props.name) {\n          throw new Error(\n            `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n          );\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n          if (\n            [\"children\", \"component\", \"getComponent\"].some(\n              (key) => key in child.props\n            )\n          ) {\n            throw new Error(\n              `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n            );\n          }\n        }\n        return child.props;\n      } else {\n        if (isCustomNavigator) {\n          customChildren.push(child);\n        } else {\n          console.warn(\n            `Layout children must be of type Screen, all other children are ignored. To use custom children, create a custom <Layout />. Update Layout Route at: \"app${contextKey}/_layout\"`\n          );\n        }\n      }\n    });\n\n    // Add an assertion for development\n    if (process.env.NODE_ENV !== \"production\") {\n      // Assert if names are not unique\n      const names = screens?.map((screen) => screen.name);\n      if (names && new Set(names).size !== names.length) {\n        throw new Error(\"Screen names must be unique: \" + names);\n      }\n    }\n\n    return {\n      screens,\n      children: customChildren,\n    };\n  }, [children]);\n}\n\n/** Return a navigator that automatically injects matched routes and renders nothing when there are no children. Return type with children prop optional */\nexport function withLayoutContext<\n  TOptions extends object,\n  T extends React.ComponentType<any>\n>(\n  Nav: T,\n  processor?: (options: ScreenProps<TOptions>[]) => ScreenProps<TOptions>[]\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<PickPartial<React.ComponentProps<T>, \"children\">> &\n    React.RefAttributes<unknown>\n> & {\n  Screen: (props: ScreenProps<TOptions>) => null;\n} {\n  const Navigator = React.forwardRef(\n    (\n      {\n        children: userDefinedChildren,\n        ...props\n      }: PickPartial<React.ComponentProps<T>, \"children\">,\n      ref\n    ) => {\n      const contextKey = useContextKey();\n\n      const { screens } = useFilterScreenChildren(userDefinedChildren, {\n        contextKey,\n      });\n\n      const processed = processor ? processor(screens ?? []) : screens;\n\n      const sorted = useSortedScreens(processed ?? []);\n\n      // Prevent throwing an error when there are no screens.\n      if (!sorted.length) {\n        return null;\n      }\n\n      return (\n        // @ts-expect-error\n        <Nav {...props} id={contextKey} ref={ref} children={sorted} />\n      );\n    }\n  );\n\n  // @ts-expect-error\n  Navigator.Screen = Screen;\n  // @ts-expect-error\n  return Navigator;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React from\"react\";import{useNavigation}from\"../useNavigation\";export function Screen(_ref){var name=_ref.name,redirect=_ref.redirect,options=_ref.options;var navigation=useNavigation(name);React.useLayoutEffect(function(){navigation.setOptions(options!=null?options:{});},[navigation,options]);if(process.env.NODE_ENV!==\"production\"){React.useEffect(function(){if(redirect!=null){throw new Error(\"Screen components should only use the `redirect` prop when nested directly inside a Layout component.\");}},[name,redirect]);}return null;}","map":{"version":3,"names":["React","useNavigation","Screen","_ref","name","redirect","options","navigation","useLayoutEffect","setOptions","process","env","NODE_ENV","useEffect","Error"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/views/Screen.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { useNavigation } from \"../useNavigation\";\n\nexport type ScreenProps<\n  TOptions extends Record<string, any> = Record<string, any>\n> = {\n  /**\n   * Name is required when used inside a Layout component.\n   *\n   * When used in a route, this can be an absolute path like `/(root)` to the parent route or a relative path like `../../` to the parent route.\n   * This should not be used inside of a Layout component.\n   * @example `/(root)` maps to a layout route `/app/(root).tsx`.\n   */\n  name?: string;\n\n  /** Should redirect away from this screen. */\n  redirect?: boolean;\n\n  initialParams?: { [key: string]: any };\n  options?: TOptions;\n};\n\n/** Component for setting the current screen's options dynamically. */\nexport function Screen<TOptions extends object = object>({\n  name,\n  redirect,\n  options,\n}: ScreenProps<TOptions>) {\n  const navigation = useNavigation(name);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions(options ?? {});\n  }, [navigation, options]);\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (redirect != null) {\n        throw new Error(\n          \"Screen components should only use the `redirect` prop when nested directly inside a Layout component.\"\n        );\n      }\n    }, [name, redirect]);\n  }\n\n  return null;\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,aAAa,wBAsBtB,MAAO,SAAS,CAAAC,MAAMA,CAAAC,IAAA,CAII,IAHxB,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CACJC,QAAQ,CAAAF,IAAA,CAARE,QAAQ,CACRC,OAAO,CAAAH,IAAA,CAAPG,OAAO,CAEP,GAAM,CAAAC,UAAU,CAAGN,aAAa,CAACG,IAAI,CAAC,CAEtCJ,KAAK,CAACQ,eAAe,CAAC,UAAM,CAC1BD,UAAU,CAACE,UAAU,CAACH,OAAO,OAAPA,OAAO,CAAI,CAAC,CAAC,CAAC,CACtC,CAAC,CAAE,CAACC,UAAU,CAAED,OAAO,CAAC,CAAC,CAEzB,GAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CAEzCZ,KAAK,CAACa,SAAS,CAAC,UAAM,CACpB,GAAIR,QAAQ,EAAI,IAAI,CAAE,CACpB,KAAM,IAAI,CAAAS,KAAK,CACb,uGAAuG,CACxG,CACH,CACF,CAAC,CAAE,CAACV,IAAI,CAAEC,QAAQ,CAAC,CAAC,CACtB,CAEA,MAAO,KAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});var expo_modules_core_1=require(\"expo-modules-core\");if(global.__DEV__&&expo_modules_core_1.Platform.isDOMAvailable&&global.__METRO_GLOBAL_PREFIX__!=null){require(\"./setupFastRefresh\");require(\"./setupHMR\");require(\"./messageSocket\");}","map":{"version":3,"names":["expo_modules_core_1","require","global","__DEV__","Platform","isDOMAvailable","__METRO_GLOBAL_PREFIX__"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\@expo\\metro-runtime\\src\\effects.ts"],"sourcesContent":["import { Platform } from \"expo-modules-core\";\n\ndeclare let global: {\n  __DEV__?: boolean;\n  RN$Bridgeless?: boolean;\n  __METRO_GLOBAL_PREFIX__?: string;\n  __RCTProfileIsProfiling?: boolean;\n  WebSocket: any;\n};\n\nif (\n  // Only during development.\n  global.__DEV__ &&\n  // Disable for SSR\n  Platform.isDOMAvailable &&\n  // Disable for non-metro runtimes\n  // NOTE(EvanBacon): This can probably be removed in favor of `expo/metro-config` injecting this file.\n  global.__METRO_GLOBAL_PREFIX__ != null\n) {\n  require(\"./setupFastRefresh\");\n  require(\"./setupHMR\");\n  require(\"./messageSocket\");\n}\n"],"mappings":"sEAAA,IAAAA,mBAAA,CAAAC,OAAA,sBAUA,GAEEC,MAAM,CAACC,OAAO,EAEdH,mBAAA,CAAAI,QAAQ,CAACC,cAAc,EAGvBH,MAAM,CAACI,uBAAuB,EAAI,IAAI,CACtC,CACAL,OAAO,sBAAsB,CAC7BA,OAAO,cAAc,CACrBA,OAAO,mBAAmB,C"},"metadata":{},"sourceType":"script","externalDependencies":[]}
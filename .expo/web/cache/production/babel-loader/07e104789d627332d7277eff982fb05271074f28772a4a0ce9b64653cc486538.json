{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{getNameFromFilePath,matchDeepDynamicRouteName,matchDynamicName,matchGroupName,removeSupportedExtensions,stripGroupSegmentsFromPath}from\"./matchers\";export function getRecursiveTree(files){var tree={name:\"\",children:[],parents:[],node:null};for(var file of files){var parts=file.normalizedName.split(\"/\");var currentNode=tree;var _loop=function _loop(){var part=parts[i];if(i===parts.length-1&&part===\"_layout\"){if(currentNode.node){var overwritten=currentNode.node.contextKey;throw new Error(\"Higher priority Layout Route \\\"\"+file.contextKey+\"\\\" overriding redundant Layout Route \\\"\"+overwritten+\"\\\". Remove the Layout Route \\\"\"+overwritten+\"\\\" to fix this.\");}return\"continue\";}var existing=currentNode.children.find(function(item){return item.name===part;});if(existing){currentNode=existing;}else{var newNode={name:part,children:[],parents:[].concat(_toConsumableArray(currentNode.parents),[currentNode.name]),node:null};currentNode.children.push(newNode);currentNode=newNode;}};for(var i=0;i<parts.length;i++){var _ret=_loop();if(_ret===\"continue\")continue;}currentNode.node=file;}if(process.env.NODE_ENV!==\"production\"){assertDeprecatedFormat(tree);}return tree;}function assertDeprecatedFormat(tree){for(var child of tree.children){if(child.node&&child.children.length&&!child.node.normalizedName.endsWith(\"_layout\")){var ext=child.node.contextKey.split(\".\").pop();throw new Error(\"Using deprecated Layout Route format: Move `./app/\"+child.node.normalizedName+\".\"+ext+\"` to `./app/\"+child.node.normalizedName+\"/_layout.\"+ext+\"`\");}assertDeprecatedFormat(child);}}function getTreeNodesAsRouteNodes(nodes){return nodes.map(treeNodeToRouteNode).flat().filter(Boolean);}export function generateDynamicFromSegment(name){var deepDynamicName=matchDeepDynamicRouteName(name);var dynamicName=deepDynamicName!=null?deepDynamicName:matchDynamicName(name);return dynamicName?{name:dynamicName,deep:!!deepDynamicName}:null;}export function generateDynamic(name){var description=name.split(\"/\").map(function(segment){return generateDynamicFromSegment(segment);}).filter(Boolean);return description.length===0?null:description;}function collapseRouteSegments(route){return stripGroupSegmentsFromPath(route.replace(/\\/index$/,\"\"));}function getDefaultInitialRoute(node,name){return node.children.find(function(node){return collapseRouteSegments(node.route)===name;});}function applyDefaultInitialRouteName(node){var _node$children,_getDefaultInitialRou;var groupName=matchGroupName(node.route);if(!((_node$children=node.children)!=null&&_node$children.length)){return node;}var initialRouteName=groupName?(_getDefaultInitialRou=getDefaultInitialRoute(node,groupName))==null?void 0:_getDefaultInitialRou.route:undefined;var loaded=node.loadRoute();if(loaded.unstable_settings){var _loaded$unstable_sett;initialRouteName=(_loaded$unstable_sett=loaded.unstable_settings.initialRouteName)!=null?_loaded$unstable_sett:initialRouteName;if(groupName){var _loaded$unstable_sett2,_loaded$unstable_sett3;var groupSpecificInitialRouteName=(_loaded$unstable_sett2=loaded.unstable_settings)==null?void 0:(_loaded$unstable_sett3=_loaded$unstable_sett2[groupName])==null?void 0:_loaded$unstable_sett3.initialRouteName;initialRouteName=groupSpecificInitialRouteName!=null?groupSpecificInitialRouteName:initialRouteName;}}return _objectSpread(_objectSpread({},node),{},{initialRouteName:initialRouteName});}function cloneGroupRoute(node,_ref){var nextName=_ref.name;var groupName=\"(\"+nextName+\")\";var parts=node.contextKey.split(\"/\");parts[parts.length-2]=groupName;return _objectSpread(_objectSpread({},node),{},{route:groupName,contextKey:parts.join(\"/\")});}function treeNodeToRouteNode(_ref2){var name=_ref2.name,node=_ref2.node,children=_ref2.children;var dynamic=generateDynamic(name);if(node){var groupName=matchGroupName(name);var multiGroup=groupName==null?void 0:groupName.includes(\",\");var clones=multiGroup?groupName.split(\",\").map(function(v){return{name:v.trim()};}):null;if(clones){var names=new Set();for(var clone of clones){if(names.has(clone.name)){throw new Error(\"Array syntax cannot contain duplicate group name \\\"\"+clone.name+\"\\\" in \\\"\"+node.contextKey+\"\\\".\");}names.add(clone.name);}}var output={loadRoute:node.loadRoute,route:name,contextKey:node.contextKey,children:getTreeNodesAsRouteNodes(children),dynamic:dynamic};if(Array.isArray(clones)){return clones.map(function(clone){return applyDefaultInitialRouteName(cloneGroupRoute(_objectSpread({},output),clone));});}return[applyDefaultInitialRouteName({loadRoute:node.loadRoute,route:name,contextKey:node.contextKey,children:getTreeNodesAsRouteNodes(children),dynamic:dynamic})];}if(!children.length){return null;}return getTreeNodesAsRouteNodes(children.map(function(child){return _objectSpread(_objectSpread({},child),{},{name:[name,child.name].filter(Boolean).join(\"/\")});}));}function contextModuleToFileNodes(contextModule){var nodes=contextModule.keys().map(function(key){try{var _contextModule;if(!((_contextModule=contextModule(key))!=null&&_contextModule.default)){return null;}}catch(error){console.warn('Error loading route \"'+key+'\"',error);return null;}var node={loadRoute:function loadRoute(){return contextModule(key);},normalizedName:getNameFromFilePath(key),contextKey:key};return node;});return nodes.filter(Boolean);}function hasCustomRootLayoutNode(routes){if(routes.length!==1){return false;}var route=routes[0];if(route.route===\"\"&&route.contextKey.match(/^\\.\\/_layout\\.([jt]sx?)$/)){return true;}return false;}function treeNodesToRootRoute(treeNode){var routes=treeNodeToRouteNode(treeNode);if(!(routes!=null&&routes.length)){return null;}if(hasCustomRootLayoutNode(routes)){return routes[0];}return{loadRoute:function loadRoute(){return{default:require(\"./views/Navigator\").DefaultNavigator};},contextKey:\"./_layout.tsx\",route:\"\",generated:true,dynamic:null,children:routes};}export function assertDuplicateRoutes(filenames){if(process.env.NODE_ENV===\"production\"){return;}var duplicates=filenames.map(function(filename){return removeSupportedExtensions(filename);}).reduce(function(acc,filename){acc[filename]=acc[filename]?acc[filename]+1:1;return acc;},{});Object.entries(duplicates).forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),filename=_ref4[0],count=_ref4[1];if(count>1){throw new Error(\"Multiple files match the route name \\\"\"+filename+\"\\\".\");}});}export function getRoutes(contextModule){var route=getExactRoutes(contextModule);if(!route){return null;}appendSitemapRoute(route);appendUnmatchedRoute(route);return route;}export function getExactRoutes(contextModule){assertDuplicateRoutes(contextModule.keys());var files=contextModuleToFileNodes(contextModule);var treeNodes=getRecursiveTree(files);var route=treeNodesToRootRoute(treeNodes);return route||null;}function appendSitemapRoute(routes){if(!routes.children.length||routes.children.some(function(route){return route.route===\"_sitemap\";})){return routes;}var _require=require(\"./views/Sitemap\"),Sitemap=_require.Sitemap,getNavOptions=_require.getNavOptions;routes.children.push({loadRoute:function loadRoute(){return{default:Sitemap,getNavOptions:getNavOptions};},route:\"_sitemap\",contextKey:\"./_sitemap.tsx\",generated:true,internal:true,dynamic:null,children:[]});return routes;}function appendUnmatchedRoute(routes){var userDefinedDynamicRoute=getUserDefinedDeepDynamicRoute(routes);if(!userDefinedDynamicRoute){routes.children.push({loadRoute:function loadRoute(){return{default:require(\"./views/Unmatched\").Unmatched};},route:\"[...404]\",contextKey:\"./[...404].tsx\",dynamic:[{name:\"404\",deep:true}],children:[],generated:true,internal:true});}return routes;}export function getUserDefinedDeepDynamicRoute(routes){for(var route of(_routes$children=routes.children)!=null?_routes$children:[]){var _routes$children;var isDeepDynamic=matchDeepDynamicRouteName(route.route);if(isDeepDynamic){return route;}if(matchGroupName(route.route)){var child=getUserDefinedDeepDynamicRoute(route);if(child){return child;}}}return null;}","map":{"version":3,"names":["getNameFromFilePath","matchDeepDynamicRouteName","matchDynamicName","matchGroupName","removeSupportedExtensions","stripGroupSegmentsFromPath","getRecursiveTree","files","tree","name","children","parents","node","file","parts","normalizedName","split","currentNode","_loop","part","i","length","overwritten","contextKey","Error","existing","find","item","newNode","concat","_toConsumableArray","push","_ret","process","env","NODE_ENV","assertDeprecatedFormat","child","endsWith","ext","pop","getTreeNodesAsRouteNodes","nodes","map","treeNodeToRouteNode","flat","filter","Boolean","generateDynamicFromSegment","deepDynamicName","dynamicName","deep","generateDynamic","description","segment","collapseRouteSegments","route","replace","getDefaultInitialRoute","applyDefaultInitialRouteName","_node$children","_getDefaultInitialRou","groupName","initialRouteName","undefined","loaded","loadRoute","unstable_settings","_loaded$unstable_sett","_loaded$unstable_sett2","_loaded$unstable_sett3","groupSpecificInitialRouteName","_objectSpread","cloneGroupRoute","_ref","nextName","join","_ref2","dynamic","multiGroup","includes","clones","v","trim","names","Set","clone","has","add","output","Array","isArray","contextModuleToFileNodes","contextModule","keys","key","_contextModule","default","error","console","warn","hasCustomRootLayoutNode","routes","match","treeNodesToRootRoute","treeNode","require","DefaultNavigator","generated","assertDuplicateRoutes","filenames","duplicates","filename","reduce","acc","Object","entries","forEach","_ref3","_ref4","_slicedToArray","count","getRoutes","getExactRoutes","appendSitemapRoute","appendUnmatchedRoute","treeNodes","some","_require","Sitemap","getNavOptions","internal","userDefinedDynamicRoute","getUserDefinedDeepDynamicRoute","Unmatched","_routes$children","isDeepDynamic"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/getRoutes.ts"],"sourcesContent":["import { DynamicConvention, RouteNode } from \"./Route\";\nimport {\n  getNameFromFilePath,\n  matchDeepDynamicRouteName,\n  matchDynamicName,\n  matchGroupName,\n  removeSupportedExtensions,\n  stripGroupSegmentsFromPath,\n} from \"./matchers\";\nimport { RequireContext } from \"./types\";\n\nexport type FileNode = Pick<RouteNode, \"contextKey\" | \"loadRoute\"> & {\n  /** Like `(tab)/index` */\n  normalizedName: string;\n};\n\ntype TreeNode = {\n  name: string;\n  children: TreeNode[];\n  parents: string[];\n  /** null when there is no file in a folder. */\n  node: FileNode | null;\n};\n\n/** Convert a flat map of file nodes into a nested tree of files. */\nexport function getRecursiveTree(files: FileNode[]): TreeNode {\n  const tree = {\n    name: \"\",\n    children: [],\n    parents: [],\n    node: null,\n  };\n\n  for (const file of files) {\n    // ['(tab)', 'settings', '[...another]']\n    const parts = file.normalizedName.split(\"/\");\n    let currentNode: TreeNode = tree;\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n\n      if (i === parts.length - 1 && part === \"_layout\") {\n        if (currentNode.node) {\n          const overwritten = currentNode.node.contextKey;\n          throw new Error(\n            `Higher priority Layout Route \"${file.contextKey}\" overriding redundant Layout Route \"${overwritten}\". Remove the Layout Route \"${overwritten}\" to fix this.`\n          );\n        }\n        continue;\n      }\n\n      const existing = currentNode.children.find((item) => item.name === part);\n      if (existing) {\n        currentNode = existing;\n      } else {\n        const newNode: TreeNode = {\n          name: part,\n          children: [],\n          parents: [...currentNode.parents, currentNode.name],\n          node: null,\n        };\n        currentNode.children.push(newNode);\n        currentNode = newNode;\n      }\n    }\n    currentNode.node = file;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    assertDeprecatedFormat(tree);\n  }\n\n  return tree;\n}\n\nfunction assertDeprecatedFormat(tree: TreeNode) {\n  for (const child of tree.children) {\n    if (\n      child.node &&\n      child.children.length &&\n      !child.node.normalizedName.endsWith(\"_layout\")\n    ) {\n      const ext = child.node.contextKey.split(\".\").pop();\n      throw new Error(\n        `Using deprecated Layout Route format: Move \\`./app/${child.node.normalizedName}.${ext}\\` to \\`./app/${child.node.normalizedName}/_layout.${ext}\\``\n      );\n    }\n    assertDeprecatedFormat(child);\n  }\n}\n\nfunction getTreeNodesAsRouteNodes(nodes: TreeNode[]): RouteNode[] {\n  return nodes.map(treeNodeToRouteNode).flat().filter(Boolean) as RouteNode[];\n}\n\nexport function generateDynamicFromSegment(\n  name: string\n): DynamicConvention | null {\n  const deepDynamicName = matchDeepDynamicRouteName(name);\n  const dynamicName = deepDynamicName ?? matchDynamicName(name);\n\n  return dynamicName ? { name: dynamicName, deep: !!deepDynamicName } : null;\n}\n\nexport function generateDynamic(name: string): RouteNode[\"dynamic\"] {\n  const description = name\n    .split(\"/\")\n    .map((segment) => generateDynamicFromSegment(segment))\n    .filter(Boolean) as DynamicConvention[];\n  return description.length === 0 ? null : description;\n}\n\nfunction collapseRouteSegments(route: string) {\n  return stripGroupSegmentsFromPath(route.replace(/\\/index$/, \"\"));\n}\n\n/**\n * Given a route node and a name representing the group name,\n * find the nearest child matching the name.\n *\n * Doesn't support slashes in the name.\n * Routes like `explore/(something)/index` will be matched against `explore`.\n *\n */\nfunction getDefaultInitialRoute(node: RouteNode, name: string) {\n  return node.children.find(\n    (node) => collapseRouteSegments(node.route) === name\n  );\n}\n\nfunction applyDefaultInitialRouteName(node: RouteNode): RouteNode {\n  const groupName = matchGroupName(node.route);\n  if (!node.children?.length) {\n    return node;\n  }\n\n  // Guess at the initial route based on the group name.\n  // TODO(EvanBacon): Perhaps we should attempt to warn when the group doesn't match any child routes.\n  let initialRouteName = groupName\n    ? getDefaultInitialRoute(node, groupName)?.route\n    : undefined;\n  const loaded = node.loadRoute();\n\n  if (loaded.unstable_settings) {\n    // Allow unstable_settings={ initialRouteName: '...' } to override the default initial route name.\n    initialRouteName =\n      loaded.unstable_settings.initialRouteName ?? initialRouteName;\n\n    if (groupName) {\n      // Allow unstable_settings={ 'custom': { initialRouteName: '...' } } to override the less specific initial route name.\n      const groupSpecificInitialRouteName =\n        loaded.unstable_settings?.[groupName]?.initialRouteName;\n\n      initialRouteName = groupSpecificInitialRouteName ?? initialRouteName;\n    }\n  }\n\n  return {\n    ...node,\n    initialRouteName,\n  };\n}\n\nfunction cloneGroupRoute(\n  node: RouteNode,\n  { name: nextName }: { name: string }\n): RouteNode {\n  const groupName = `(${nextName})`;\n  const parts = node.contextKey.split(\"/\");\n  parts[parts.length - 2] = groupName;\n\n  return {\n    ...node,\n    route: groupName,\n    contextKey: parts.join(\"/\"),\n  };\n}\n\nfunction treeNodeToRouteNode({\n  name,\n  node,\n  children,\n}: TreeNode): RouteNode[] | null {\n  const dynamic = generateDynamic(name);\n\n  if (node) {\n    const groupName = matchGroupName(name);\n    const multiGroup = groupName?.includes(\",\");\n\n    const clones = multiGroup\n      ? groupName!.split(\",\").map((v) => ({ name: v.trim() }))\n      : null;\n\n    // Assert duplicates:\n    if (clones) {\n      const names = new Set<string>();\n      for (const clone of clones) {\n        if (names.has(clone.name)) {\n          throw new Error(\n            `Array syntax cannot contain duplicate group name \"${clone.name}\" in \"${node.contextKey}\".`\n          );\n        }\n        names.add(clone.name);\n      }\n    }\n\n    const output = {\n      loadRoute: node.loadRoute,\n      route: name,\n      contextKey: node.contextKey,\n      children: getTreeNodesAsRouteNodes(children),\n      dynamic,\n    };\n\n    if (Array.isArray(clones)) {\n      return clones.map((clone) =>\n        applyDefaultInitialRouteName(cloneGroupRoute({ ...output }, clone))\n      );\n    }\n\n    return [\n      applyDefaultInitialRouteName({\n        loadRoute: node.loadRoute,\n        route: name,\n        contextKey: node.contextKey,\n        children: getTreeNodesAsRouteNodes(children),\n        dynamic,\n      }),\n    ];\n  }\n\n  // Empty folder, skip it.\n  if (!children.length) {\n    return null;\n  }\n\n  // When there's a directory, but no layout route file (with valid export), the child routes won't be grouped.\n  // This pushes all children into the nearest layout route.\n  return getTreeNodesAsRouteNodes(\n    children.map((child) => {\n      return {\n        ...child,\n        name: [name, child.name].filter(Boolean).join(\"/\"),\n      };\n    })\n  );\n}\n\nfunction contextModuleToFileNodes(contextModule: RequireContext): FileNode[] {\n  const nodes = contextModule.keys().map((key) => {\n    // In development, check if the file exports a default component\n    // this helps keep things snappy when creating files. In production we load all screens lazily.\n    try {\n      if (!contextModule(key)?.default) {\n        return null;\n      }\n    } catch (error) {\n      // Probably this won't stop metro from freaking out but it's worth a try.\n      console.warn('Error loading route \"' + key + '\"', error);\n      return null;\n    }\n\n    const node: FileNode = {\n      loadRoute: () => contextModule(key),\n      normalizedName: getNameFromFilePath(key),\n      contextKey: key,\n    };\n\n    return node;\n  });\n\n  return nodes.filter(Boolean) as FileNode[];\n}\n\nfunction hasCustomRootLayoutNode(routes: RouteNode[]) {\n  if (routes.length !== 1) {\n    return false;\n  }\n  // This could either be the root _layout or an app with a single file.\n  const route = routes[0];\n\n  if (\n    route.route === \"\" &&\n    route.contextKey.match(/^\\.\\/_layout\\.([jt]sx?)$/)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction treeNodesToRootRoute(treeNode: TreeNode): RouteNode | null {\n  const routes = treeNodeToRouteNode(treeNode);\n\n  if (!routes?.length) {\n    return null;\n  }\n\n  if (hasCustomRootLayoutNode(routes)) {\n    return routes[0];\n  }\n\n  return {\n    loadRoute: () => ({\n      default: (\n        require(\"./views/Navigator\") as typeof import(\"./views/Navigator\")\n      ).DefaultNavigator,\n    }),\n    // Generate a fake file name for the directory\n    contextKey: \"./_layout.tsx\",\n    route: \"\",\n\n    generated: true,\n    dynamic: null,\n    children: routes,\n  };\n}\n\n/**\n * Asserts if the require.context has files that share the same name but have different extensions. Exposed for testing.\n * @private\n */\nexport function assertDuplicateRoutes(filenames: string[]) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  const duplicates = filenames\n    .map((filename) => removeSupportedExtensions(filename))\n    .reduce((acc, filename) => {\n      acc[filename] = acc[filename] ? acc[filename] + 1 : 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n  Object.entries(duplicates).forEach(([filename, count]) => {\n    if (count > 1) {\n      throw new Error(`Multiple files match the route name \"${filename}\".`);\n    }\n  });\n}\n\n/** Given a Metro context module, return an array of nested routes. */\nexport function getRoutes(contextModule: RequireContext): RouteNode | null {\n  const route = getExactRoutes(contextModule);\n  if (!route) {\n    return null;\n  }\n\n  appendSitemapRoute(route);\n\n  // Auto add not found route if it doesn't exist\n  appendUnmatchedRoute(route);\n\n  return route;\n}\n\n/** Get routes without unmatched or sitemap. */\nexport function getExactRoutes(\n  contextModule: RequireContext\n): RouteNode | null {\n  assertDuplicateRoutes(contextModule.keys());\n  const files = contextModuleToFileNodes(contextModule);\n  const treeNodes = getRecursiveTree(files);\n  const route = treeNodesToRootRoute(treeNodes);\n  return route || null;\n}\n\nfunction appendSitemapRoute(routes: RouteNode) {\n  if (\n    !routes.children.length ||\n    // Allow overriding the sitemap route\n    routes.children.some((route) => route.route === \"_sitemap\")\n  ) {\n    return routes;\n  }\n  const { Sitemap, getNavOptions } = require(\"./views/Sitemap\");\n  routes.children.push({\n    loadRoute() {\n      return { default: Sitemap, getNavOptions };\n    },\n    route: \"_sitemap\",\n    contextKey: \"./_sitemap.tsx\",\n    generated: true,\n    internal: true,\n    dynamic: null,\n    children: [],\n  });\n  return routes;\n}\n\nfunction appendUnmatchedRoute(routes: RouteNode) {\n  // Auto add not found route if it doesn't exist\n  const userDefinedDynamicRoute = getUserDefinedDeepDynamicRoute(routes);\n  if (!userDefinedDynamicRoute) {\n    routes.children.push({\n      loadRoute() {\n        return { default: require(\"./views/Unmatched\").Unmatched };\n      },\n      route: \"[...404]\",\n      contextKey: \"./[...404].tsx\",\n      dynamic: [{ name: \"404\", deep: true }],\n      children: [],\n      generated: true,\n      internal: true,\n    });\n  }\n  return routes;\n}\n\n/**\n * Exposed for testing.\n * @returns a top-level deep dynamic route if it exists, otherwise null.\n */\nexport function getUserDefinedDeepDynamicRoute(\n  routes: RouteNode\n): RouteNode | null {\n  // Auto add not found route if it doesn't exist\n  for (const route of routes.children ?? []) {\n    const isDeepDynamic = matchDeepDynamicRouteName(route.route);\n    if (isDeepDynamic) {\n      return route;\n    }\n    // Recurse through group routes\n    if (matchGroupName(route.route)) {\n      const child = getUserDefinedDeepDynamicRoute(route);\n      if (child) {\n        return child;\n      }\n    }\n  }\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import invariant from'invariant';import{adapt}from\"../core/AnimatedBlock\";import{val}from\"../val\";import AnimatedNode from\"./AnimatedNode\";var AnimatedCond=function(_AnimatedNode){_inherits(AnimatedCond,_AnimatedNode);var _super=_createSuper(AnimatedCond);function AnimatedCond(condition,ifBlock,elseBlock){var _this;_classCallCheck(this,AnimatedCond);invariant(condition instanceof AnimatedNode,\"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \"+condition);invariant(ifBlock instanceof AnimatedNode,\"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \"+ifBlock);invariant(elseBlock instanceof AnimatedNode||elseBlock===undefined,\"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \"+elseBlock);_this=_super.call(this,{type:'cond',cond:condition,ifBlock:ifBlock,elseBlock:elseBlock},[condition,ifBlock,elseBlock]);_this._condition=condition;_this._ifBlock=ifBlock;_this._elseBlock=elseBlock;return _this;}_createClass(AnimatedCond,[{key:\"toString\",value:function toString(){return\"AnimatedCond, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){if(val(this._condition)){return val(this._ifBlock);}else{return this._elseBlock!==undefined?val(this._elseBlock):undefined;}}}]);return AnimatedCond;}(AnimatedNode);export function createAnimatedCond(cond,ifBlock,elseBlock){return new AnimatedCond(adapt(cond),adapt(ifBlock),elseBlock===undefined?undefined:adapt(elseBlock));}","map":{"version":3,"names":["invariant","adapt","val","AnimatedNode","AnimatedCond","_AnimatedNode","_inherits","_super","_createSuper","condition","ifBlock","elseBlock","_this","_classCallCheck","undefined","call","type","cond","_condition","_ifBlock","_elseBlock","_createClass","key","value","toString","__nodeID","__onEvaluate","createAnimatedCond"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCond.js"],"sourcesContent":["import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\n\nclass AnimatedCond extends AnimatedNode {\n  _condition;\n  _ifBlock;\n  _elseBlock;\n\n  constructor(condition, ifBlock, elseBlock) {\n    invariant(\n      condition instanceof AnimatedNode,\n      `Reanimated: Animated.cond node first argument should be of type AnimatedNode but got ${condition}`\n    );\n    invariant(\n      ifBlock instanceof AnimatedNode,\n      `Reanimated: Animated.cond node second argument should be of type AnimatedNode but got ${ifBlock}`\n    );\n    invariant(\n      elseBlock instanceof AnimatedNode || elseBlock === undefined,\n      `Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got ${elseBlock}`\n    );\n    super(\n      {\n        type: 'cond',\n        cond: condition,\n        ifBlock,\n        elseBlock,\n      },\n      [condition, ifBlock, elseBlock]\n    );\n    this._condition = condition;\n    this._ifBlock = ifBlock;\n    this._elseBlock = elseBlock;\n  }\n\n  toString() {\n    return `AnimatedCond, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    if (val(this._condition)) {\n      return val(this._ifBlock);\n    } else {\n      return this._elseBlock !== undefined ? val(this._elseBlock) : undefined;\n    }\n  }\n}\n\nexport function createAnimatedCond(cond, ifBlock, elseBlock) {\n  return new AnimatedCond(\n    adapt(cond),\n    adapt(ifBlock),\n    elseBlock === undefined ? undefined : adapt(elseBlock)\n  );\n}\n"],"mappings":"qgCAAA,MAAO,CAAAA,SAAS,KAAM,WAAW,CACjC,OAASC,KAAK,6BACd,OAASC,GAAG,cACZ,MAAO,CAAAC,YAAY,sBAAuB,GAEpC,CAAAC,YAAY,UAAAC,aAAA,EAAAC,SAAA,CAAAF,YAAA,CAAAC,aAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,YAAA,EAKhB,SAAAA,aAAYK,SAAS,CAAEC,OAAO,CAAEC,SAAS,CAAE,KAAAC,KAAA,CAAAC,eAAA,MAAAT,YAAA,EACzCJ,SAAS,CACPS,SAAS,WAAY,CAAAN,YAAY,yFACuDM,SAAS,CAClG,CACDT,SAAS,CACPU,OAAO,WAAY,CAAAP,YAAY,0FAC0DO,OAAO,CACjG,CACDV,SAAS,CACPW,SAAS,WAAY,CAAAR,YAAY,EAAIQ,SAAS,GAAKG,SAAS,gHACmDH,SAAS,CACzH,CACDC,KAAA,CAAAL,MAAA,CAAAQ,IAAA,MACE,CACEC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAER,SAAS,CACfC,OAAO,CAAPA,OAAO,CACPC,SAAS,CAATA,SACF,CAAC,CACD,CAACF,SAAS,CAAEC,OAAO,CAAEC,SAAS,CAAC,EAEjCC,KAAA,CAAKM,UAAU,CAAGT,SAAS,CAC3BG,KAAA,CAAKO,QAAQ,CAAGT,OAAO,CACvBE,KAAA,CAAKQ,UAAU,CAAGT,SAAS,CAAC,OAAAC,KAAA,CAC9B,CAACS,YAAA,CAAAjB,YAAA,GAAAkB,GAAA,YAAAC,KAAA,CAED,SAAAC,SAAA,CAAW,CACT,2BAA4B,IAAI,CAACC,QAAQ,CAC3C,CAAC,GAAAH,GAAA,gBAAAC,KAAA,CAED,SAAAG,aAAA,CAAe,CACb,GAAIxB,GAAG,CAAC,IAAI,CAACgB,UAAU,CAAC,CAAE,CACxB,MAAO,CAAAhB,GAAG,CAAC,IAAI,CAACiB,QAAQ,CAAC,CAC3B,CAAC,IAAM,CACL,MAAO,KAAI,CAACC,UAAU,GAAKN,SAAS,CAAGZ,GAAG,CAAC,IAAI,CAACkB,UAAU,CAAC,CAAGN,SAAS,CACzE,CACF,CAAC,WAAAV,YAAA,GA1CwBD,YAAY,EA6CvC,MAAO,SAAS,CAAAwB,kBAAkBA,CAACV,IAAI,CAAEP,OAAO,CAAEC,SAAS,CAAE,CAC3D,MAAO,IAAI,CAAAP,YAAY,CACrBH,KAAK,CAACgB,IAAI,CAAC,CACXhB,KAAK,CAACS,OAAO,CAAC,CACdC,SAAS,GAAKG,SAAS,CAAGA,SAAS,CAAGb,KAAK,CAACU,SAAS,CAAC,CACvD,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import invariant from'invariant';import{val}from\"../val\";import AnimatedNode from\"./AnimatedNode\";import InternalAnimatedValue from\"./InternalAnimatedValue\";var AnimatedBlock=function(_AnimatedNode){_inherits(AnimatedBlock,_AnimatedNode);var _super=_createSuper(AnimatedBlock);function AnimatedBlock(array){var _this;_classCallCheck(this,AnimatedBlock);invariant(array.every(function(el){return el instanceof AnimatedNode;}),\"Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes\");_this=_super.call(this,{type:'block',block:array},array);_this._array=array;return _this;}_createClass(AnimatedBlock,[{key:\"toString\",value:function toString(){return\"AnimatedBlock, id: \"+this.__nodeID;}},{key:\"__onEvaluate\",value:function __onEvaluate(){var result;this._array.forEach(function(node){result=val(node);});return result;}}]);return AnimatedBlock;}(AnimatedNode);export function createAnimatedBlock(items){return adapt(items);}function nodify(v){if(typeof v==='object'&&v!=null&&v.__isProxy){if(!v.__val){v.__val=new InternalAnimatedValue(0);}return v.__val;}return v instanceof AnimatedNode?v:InternalAnimatedValue.valueForConstant(v);}export function adapt(v){return Array.isArray(v)?new AnimatedBlock(v.map(function(node){return adapt(node);})):nodify(v);}","map":{"version":3,"names":["invariant","val","AnimatedNode","InternalAnimatedValue","AnimatedBlock","_AnimatedNode","_inherits","_super","_createSuper","array","_this","_classCallCheck","every","el","call","type","block","_array","_createClass","key","value","toString","__nodeID","__onEvaluate","result","forEach","node","createAnimatedBlock","items","adapt","nodify","v","__isProxy","__val","valueForConstant","Array","isArray","map"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedBlock.js"],"sourcesContent":["import invariant from 'invariant';\nimport { val } from '../val';\nimport AnimatedNode from './AnimatedNode';\nimport InternalAnimatedValue from './InternalAnimatedValue';\n\nclass AnimatedBlock extends AnimatedNode {\n  _array;\n\n  constructor(array) {\n    invariant(\n      array.every((el) => el instanceof AnimatedNode),\n      `Reanimated: Animated.block node argument should be an array with elements of type AnimatedNode. One or more of them are not AnimatedNodes`\n    );\n    super({ type: 'block', block: array }, array);\n    this._array = array;\n  }\n\n  toString() {\n    return `AnimatedBlock, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    let result;\n    this._array.forEach((node) => {\n      result = val(node);\n    });\n    return result;\n  }\n}\n\nexport function createAnimatedBlock(items) {\n  return adapt(items);\n}\n\nfunction nodify(v) {\n  if (typeof v === 'object' && v?.__isProxy) {\n    if (!v.__val) {\n      v.__val = new InternalAnimatedValue(0);\n    }\n    return v.__val;\n  }\n  // TODO: cache some typical static values (e.g. 0, 1, -1)\n  return v instanceof AnimatedNode\n    ? v\n    : InternalAnimatedValue.valueForConstant(v);\n}\n\nexport function adapt(v) {\n  return Array.isArray(v)\n    ? new AnimatedBlock(v.map((node) => adapt(node)))\n    : nodify(v);\n}\n"],"mappings":"qgCAAA,MAAO,CAAAA,SAAS,KAAM,WAAW,CACjC,OAASC,GAAG,cACZ,MAAO,CAAAC,YAAY,sBACnB,MAAO,CAAAC,qBAAqB,+BAAgC,GAEtD,CAAAC,aAAa,UAAAC,aAAA,EAAAC,SAAA,CAAAF,aAAA,CAAAC,aAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,aAAA,EAGjB,SAAAA,cAAYK,KAAK,CAAE,KAAAC,KAAA,CAAAC,eAAA,MAAAP,aAAA,EACjBJ,SAAS,CACPS,KAAK,CAACG,KAAK,CAAC,SAACC,EAAE,QAAK,CAAAA,EAAE,WAAY,CAAAX,YAAY,GAAC,6IAEhD,CACDQ,KAAA,CAAAH,MAAA,CAAAO,IAAA,MAAM,CAAEC,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAEP,KAAM,CAAC,CAAEA,KAAK,EAC5CC,KAAA,CAAKO,MAAM,CAAGR,KAAK,CAAC,OAAAC,KAAA,CACtB,CAACQ,YAAA,CAAAd,aAAA,GAAAe,GAAA,YAAAC,KAAA,CAED,SAAAC,SAAA,CAAW,CACT,4BAA6B,IAAI,CAACC,QAAQ,CAC5C,CAAC,GAAAH,GAAA,gBAAAC,KAAA,CAED,SAAAG,aAAA,CAAe,CACb,GAAI,CAAAC,MAAM,CACV,IAAI,CAACP,MAAM,CAACQ,OAAO,CAAC,SAACC,IAAI,CAAK,CAC5BF,MAAM,CAAGvB,GAAG,CAACyB,IAAI,CAAC,CACpB,CAAC,CAAC,CACF,MAAO,CAAAF,MAAM,CACf,CAAC,WAAApB,aAAA,GAtByBF,YAAY,EAyBxC,MAAO,SAAS,CAAAyB,mBAAmBA,CAACC,KAAK,CAAE,CACzC,MAAO,CAAAC,KAAK,CAACD,KAAK,CAAC,CACrB,CAEA,QAAS,CAAAE,MAAMA,CAACC,CAAC,CAAE,CACjB,GAAI,MAAO,CAAAA,CAAC,GAAK,QAAQ,EAAIA,CAAC,QAADA,CAAC,CAAEC,SAAS,CAAE,CACzC,GAAI,CAACD,CAAC,CAACE,KAAK,CAAE,CACZF,CAAC,CAACE,KAAK,CAAG,GAAI,CAAA9B,qBAAqB,CAAC,CAAC,CAAC,CACxC,CACA,MAAO,CAAA4B,CAAC,CAACE,KAAK,CAChB,CAEA,MAAO,CAAAF,CAAC,WAAY,CAAA7B,YAAY,CAC5B6B,CAAC,CACD5B,qBAAqB,CAAC+B,gBAAgB,CAACH,CAAC,CAAC,CAC/C,CAEA,MAAO,SAAS,CAAAF,KAAKA,CAACE,CAAC,CAAE,CACvB,MAAO,CAAAI,KAAK,CAACC,OAAO,CAACL,CAAC,CAAC,CACnB,GAAI,CAAA3B,aAAa,CAAC2B,CAAC,CAACM,GAAG,CAAC,SAACX,IAAI,QAAK,CAAAG,KAAK,CAACH,IAAI,CAAC,GAAC,CAAC,CAC/CI,MAAM,CAACC,CAAC,CAAC,CACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
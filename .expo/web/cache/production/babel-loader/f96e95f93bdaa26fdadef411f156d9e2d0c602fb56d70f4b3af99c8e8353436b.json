{"ast":null,"code":"\"use strict\";var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");var _inherits=require(\"@babel/runtime/helpers/inherits\");var _possibleConstructorReturn=require(\"@babel/runtime/helpers/possibleConstructorReturn\");var _getPrototypeOf=require(\"@babel/runtime/helpers/getPrototypeOf\");function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||(\"get\"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function get(){return m[k];}};}Object.defineProperty(o,k2,desc);}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k];});var __setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,\"default\",{enumerable:true,value:v});}:function(o,v){o[\"default\"]=v;});var __importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!==\"default\"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result;};var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.withSubscription=exports.observe=exports.isDisabled=exports.setDisabled=exports.addIgnorePatterns=exports.getIgnorePatterns=exports.dismiss=exports.clearErrors=exports.clearWarnings=exports.setSelectedLog=exports.clear=exports.symbolicateLogLazy=exports.retrySymbolicateLogNow=exports.symbolicateLogNow=exports.addException=exports.addLog=exports.isMessageIgnored=exports.isLogBoxErrorMessage=exports.reportUnexpectedLogBoxError=exports.reportLogBoxError=void 0;var React=__importStar(require(\"react\"));var LogBoxLog_1=require(\"./LogBoxLog\");var LogContext_1=require(\"./LogContext\");var parseLogBoxLog_1=require(\"./parseLogBoxLog\");var NativeLogBox_1=__importDefault(require(\"../modules/NativeLogBox\"));var parseErrorStack_1=__importDefault(require(\"../modules/parseErrorStack\"));var observers=new Set();var ignorePatterns=new Set();var logs=new Set();var updateTimeout=null;var _isDisabled=false;var _selectedIndex=-1;var LOGBOX_ERROR_MESSAGE=\"An error was thrown when attempting to render log messages via LogBox.\";function getNextState(){return{logs:logs,isDisabled:_isDisabled,selectedLogIndex:_selectedIndex};}function reportLogBoxError(error,componentStack){var ExceptionsManager=require(\"../modules/ExceptionsManager\");if(componentStack!=null){error.componentStack=componentStack;}ExceptionsManager.handleException(error);}exports.reportLogBoxError=reportLogBoxError;function reportUnexpectedLogBoxError(error,componentStack){error.message=LOGBOX_ERROR_MESSAGE+\"\\n\\n\"+error.message;return reportLogBoxError(error,componentStack);}exports.reportUnexpectedLogBoxError=reportUnexpectedLogBoxError;function isLogBoxErrorMessage(message){return typeof message===\"string\"&&message.includes(LOGBOX_ERROR_MESSAGE);}exports.isLogBoxErrorMessage=isLogBoxErrorMessage;function isMessageIgnored(message){for(var pattern of ignorePatterns){if(pattern instanceof RegExp&&pattern.test(message)||typeof pattern===\"string\"&&message.includes(pattern)){return true;}}return false;}exports.isMessageIgnored=isMessageIgnored;function handleUpdate(){if(updateTimeout==null){updateTimeout=setImmediate(function(){updateTimeout=null;var nextState=getNextState();observers.forEach(function(_ref){var observer=_ref.observer;return observer(nextState);});});}}function appendNewLog(newLog){if(isMessageIgnored(newLog.message.content)){return;}var lastLog=Array.from(logs).pop();if(lastLog&&lastLog.category===newLog.category){lastLog.incrementCount();handleUpdate();return;}if(newLog.level===\"fatal\"){var OPTIMISTIC_WAIT_TIME=1000;var _addPendingLog=function addPendingLog(){logs.add(newLog);if(_selectedIndex<0){setSelectedLog(logs.size-1);}else{handleUpdate();}_addPendingLog=null;};var optimisticTimeout=setTimeout(function(){if(_addPendingLog){_addPendingLog();}},OPTIMISTIC_WAIT_TIME);newLog.symbolicate(\"component\");newLog.symbolicate(\"stack\",function(status){if(_addPendingLog&&status!==\"PENDING\"){_addPendingLog();clearTimeout(optimisticTimeout);}else if(status!==\"PENDING\"){handleUpdate();}});}else if(newLog.level===\"syntax\"){logs.add(newLog);setSelectedLog(logs.size-1);}else{logs.add(newLog);handleUpdate();}}function addLog(log){var errorForStackTrace=new Error();setImmediate(function(){try{var stack=(0,parseErrorStack_1.default)(errorForStackTrace===null||errorForStackTrace===void 0?void 0:errorForStackTrace.stack);appendNewLog(new LogBoxLog_1.LogBoxLog({level:log.level,message:log.message,isComponentError:false,stack:stack,category:log.category,componentStack:log.componentStack}));}catch(error){reportUnexpectedLogBoxError(error);}});}exports.addLog=addLog;function addException(error){setImmediate(function(){try{appendNewLog(new LogBoxLog_1.LogBoxLog((0,parseLogBoxLog_1.parseLogBoxException)(error)));}catch(loggingError){reportUnexpectedLogBoxError(loggingError);}});}exports.addException=addException;function symbolicateLogNow(type,log){log.symbolicate(type,function(){handleUpdate();});}exports.symbolicateLogNow=symbolicateLogNow;function retrySymbolicateLogNow(type,log){log.retrySymbolicate(type,function(){handleUpdate();});}exports.retrySymbolicateLogNow=retrySymbolicateLogNow;function symbolicateLogLazy(type,log){log.symbolicate(type);}exports.symbolicateLogLazy=symbolicateLogLazy;function clear(){if(logs.size>0){logs=new Set();setSelectedLog(-1);}}exports.clear=clear;function setSelectedLog(proposedNewIndex){var oldIndex=_selectedIndex;var newIndex=proposedNewIndex;var logArray=Array.from(logs);var index=logArray.length-1;while(index>=0){if(logArray[index].level===\"syntax\"){newIndex=index;break;}index-=1;}_selectedIndex=newIndex;handleUpdate();if(NativeLogBox_1.default){setTimeout(function(){if(oldIndex<0&&newIndex>=0){NativeLogBox_1.default.show();}else if(oldIndex>=0&&newIndex<0){NativeLogBox_1.default.hide();}},0);}}exports.setSelectedLog=setSelectedLog;function clearWarnings(){var newLogs=Array.from(logs).filter(function(log){return log.level!==\"warn\";});if(newLogs.length!==logs.size){logs=new Set(newLogs);setSelectedLog(-1);handleUpdate();}}exports.clearWarnings=clearWarnings;function clearErrors(){var newLogs=Array.from(logs).filter(function(log){return log.level!==\"error\"&&log.level!==\"fatal\";});if(newLogs.length!==logs.size){logs=new Set(newLogs);setSelectedLog(-1);}}exports.clearErrors=clearErrors;function dismiss(log){if(logs.has(log)){logs.delete(log);handleUpdate();}}exports.dismiss=dismiss;function getIgnorePatterns(){return Array.from(ignorePatterns);}exports.getIgnorePatterns=getIgnorePatterns;function addIgnorePatterns(patterns){var existingSize=ignorePatterns.size;patterns.forEach(function(pattern){if(pattern instanceof RegExp){for(var existingPattern of ignorePatterns){if(existingPattern instanceof RegExp&&existingPattern.toString()===pattern.toString()){return;}}ignorePatterns.add(pattern);}ignorePatterns.add(pattern);});if(ignorePatterns.size===existingSize){return;}logs=new Set(Array.from(logs).filter(function(log){return!isMessageIgnored(log.message.content);}));handleUpdate();}exports.addIgnorePatterns=addIgnorePatterns;function setDisabled(value){if(value===_isDisabled){return;}_isDisabled=value;handleUpdate();}exports.setDisabled=setDisabled;function isDisabled(){return _isDisabled;}exports.isDisabled=isDisabled;function observe(observer){var subscription={observer:observer};observers.add(subscription);observer(getNextState());return{unsubscribe:function unsubscribe(){observers.delete(subscription);}};}exports.observe=observe;function withSubscription(WrappedComponent){var LogBoxStateSubscription=function(_React$Component){_inherits(LogBoxStateSubscription,_React$Component);var _super=_createSuper(LogBoxStateSubscription);function LogBoxStateSubscription(){var _this;_classCallCheck(this,LogBoxStateSubscription);_this=_super.apply(this,arguments);_this.state={logs:new Set(),isDisabled:false,hasError:false,selectedLogIndex:-1};_this._handleDismiss=function(){var _this$state=_this.state,selectedLogIndex=_this$state.selectedLogIndex,stateLogs=_this$state.logs;var logsArray=Array.from(stateLogs);if(selectedLogIndex!=null){if(logsArray.length-1<=0){setSelectedLog(-1);}else if(selectedLogIndex>=logsArray.length-1){setSelectedLog(selectedLogIndex-1);}dismiss(logsArray[selectedLogIndex]);}};_this._handleMinimize=function(){setSelectedLog(-1);};_this._handleSetSelectedLog=function(index){setSelectedLog(index);};return _this;}_createClass(LogBoxStateSubscription,[{key:\"componentDidCatch\",value:function componentDidCatch(err,errorInfo){reportLogBoxError(err,errorInfo.componentStack);}},{key:\"render\",value:function render(){if(this.state.hasError){return null;}return React.createElement(LogContext_1.LogContext.Provider,{value:{selectedLogIndex:this.state.selectedLogIndex,isDisabled:this.state.isDisabled,logs:Array.from(this.state.logs)}},this.props.children,React.createElement(WrappedComponent,null));}},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._subscription=observe(function(data){_this2.setState(data);});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this._subscription!=null){this._subscription.unsubscribe();}}}],[{key:\"getDerivedStateFromError\",value:function getDerivedStateFromError(){return{hasError:true};}}]);return LogBoxStateSubscription;}(React.Component);return LogBoxStateSubscription;}exports.withSubscription=withSubscription;","map":{"version":3,"names":["React","__importStar","require","LogBoxLog_1","LogContext_1","parseLogBoxLog_1","NativeLogBox_1","__importDefault","parseErrorStack_1","observers","Set","ignorePatterns","logs","updateTimeout","_isDisabled","_selectedIndex","LOGBOX_ERROR_MESSAGE","getNextState","isDisabled","selectedLogIndex","reportLogBoxError","error","componentStack","ExceptionsManager","handleException","exports","reportUnexpectedLogBoxError","message","isLogBoxErrorMessage","includes","isMessageIgnored","pattern","RegExp","test","handleUpdate","setImmediate","nextState","forEach","_ref","observer","appendNewLog","newLog","content","lastLog","Array","from","pop","category","incrementCount","level","OPTIMISTIC_WAIT_TIME","addPendingLog","add","setSelectedLog","size","optimisticTimeout","setTimeout","symbolicate","status","clearTimeout","addLog","log","errorForStackTrace","Error","stack","default","LogBoxLog","isComponentError","addException","parseLogBoxException","loggingError","symbolicateLogNow","type","retrySymbolicateLogNow","retrySymbolicate","symbolicateLogLazy","clear","proposedNewIndex","oldIndex","newIndex","logArray","index","length","show","hide","clearWarnings","newLogs","filter","clearErrors","dismiss","has","delete","getIgnorePatterns","addIgnorePatterns","patterns","existingSize","existingPattern","toString","setDisabled","value","observe","subscription","unsubscribe","withSubscription","WrappedComponent","LogBoxStateSubscription","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","hasError","_handleDismiss","_this$state","stateLogs","logsArray","_handleMinimize","_handleSetSelectedLog","_createClass","key","componentDidCatch","err","errorInfo","render","createElement","LogContext","Provider","props","children","componentDidMount","_this2","_subscription","data","setState","componentWillUnmount","getDerivedStateFromError","Component"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\Data\\LogBoxData.tsx"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\nimport { LogBoxLog, StackType } from \"./LogBoxLog\";\nimport type { LogLevel } from \"./LogBoxLog\";\nimport { LogContext } from \"./LogContext\";\nimport { parseLogBoxException } from \"./parseLogBoxLog\";\nimport type {\n  Message,\n  Category,\n  ComponentStack,\n  ExtendedExceptionData,\n} from \"./parseLogBoxLog\";\nimport NativeLogBox from \"../modules/NativeLogBox\";\nimport parseErrorStack from \"../modules/parseErrorStack\";\n\nexport type LogBoxLogs = Set<LogBoxLog>;\n\nexport type LogData = {\n  level: LogLevel;\n  message: Message;\n  category: Category;\n  componentStack: ComponentStack;\n};\n\ntype ExtendedError = any;\n\nexport type Observer = (options: {\n  logs: LogBoxLogs;\n  isDisabled: boolean;\n  selectedLogIndex: number;\n}) => void;\n\nexport type IgnorePattern = string | RegExp;\n\nexport type Subscription = {\n  unsubscribe: () => void;\n};\n\nexport type WarningInfo = {\n  finalFormat: string;\n  forceDialogImmediately: boolean;\n  suppressDialog_LEGACY: boolean;\n  suppressCompletely: boolean;\n  monitorEvent: string | null;\n  monitorListVersion: number;\n  monitorSampleRate: number;\n};\n\nexport type WarningFilter = (format: string) => WarningInfo;\n\ntype Props = object;\n\ntype State = {\n  logs: LogBoxLogs;\n  isDisabled: boolean;\n  hasError: boolean;\n  selectedLogIndex: number;\n};\n\nconst observers: Set<{ observer: Observer } & any> = new Set();\nconst ignorePatterns: Set<IgnorePattern> = new Set();\nlet logs: LogBoxLogs = new Set();\nlet updateTimeout: null | ReturnType<typeof setImmediate> = null;\nlet _isDisabled = false;\nlet _selectedIndex = -1;\n\nconst LOGBOX_ERROR_MESSAGE =\n  \"An error was thrown when attempting to render log messages via LogBox.\";\n\nfunction getNextState() {\n  return {\n    logs,\n    isDisabled: _isDisabled,\n    selectedLogIndex: _selectedIndex,\n  };\n}\n\nexport function reportLogBoxError(\n  error: ExtendedError,\n  componentStack?: string\n): void {\n  const ExceptionsManager = require(\"../modules/ExceptionsManager\");\n\n  if (componentStack != null) {\n    error.componentStack = componentStack;\n  }\n  ExceptionsManager.handleException(error);\n}\n\nexport function reportUnexpectedLogBoxError(\n  error: ExtendedError,\n  componentStack?: string\n): void {\n  error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n  return reportLogBoxError(error, componentStack);\n}\n\nexport function isLogBoxErrorMessage(message: string): boolean {\n  return typeof message === \"string\" && message.includes(LOGBOX_ERROR_MESSAGE);\n}\n\nexport function isMessageIgnored(message: string): boolean {\n  for (const pattern of ignorePatterns) {\n    if (\n      (pattern instanceof RegExp && pattern.test(message)) ||\n      (typeof pattern === \"string\" && message.includes(pattern))\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction handleUpdate(): void {\n  if (updateTimeout == null) {\n    updateTimeout = setImmediate(() => {\n      updateTimeout = null;\n      const nextState = getNextState();\n      observers.forEach(({ observer }) => observer(nextState));\n    });\n  }\n}\n\nfunction appendNewLog(newLog: LogBoxLog): void {\n  // Don't want store these logs because they trigger a\n  // state update when we add them to the store.\n  if (isMessageIgnored(newLog.message.content)) {\n    return;\n  }\n\n  // If the next log has the same category as the previous one\n  // then roll it up into the last log in the list by incrementing\n  // the count (similar to how Chrome does it).\n  const lastLog = Array.from(logs).pop();\n  if (lastLog && lastLog.category === newLog.category) {\n    lastLog.incrementCount();\n    handleUpdate();\n    return;\n  }\n\n  if (newLog.level === \"fatal\") {\n    // If possible, to avoid jank, we don't want to open the error before\n    // it's symbolicated. To do that, we optimistically wait for\n    // symbolication for up to a second before adding the log.\n    const OPTIMISTIC_WAIT_TIME = 1000;\n\n    let addPendingLog: null | (() => void) = () => {\n      logs.add(newLog);\n      if (_selectedIndex < 0) {\n        setSelectedLog(logs.size - 1);\n      } else {\n        handleUpdate();\n      }\n      addPendingLog = null;\n    };\n\n    const optimisticTimeout = setTimeout(() => {\n      if (addPendingLog) {\n        addPendingLog();\n      }\n    }, OPTIMISTIC_WAIT_TIME);\n\n    // TODO: HANDLE THIS\n    newLog.symbolicate(\"component\");\n\n    newLog.symbolicate(\"stack\", (status) => {\n      if (addPendingLog && status !== \"PENDING\") {\n        addPendingLog();\n        clearTimeout(optimisticTimeout);\n      } else if (status !== \"PENDING\") {\n        // The log has already been added but we need to trigger a render.\n        handleUpdate();\n      }\n    });\n  } else if (newLog.level === \"syntax\") {\n    logs.add(newLog);\n    setSelectedLog(logs.size - 1);\n  } else {\n    logs.add(newLog);\n    handleUpdate();\n  }\n}\n\nexport function addLog(log: LogData): void {\n  const errorForStackTrace = new Error();\n\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      const stack = parseErrorStack(errorForStackTrace?.stack);\n\n      appendNewLog(\n        new LogBoxLog({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack,\n        })\n      );\n    } catch (error) {\n      reportUnexpectedLogBoxError(error);\n    }\n  });\n}\n\nexport function addException(error: ExtendedExceptionData): void {\n  // Parsing logs are expensive so we schedule this\n  // otherwise spammy logs would pause rendering.\n  setImmediate(() => {\n    try {\n      appendNewLog(new LogBoxLog(parseLogBoxException(error)));\n    } catch (loggingError) {\n      reportUnexpectedLogBoxError(loggingError);\n    }\n  });\n}\n\nexport function symbolicateLogNow(type: StackType, log: LogBoxLog) {\n  log.symbolicate(type, () => {\n    handleUpdate();\n  });\n}\n\nexport function retrySymbolicateLogNow(type: StackType, log: LogBoxLog) {\n  log.retrySymbolicate(type, () => {\n    handleUpdate();\n  });\n}\n\nexport function symbolicateLogLazy(type: StackType, log: LogBoxLog) {\n  log.symbolicate(type);\n}\n\nexport function clear(): void {\n  if (logs.size > 0) {\n    logs = new Set();\n    setSelectedLog(-1);\n  }\n}\n\nexport function setSelectedLog(proposedNewIndex: number): void {\n  const oldIndex = _selectedIndex;\n  let newIndex = proposedNewIndex;\n\n  const logArray = Array.from(logs);\n  let index = logArray.length - 1;\n  while (index >= 0) {\n    // The latest syntax error is selected and displayed before all other logs.\n    if (logArray[index].level === \"syntax\") {\n      newIndex = index;\n      break;\n    }\n    index -= 1;\n  }\n  _selectedIndex = newIndex;\n  handleUpdate();\n  if (NativeLogBox) {\n    setTimeout(() => {\n      if (oldIndex < 0 && newIndex >= 0) {\n        NativeLogBox.show();\n      } else if (oldIndex >= 0 && newIndex < 0) {\n        NativeLogBox.hide();\n      }\n    }, 0);\n  }\n}\n\nexport function clearWarnings(): void {\n  const newLogs = Array.from(logs).filter((log) => log.level !== \"warn\");\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n    handleUpdate();\n  }\n}\n\nexport function clearErrors(): void {\n  const newLogs = Array.from(logs).filter(\n    (log) => log.level !== \"error\" && log.level !== \"fatal\"\n  );\n  if (newLogs.length !== logs.size) {\n    logs = new Set(newLogs);\n    setSelectedLog(-1);\n  }\n}\n\nexport function dismiss(log: LogBoxLog): void {\n  if (logs.has(log)) {\n    logs.delete(log);\n    handleUpdate();\n  }\n}\n\nexport function getIgnorePatterns(): IgnorePattern[] {\n  return Array.from(ignorePatterns);\n}\n\nexport function addIgnorePatterns(patterns: IgnorePattern[]): void {\n  const existingSize = ignorePatterns.size;\n  // The same pattern may be added multiple times, but adding a new pattern\n  // can be expensive so let's find only the ones that are new.\n  patterns.forEach((pattern: IgnorePattern) => {\n    if (pattern instanceof RegExp) {\n      for (const existingPattern of ignorePatterns) {\n        if (\n          existingPattern instanceof RegExp &&\n          existingPattern.toString() === pattern.toString()\n        ) {\n          return;\n        }\n      }\n      ignorePatterns.add(pattern);\n    }\n    ignorePatterns.add(pattern);\n  });\n  if (ignorePatterns.size === existingSize) {\n    return;\n  }\n  // We need to recheck all of the existing logs.\n  // This allows adding an ignore pattern anywhere in the codebase.\n  // Without this, if you ignore a pattern after the a log is created,\n  // then we would keep showing the log.\n  logs = new Set(\n    Array.from(logs).filter((log) => !isMessageIgnored(log.message.content))\n  );\n  handleUpdate();\n}\n\nexport function setDisabled(value: boolean): void {\n  if (value === _isDisabled) {\n    return;\n  }\n  _isDisabled = value;\n  handleUpdate();\n}\n\nexport function isDisabled(): boolean {\n  return _isDisabled;\n}\n\nexport function observe(observer: Observer): Subscription {\n  const subscription = { observer };\n  observers.add(subscription);\n\n  observer(getNextState());\n\n  return {\n    unsubscribe(): void {\n      observers.delete(subscription);\n    },\n  };\n}\n\nexport function withSubscription(\n  WrappedComponent: React.FC<object>\n): React.Component<object> {\n  class LogBoxStateSubscription extends React.Component<\n    React.PropsWithChildren<Props>,\n    State\n  > {\n    static getDerivedStateFromError() {\n      return { hasError: true };\n    }\n\n    componentDidCatch(err: Error, errorInfo: { componentStack: string } & any) {\n      /* $FlowFixMe[class-object-subtyping] added when improving typing for\n       * this parameters */\n      reportLogBoxError(err, errorInfo.componentStack);\n    }\n\n    _subscription?: Subscription;\n\n    state = {\n      logs: new Set<LogBoxLog>(),\n      isDisabled: false,\n      hasError: false,\n      selectedLogIndex: -1,\n    };\n\n    render() {\n      if (this.state.hasError) {\n        // This happens when the component failed to render, in which case we delegate to the native redbox.\n        // We can't show any fallback UI here, because the error may be with <View> or <Text>.\n        return null;\n      }\n\n      return (\n        <LogContext.Provider\n          value={{\n            selectedLogIndex: this.state.selectedLogIndex,\n            isDisabled: this.state.isDisabled,\n            logs: Array.from(this.state.logs),\n          }}\n        >\n          {this.props.children}\n          <WrappedComponent />\n        </LogContext.Provider>\n      );\n    }\n\n    componentDidMount(): void {\n      this._subscription = observe((data) => {\n        this.setState(data);\n      });\n    }\n\n    componentWillUnmount(): void {\n      if (this._subscription != null) {\n        this._subscription.unsubscribe();\n      }\n    }\n\n    _handleDismiss = (): void => {\n      // Here we handle the cases when the log is dismissed and it\n      // was either the last log, or when the current index\n      // is now outside the bounds of the log array.\n      const { selectedLogIndex, logs: stateLogs } = this.state;\n      const logsArray = Array.from(stateLogs);\n      if (selectedLogIndex != null) {\n        if (logsArray.length - 1 <= 0) {\n          setSelectedLog(-1);\n        } else if (selectedLogIndex >= logsArray.length - 1) {\n          setSelectedLog(selectedLogIndex - 1);\n        }\n\n        dismiss(logsArray[selectedLogIndex]);\n      }\n    };\n\n    _handleMinimize = (): void => {\n      setSelectedLog(-1);\n    };\n\n    _handleSetSelectedLog = (index: number): void => {\n      setSelectedLog(index);\n    };\n  }\n\n  // @ts-expect-error\n  return LogBoxStateSubscription;\n}\n"],"mappings":"i9EAQA,IAAAA,KAAA,CAAAC,YAAA,CAAAC,OAAA,WAEA,IAAAC,WAAA,CAAAD,OAAA,gBAEA,IAAAE,YAAA,CAAAF,OAAA,iBACA,IAAAG,gBAAA,CAAAH,OAAA,qBAOA,IAAAI,cAAA,CAAAC,eAAA,CAAAL,OAAA,6BACA,IAAAM,iBAAA,CAAAD,eAAA,CAAAL,OAAA,gCA8CA,GAAM,CAAAO,SAAS,CAAsC,GAAI,CAAAC,GAAG,EAAE,CAC9D,GAAM,CAAAC,cAAc,CAAuB,GAAI,CAAAD,GAAG,EAAE,CACpD,GAAI,CAAAE,IAAI,CAAe,GAAI,CAAAF,GAAG,EAAE,CAChC,GAAI,CAAAG,aAAa,CAA2C,IAAI,CAChE,GAAI,CAAAC,WAAW,CAAG,KAAK,CACvB,GAAI,CAAAC,cAAc,CAAG,CAAC,CAAC,CAEvB,GAAM,CAAAC,oBAAoB,CACxB,wEAAwE,CAE1E,QAAS,CAAAC,YAAYA,CAAA,EACnB,MAAO,CACLL,IAAI,CAAJA,IAAI,CACJM,UAAU,CAAEJ,WAAW,CACvBK,gBAAgB,CAAEJ,c,CACnB,CACH,CAEA,QAAgB,CAAAK,iBAAiBA,CAC/BC,KAAoB,CACpBC,cAAuB,EAEvB,GAAM,CAAAC,iBAAiB,CAAGrB,OAAO,gCAAgC,CAEjE,GAAIoB,cAAc,EAAI,IAAI,CAAE,CAC1BD,KAAK,CAACC,cAAc,CAAGA,cAAc,C,CAEvCC,iBAAiB,CAACC,eAAe,CAACH,KAAK,CAAC,CAC1C,CAVAI,OAAA,CAAAL,iBAAA,CAAAA,iBAAA,CAYA,QAAgB,CAAAM,2BAA2BA,CACzCL,KAAoB,CACpBC,cAAuB,EAEvBD,KAAK,CAACM,OAAO,CAAMX,oBAAoB,QAAOK,KAAK,CAACM,OAAS,CAC7D,MAAO,CAAAP,iBAAiB,CAACC,KAAK,CAAEC,cAAc,CAAC,CACjD,CANAG,OAAA,CAAAC,2BAAA,CAAAA,2BAAA,CAQA,QAAgB,CAAAE,oBAAoBA,CAACD,OAAe,EAClD,MAAO,OAAO,CAAAA,OAAO,GAAK,QAAQ,EAAIA,OAAO,CAACE,QAAQ,CAACb,oBAAoB,CAAC,CAC9E,CAFAS,OAAA,CAAAG,oBAAA,CAAAA,oBAAA,CAIA,QAAgB,CAAAE,gBAAgBA,CAACH,OAAe,EAC9C,IAAK,GAAM,CAAAI,OAAO,GAAI,CAAApB,cAAc,CAAE,CACpC,GACGoB,OAAO,WAAY,CAAAC,MAAM,EAAID,OAAO,CAACE,IAAI,CAACN,OAAO,CAAC,EAClD,MAAO,CAAAI,OAAO,GAAK,QAAQ,EAAIJ,OAAO,CAACE,QAAQ,CAACE,OAAO,CAAE,CAC1D,CACA,MAAO,KAAI,C,EAGf,MAAO,MAAK,CACd,CAVAN,OAAA,CAAAK,gBAAA,CAAAA,gBAAA,CAYA,QAAS,CAAAI,YAAYA,CAAA,EACnB,GAAIrB,aAAa,EAAI,IAAI,CAAE,CACzBA,aAAa,CAAGsB,YAAY,CAAC,UAAK,CAChCtB,aAAa,CAAG,IAAI,CACpB,GAAM,CAAAuB,SAAS,CAAGnB,YAAY,EAAE,CAChCR,SAAS,CAAC4B,OAAO,CAAC,SAAAC,IAAA,KAAG,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,OAAO,CAAAA,QAAQ,CAACH,SAAS,CAAC,GAAC,CAC1D,CAAC,CAAC,C,CAEN,CAEA,QAAS,CAAAI,YAAYA,CAACC,MAAiB,EAGrC,GAAIX,gBAAgB,CAACW,MAAM,CAACd,OAAO,CAACe,OAAO,CAAC,CAAE,CAC5C,O,CAMF,GAAM,CAAAC,OAAO,CAAGC,KAAK,CAACC,IAAI,CAACjC,IAAI,CAAC,CAACkC,GAAG,EAAE,CACtC,GAAIH,OAAO,EAAIA,OAAO,CAACI,QAAQ,GAAKN,MAAM,CAACM,QAAQ,CAAE,CACnDJ,OAAO,CAACK,cAAc,EAAE,CACxBd,YAAY,EAAE,CACd,O,CAGF,GAAIO,MAAM,CAACQ,KAAK,GAAK,OAAO,CAAE,CAI5B,GAAM,CAAAC,oBAAoB,CAAG,IAAI,CAEjC,GAAI,CAAAC,cAAa,CAAwB,SAAAA,cAAA,CAAK,CAC5CvC,IAAI,CAACwC,GAAG,CAACX,MAAM,CAAC,CAChB,GAAI1B,cAAc,CAAG,CAAC,CAAE,CACtBsC,cAAc,CAACzC,IAAI,CAAC0C,IAAI,CAAG,CAAC,CAAC,C,CAC9B,IAAM,CACLpB,YAAY,EAAE,C,CAEhBiB,cAAa,CAAG,IAAI,CACtB,CAAC,CAED,GAAM,CAAAI,iBAAiB,CAAGC,UAAU,CAAC,UAAK,CACxC,GAAIL,cAAa,CAAE,CACjBA,cAAa,EAAE,C,CAEnB,CAAC,CAAED,oBAAoB,CAAC,CAGxBT,MAAM,CAACgB,WAAW,CAAC,WAAW,CAAC,CAE/BhB,MAAM,CAACgB,WAAW,CAAC,OAAO,CAAE,SAACC,MAAM,CAAI,CACrC,GAAIP,cAAa,EAAIO,MAAM,GAAK,SAAS,CAAE,CACzCP,cAAa,EAAE,CACfQ,YAAY,CAACJ,iBAAiB,CAAC,C,CAChC,IAAM,IAAIG,MAAM,GAAK,SAAS,CAAE,CAE/BxB,YAAY,EAAE,C,CAElB,CAAC,CAAC,C,CACH,IAAM,IAAIO,MAAM,CAACQ,KAAK,GAAK,QAAQ,CAAE,CACpCrC,IAAI,CAACwC,GAAG,CAACX,MAAM,CAAC,CAChBY,cAAc,CAACzC,IAAI,CAAC0C,IAAI,CAAG,CAAC,CAAC,C,CAC9B,IAAM,CACL1C,IAAI,CAACwC,GAAG,CAACX,MAAM,CAAC,CAChBP,YAAY,EAAE,C,CAElB,CAEA,QAAgB,CAAA0B,MAAMA,CAACC,GAAY,EACjC,GAAM,CAAAC,kBAAkB,CAAG,GAAI,CAAAC,KAAK,EAAE,CAItC5B,YAAY,CAAC,UAAK,CAChB,GAAI,CACF,GAAM,CAAA6B,KAAK,CAAG,GAAAxD,iBAAA,CAAAyD,OAAe,EAACH,kBAAkB,SAAlBA,kBAAkB,iBAAlBA,kBAAkB,CAAEE,KAAK,CAAC,CAExDxB,YAAY,CACV,GAAI,CAAArC,WAAA,CAAA+D,SAAS,CAAC,CACZjB,KAAK,CAAEY,GAAG,CAACZ,KAAK,CAChBtB,OAAO,CAAEkC,GAAG,CAAClC,OAAO,CACpBwC,gBAAgB,CAAE,KAAK,CACvBH,KAAK,CAALA,KAAK,CACLjB,QAAQ,CAAEc,GAAG,CAACd,QAAQ,CACtBzB,cAAc,CAAEuC,GAAG,CAACvC,c,CACrB,CAAC,CACH,C,CACD,MAAOD,KAAK,CAAE,CACdK,2BAA2B,CAACL,KAAK,CAAC,C,CAEtC,CAAC,CAAC,CACJ,CAvBAI,OAAA,CAAAmC,MAAA,CAAAA,MAAA,CAyBA,QAAgB,CAAAQ,YAAYA,CAAC/C,KAA4B,EAGvDc,YAAY,CAAC,UAAK,CAChB,GAAI,CACFK,YAAY,CAAC,GAAI,CAAArC,WAAA,CAAA+D,SAAS,CAAC,GAAA7D,gBAAA,CAAAgE,oBAAoB,EAAChD,KAAK,CAAC,CAAC,CAAC,C,CACxD,MAAOiD,YAAY,CAAE,CACrB5C,2BAA2B,CAAC4C,YAAY,CAAC,C,CAE7C,CAAC,CAAC,CACJ,CAVA7C,OAAA,CAAA2C,YAAA,CAAAA,YAAA,CAYA,QAAgB,CAAAG,iBAAiBA,CAACC,IAAe,CAAEX,GAAc,EAC/DA,GAAG,CAACJ,WAAW,CAACe,IAAI,CAAE,UAAK,CACzBtC,YAAY,EAAE,CAChB,CAAC,CAAC,CACJ,CAJAT,OAAA,CAAA8C,iBAAA,CAAAA,iBAAA,CAMA,QAAgB,CAAAE,sBAAsBA,CAACD,IAAe,CAAEX,GAAc,EACpEA,GAAG,CAACa,gBAAgB,CAACF,IAAI,CAAE,UAAK,CAC9BtC,YAAY,EAAE,CAChB,CAAC,CAAC,CACJ,CAJAT,OAAA,CAAAgD,sBAAA,CAAAA,sBAAA,CAMA,QAAgB,CAAAE,kBAAkBA,CAACH,IAAe,CAAEX,GAAc,EAChEA,GAAG,CAACJ,WAAW,CAACe,IAAI,CAAC,CACvB,CAFA/C,OAAA,CAAAkD,kBAAA,CAAAA,kBAAA,CAIA,QAAgB,CAAAC,KAAKA,CAAA,EACnB,GAAIhE,IAAI,CAAC0C,IAAI,CAAG,CAAC,CAAE,CACjB1C,IAAI,CAAG,GAAI,CAAAF,GAAG,EAAE,CAChB2C,cAAc,CAAC,CAAC,CAAC,CAAC,C,CAEtB,CALA5B,OAAA,CAAAmD,KAAA,CAAAA,KAAA,CAOA,QAAgB,CAAAvB,cAAcA,CAACwB,gBAAwB,EACrD,GAAM,CAAAC,QAAQ,CAAG/D,cAAc,CAC/B,GAAI,CAAAgE,QAAQ,CAAGF,gBAAgB,CAE/B,GAAM,CAAAG,QAAQ,CAAGpC,KAAK,CAACC,IAAI,CAACjC,IAAI,CAAC,CACjC,GAAI,CAAAqE,KAAK,CAAGD,QAAQ,CAACE,MAAM,CAAG,CAAC,CAC/B,MAAOD,KAAK,EAAI,CAAC,CAAE,CAEjB,GAAID,QAAQ,CAACC,KAAK,CAAC,CAAChC,KAAK,GAAK,QAAQ,CAAE,CACtC8B,QAAQ,CAAGE,KAAK,CAChB,M,CAEFA,KAAK,EAAI,CAAC,C,CAEZlE,cAAc,CAAGgE,QAAQ,CACzB7C,YAAY,EAAE,CACd,GAAI5B,cAAA,CAAA2D,OAAY,CAAE,CAChBT,UAAU,CAAC,UAAK,CACd,GAAIsB,QAAQ,CAAG,CAAC,EAAIC,QAAQ,EAAI,CAAC,CAAE,CACjCzE,cAAA,CAAA2D,OAAY,CAACkB,IAAI,EAAE,C,CACpB,IAAM,IAAIL,QAAQ,EAAI,CAAC,EAAIC,QAAQ,CAAG,CAAC,CAAE,CACxCzE,cAAA,CAAA2D,OAAY,CAACmB,IAAI,EAAE,C,CAEvB,CAAC,CAAE,CAAC,CAAC,C,CAET,CAzBA3D,OAAA,CAAA4B,cAAA,CAAAA,cAAA,CA2BA,QAAgB,CAAAgC,aAAaA,CAAA,EAC3B,GAAM,CAAAC,OAAO,CAAG1C,KAAK,CAACC,IAAI,CAACjC,IAAI,CAAC,CAAC2E,MAAM,CAAC,SAAC1B,GAAG,QAAK,CAAAA,GAAG,CAACZ,KAAK,GAAK,MAAM,GAAC,CACtE,GAAIqC,OAAO,CAACJ,MAAM,GAAKtE,IAAI,CAAC0C,IAAI,CAAE,CAChC1C,IAAI,CAAG,GAAI,CAAAF,GAAG,CAAC4E,OAAO,CAAC,CACvBjC,cAAc,CAAC,CAAC,CAAC,CAAC,CAClBnB,YAAY,EAAE,C,CAElB,CAPAT,OAAA,CAAA4D,aAAA,CAAAA,aAAA,CASA,QAAgB,CAAAG,WAAWA,CAAA,EACzB,GAAM,CAAAF,OAAO,CAAG1C,KAAK,CAACC,IAAI,CAACjC,IAAI,CAAC,CAAC2E,MAAM,CACrC,SAAC1B,GAAG,QAAK,CAAAA,GAAG,CAACZ,KAAK,GAAK,OAAO,EAAIY,GAAG,CAACZ,KAAK,GAAK,OAAO,GACxD,CACD,GAAIqC,OAAO,CAACJ,MAAM,GAAKtE,IAAI,CAAC0C,IAAI,CAAE,CAChC1C,IAAI,CAAG,GAAI,CAAAF,GAAG,CAAC4E,OAAO,CAAC,CACvBjC,cAAc,CAAC,CAAC,CAAC,CAAC,C,CAEtB,CARA5B,OAAA,CAAA+D,WAAA,CAAAA,WAAA,CAUA,QAAgB,CAAAC,OAAOA,CAAC5B,GAAc,EACpC,GAAIjD,IAAI,CAAC8E,GAAG,CAAC7B,GAAG,CAAC,CAAE,CACjBjD,IAAI,CAAC+E,MAAM,CAAC9B,GAAG,CAAC,CAChB3B,YAAY,EAAE,C,CAElB,CALAT,OAAA,CAAAgE,OAAA,CAAAA,OAAA,CAOA,QAAgB,CAAAG,iBAAiBA,CAAA,EAC/B,MAAO,CAAAhD,KAAK,CAACC,IAAI,CAAClC,cAAc,CAAC,CACnC,CAFAc,OAAA,CAAAmE,iBAAA,CAAAA,iBAAA,CAIA,QAAgB,CAAAC,iBAAiBA,CAACC,QAAyB,EACzD,GAAM,CAAAC,YAAY,CAAGpF,cAAc,CAAC2C,IAAI,CAGxCwC,QAAQ,CAACzD,OAAO,CAAC,SAACN,OAAsB,CAAI,CAC1C,GAAIA,OAAO,WAAY,CAAAC,MAAM,CAAE,CAC7B,IAAK,GAAM,CAAAgE,eAAe,GAAI,CAAArF,cAAc,CAAE,CAC5C,GACEqF,eAAe,WAAY,CAAAhE,MAAM,EACjCgE,eAAe,CAACC,QAAQ,EAAE,GAAKlE,OAAO,CAACkE,QAAQ,EAAE,CACjD,CACA,O,EAGJtF,cAAc,CAACyC,GAAG,CAACrB,OAAO,CAAC,C,CAE7BpB,cAAc,CAACyC,GAAG,CAACrB,OAAO,CAAC,CAC7B,CAAC,CAAC,CACF,GAAIpB,cAAc,CAAC2C,IAAI,GAAKyC,YAAY,CAAE,CACxC,O,CAMFnF,IAAI,CAAG,GAAI,CAAAF,GAAG,CACZkC,KAAK,CAACC,IAAI,CAACjC,IAAI,CAAC,CAAC2E,MAAM,CAAC,SAAC1B,GAAG,QAAK,CAAC/B,gBAAgB,CAAC+B,GAAG,CAAClC,OAAO,CAACe,OAAO,CAAC,GAAC,CACzE,CACDR,YAAY,EAAE,CAChB,CA7BAT,OAAA,CAAAoE,iBAAA,CAAAA,iBAAA,CA+BA,QAAgB,CAAAK,WAAWA,CAACC,KAAc,EACxC,GAAIA,KAAK,GAAKrF,WAAW,CAAE,CACzB,O,CAEFA,WAAW,CAAGqF,KAAK,CACnBjE,YAAY,EAAE,CAChB,CANAT,OAAA,CAAAyE,WAAA,CAAAA,WAAA,CAQA,QAAgB,CAAAhF,UAAUA,CAAA,EACxB,MAAO,CAAAJ,WAAW,CACpB,CAFAW,OAAA,CAAAP,UAAA,CAAAA,UAAA,CAIA,QAAgB,CAAAkF,OAAOA,CAAC7D,QAAkB,EACxC,GAAM,CAAA8D,YAAY,CAAG,CAAE9D,QAAQ,CAARA,QAAQ,CAAE,CACjC9B,SAAS,CAAC2C,GAAG,CAACiD,YAAY,CAAC,CAE3B9D,QAAQ,CAACtB,YAAY,EAAE,CAAC,CAExB,MAAO,CACLqF,WAAW,UAAAA,YAAA,EACT7F,SAAS,CAACkF,MAAM,CAACU,YAAY,CAAC,CAChC,C,CACD,CACH,CAXA5E,OAAA,CAAA2E,OAAA,CAAAA,OAAA,CAaA,QAAgB,CAAAG,gBAAgBA,CAC9BC,gBAAkC,KAE5B,CAAAC,uBAAwB,UAAAC,gBAAA,EAAAC,SAAA,CAAAF,uBAAA,CAAAC,gBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,uBAAA,EAA9B,SAAAA,wBAAA,MAAAK,KAAA,CAAAC,eAAA,MAAAN,uBAAA,E,mCAgBEK,KAAA,CAAAE,KAAK,CAAG,CACNpG,IAAI,CAAE,GAAI,CAAAF,GAAG,EAAa,CAC1BQ,UAAU,CAAE,KAAK,CACjB+F,QAAQ,CAAE,KAAK,CACf9F,gBAAgB,CAAE,CAAC,C,CACpB,CAmCD2F,KAAA,CAAAI,cAAc,CAAG,UAAW,CAI1B,IAAAC,WAAA,CAA8CL,KAAA,CAAKE,KAAK,CAAhD7F,gBAAgB,CAAAgG,WAAA,CAAhBhG,gBAAgB,CAAQiG,SAAS,CAAAD,WAAA,CAAfvG,IAAI,CAC9B,GAAM,CAAAyG,SAAS,CAAGzE,KAAK,CAACC,IAAI,CAACuE,SAAS,CAAC,CACvC,GAAIjG,gBAAgB,EAAI,IAAI,CAAE,CAC5B,GAAIkG,SAAS,CAACnC,MAAM,CAAG,CAAC,EAAI,CAAC,CAAE,CAC7B7B,cAAc,CAAC,CAAC,CAAC,CAAC,C,CACnB,IAAM,IAAIlC,gBAAgB,EAAIkG,SAAS,CAACnC,MAAM,CAAG,CAAC,CAAE,CACnD7B,cAAc,CAAClC,gBAAgB,CAAG,CAAC,CAAC,C,CAGtCsE,OAAO,CAAC4B,SAAS,CAAClG,gBAAgB,CAAC,CAAC,C,CAExC,CAAC,CAED2F,KAAA,CAAAQ,eAAe,CAAG,UAAW,CAC3BjE,cAAc,CAAC,CAAC,CAAC,CAAC,CACpB,CAAC,CAEDyD,KAAA,CAAAS,qBAAqB,CAAG,SAACtC,KAAa,CAAU,CAC9C5B,cAAc,CAAC4B,KAAK,CAAC,CACvB,CAAC,CAAC,OAAA6B,KAAA,CACJ,CAACU,YAAA,CAAAf,uBAAA,GAAAgB,GAAA,qBAAAtB,KAAA,CAxEC,SAAAuB,kBAAkBC,GAAU,CAAEC,SAA2C,EAGvExG,iBAAiB,CAACuG,GAAG,CAAEC,SAAS,CAACtG,cAAc,CAAC,CAClD,CAAC,GAAAmG,GAAA,UAAAtB,KAAA,CAWD,SAAA0B,OAAA,CAAM,CACJ,GAAI,IAAI,CAACb,KAAK,CAACC,QAAQ,CAAE,CAGvB,MAAO,KAAI,C,CAGb,MACE,CAAAjH,KAAA,CAAA8H,aAAA,CAAC1H,YAAA,CAAA2H,UAAU,CAACC,QAAQ,EAClB7B,KAAK,CAAE,CACLhF,gBAAgB,CAAE,IAAI,CAAC6F,KAAK,CAAC7F,gBAAgB,CAC7CD,UAAU,CAAE,IAAI,CAAC8F,KAAK,CAAC9F,UAAU,CACjCN,IAAI,CAAEgC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACmE,KAAK,CAACpG,IAAI,C,CACjC,EAEA,IAAI,CAACqH,KAAK,CAACC,QAAQ,CACpBlI,KAAA,CAAA8H,aAAA,CAACtB,gBAAgB,MAAG,CACA,CAE1B,CAAC,GAAAiB,GAAA,qBAAAtB,KAAA,CAED,SAAAgC,kBAAA,CAAiB,KAAAC,MAAA,MACf,IAAI,CAACC,aAAa,CAAGjC,OAAO,CAAC,SAACkC,IAAI,CAAI,CACpCF,MAAI,CAACG,QAAQ,CAACD,IAAI,CAAC,CACrB,CAAC,CAAC,CACJ,CAAC,GAAAb,GAAA,wBAAAtB,KAAA,CAED,SAAAqC,qBAAA,CAAoB,CAClB,GAAI,IAAI,CAACH,aAAa,EAAI,IAAI,CAAE,CAC9B,IAAI,CAACA,aAAa,CAAC/B,WAAW,EAAE,C,CAEpC,CAAC,KAAAmB,GAAA,4BAAAtB,KAAA,CAlDD,SAAAsC,yBAAA,CAA+B,CAC7B,MAAO,CAAExB,QAAQ,CAAE,IAAI,CAAE,CAC3B,CAAC,WAAAR,uBAAA,GANmCzG,KAAK,CAAC0I,SAG3C,EAgFD,MAAO,CAAAjC,uBAAuB,CAChC,CAvFAhF,OAAA,CAAA8E,gBAAA,CAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
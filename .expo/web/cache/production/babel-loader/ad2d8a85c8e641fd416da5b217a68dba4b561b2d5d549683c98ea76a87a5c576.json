{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{useRoute}from\"@react-navigation/native\";import React from\"react\";import{getNavigationContainerRef}from\"./NavigationContainer\";import{deepEqual,getPathDataFromState}from\"./fork/getPathFromState\";import{useLinkingContext}from\"./link/useLinkingContext\";import{useServerState}from\"./static/useServerState\";import{useInitialRootStateContext}from\"./useInitialRootStateContext\";import{jsx as _jsx}from\"react/jsx-runtime\";function getRouteInfoFromState(getPathFromState,state){var _getPathFromState=getPathFromState(state,false),path=_getPathFromState.path;var qualified=getPathFromState(state,true);return _objectSpread({pathname:path.split(\"?\")[\"0\"]},getNormalizedStatePath(qualified));}function compareRouteInfo(a,b){return a.segments.length===b.segments.length&&a.segments.every(function(segment,index){return segment===b.segments[index];})&&a.pathname===b.pathname&&compareUrlSearchParams(a.params,b.params);}export function compareUrlSearchParams(a,b){return deepEqual(a,b);}function useSafeInitialRootState(){var serverState=useServerState();var initialRootState=useInitialRootStateContext();return React.useMemo(function(){if(serverState){return serverState;}if(getNavigationContainerRef().isReady()){var _getNavigationContain;return(_getNavigationContain=getNavigationContainerRef().getRootState())!=null?_getNavigationContain:initialRootState;}return initialRootState;},[]);}function useUrlObject(){var getPathFromState=useGetPathFromState();var _React$useState=React.useState(getRouteInfoFromState(getPathFromState,useSafeInitialRootState())),_React$useState2=_slicedToArray(_React$useState,2),routeInfo=_React$useState2[0],setRouteInfo=_React$useState2[1];var routeInfoRef=React.useRef(routeInfo);React.useEffect(function(){routeInfoRef.current=routeInfo;},[routeInfo]);var maybeUpdateRouteInfo=React.useCallback(function(state){if(!state){return;}var newRouteInfo=getRouteInfoFromState(getPathFromState,state);if(!compareRouteInfo(routeInfoRef.current,newRouteInfo)){setRouteInfo(newRouteInfo);}},[getPathFromState]);React.useEffect(function(){var rootNavigation=getNavigationContainerRef();return rootNavigation.addListener(\"state\",function(_ref){var _rootNavigation$getRo;var data=_ref.data;var navigationState=(_rootNavigation$getRo=rootNavigation.getRootState())!=null?_rootNavigation$getRo:data.state;maybeUpdateRouteInfo(navigationState);});},[maybeUpdateRouteInfo]);return routeInfo;}function useGetPathFromState(){var linking=useLinkingContext();return React.useCallback(function(state,asPath){return getPathDataFromState(state,_objectSpread(_objectSpread({},linking.config),{},{preserveDynamicRoutes:asPath,preserveGroups:asPath}));},[linking]);}export function getNormalizedStatePath(_ref2){var statePath=_ref2.path,params=_ref2.params;var _statePath$split=statePath.split(\"?\"),_statePath$split2=_slicedToArray(_statePath$split,1),pathname=_statePath$split2[0];return{segments:pathname.split(\"/\").filter(Boolean).map(decodeURIComponent),params:Object.entries(params).reduce(function(prev,_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];if(Array.isArray(value)){prev[key]=value.map(decodeURIComponent);}else{prev[key]=decodeURIComponent(value);}return prev;},{})};}var LocationContext=React.createContext(undefined);if(process.env.NODE_ENV!==\"production\"){LocationContext.displayName=\"LocationContext\";}export function LocationProvider(_ref5){var children=_ref5.children;return _jsx(LocationContext.Provider,{value:useUrlObject(),children:children});}function useLocation(){var location=React.useContext(LocationContext);if(!location){throw new Error(\"Location context is missing. Make sure you are rendering a <LocationProvider />.\");}return location;}export function usePathname(){return useLocation().pathname;}export function useSearchParams(){return useLocation().params;}export function useLocalSearchParams(){var _useRoute$params,_useRoute;return(_useRoute$params=(_useRoute=useRoute())==null?void 0:_useRoute.params)!=null?_useRoute$params:{};}export function useSegments(){return useLocation().segments;}","map":{"version":3,"names":["useRoute","React","getNavigationContainerRef","deepEqual","getPathDataFromState","useLinkingContext","useServerState","useInitialRootStateContext","jsx","_jsx","getRouteInfoFromState","getPathFromState","state","_getPathFromState","path","qualified","_objectSpread","pathname","split","getNormalizedStatePath","compareRouteInfo","a","b","segments","length","every","segment","index","compareUrlSearchParams","params","useSafeInitialRootState","serverState","initialRootState","useMemo","isReady","_getNavigationContain","getRootState","useUrlObject","useGetPathFromState","_React$useState","useState","_React$useState2","_slicedToArray","routeInfo","setRouteInfo","routeInfoRef","useRef","useEffect","current","maybeUpdateRouteInfo","useCallback","newRouteInfo","rootNavigation","addListener","_ref","_rootNavigation$getRo","data","navigationState","linking","asPath","config","preserveDynamicRoutes","preserveGroups","_ref2","statePath","_statePath$split","_statePath$split2","filter","Boolean","map","decodeURIComponent","Object","entries","reduce","prev","_ref3","_ref4","key","value","Array","isArray","LocationContext","createContext","undefined","process","env","NODE_ENV","displayName","LocationProvider","_ref5","children","Provider","useLocation","location","useContext","Error","usePathname","useSearchParams","useLocalSearchParams","_useRoute$params","_useRoute","useSegments"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/LocationProvider.tsx"],"sourcesContent":["import { useRoute } from \"@react-navigation/native\";\nimport React from \"react\";\n\nimport { getNavigationContainerRef } from \"./NavigationContainer\";\nimport getPathFromState, {\n  deepEqual,\n  getPathDataFromState,\n  State,\n} from \"./fork/getPathFromState\";\nimport { useLinkingContext } from \"./link/useLinkingContext\";\nimport { useServerState } from \"./static/useServerState\";\nimport { useInitialRootStateContext } from \"./useInitialRootStateContext\";\n\ntype SearchParams = Record<string, string | string[]>;\n\ntype UrlObject = {\n  pathname: string;\n  readonly params: SearchParams;\n  segments: string[];\n};\n\nfunction getRouteInfoFromState(\n  getPathFromState: (\n    state: State,\n    asPath: boolean\n  ) => { path: string; params: any },\n  state: State\n): UrlObject {\n  const { path } = getPathFromState(state, false);\n  const qualified = getPathFromState(state, true);\n  return {\n    pathname: path.split(\"?\")[\"0\"],\n    ...getNormalizedStatePath(qualified),\n  };\n}\n\nfunction compareRouteInfo(a: UrlObject, b: UrlObject) {\n  return (\n    a.segments.length === b.segments.length &&\n    a.segments.every((segment, index) => segment === b.segments[index]) &&\n    a.pathname === b.pathname &&\n    compareUrlSearchParams(a.params, b.params)\n  );\n}\n\nexport function compareUrlSearchParams(\n  a: SearchParams,\n  b: SearchParams\n): boolean {\n  return deepEqual(a, b);\n}\n\nfunction useSafeInitialRootState() {\n  const serverState = useServerState();\n  const initialRootState = useInitialRootStateContext();\n\n  return React.useMemo(() => {\n    if (serverState) {\n      return serverState;\n    }\n\n    // Check if \"is ready\" to prevent `console.error`s\n    if (getNavigationContainerRef().isReady()) {\n      return getNavigationContainerRef().getRootState() ?? initialRootState;\n    }\n\n    return initialRootState;\n  }, []);\n}\n\nfunction useUrlObject(): UrlObject {\n  const getPathFromState = useGetPathFromState();\n\n  const [routeInfo, setRouteInfo] = React.useState<UrlObject>(\n    getRouteInfoFromState(\n      getPathFromState,\n      // If the root state (from upstream) is not ready, use the hacky initial state.\n      // Initial state can be generate because it assumes the linking configuration never changes.\n      useSafeInitialRootState()\n    )\n  );\n\n  const routeInfoRef = React.useRef(routeInfo);\n\n  React.useEffect(() => {\n    routeInfoRef.current = routeInfo;\n  }, [routeInfo]);\n\n  const maybeUpdateRouteInfo = React.useCallback(\n    (state: State) => {\n      // The state can be undefined when hot reloading a Layout Route on native.\n      if (!state) {\n        return;\n      }\n      // Prevent unnecessary updates\n      const newRouteInfo = getRouteInfoFromState(getPathFromState, state);\n      if (!compareRouteInfo(routeInfoRef.current, newRouteInfo)) {\n        setRouteInfo(newRouteInfo);\n      }\n    },\n    [\n      // TODO: This probably never changes\n      getPathFromState,\n    ]\n  );\n\n  React.useEffect(() => {\n    const rootNavigation = getNavigationContainerRef();\n\n    return rootNavigation.addListener(\"state\", ({ data }) => {\n      // Attempt to use the complete state from the root, otherwise this will default to\n      // sending events from the nearest layout.\n      const navigationState =\n        rootNavigation.getRootState() ?? (data.state as unknown as State);\n      // NOTE(EvanBacon): It's probably worth asserting if the root state is missing here.\n      maybeUpdateRouteInfo(navigationState);\n    });\n  }, [maybeUpdateRouteInfo]);\n\n  return routeInfo;\n}\n\nfunction useGetPathFromState() {\n  const linking = useLinkingContext();\n\n  return React.useCallback(\n    (state: Parameters<typeof getPathFromState>[0], asPath: boolean) => {\n      return getPathDataFromState(state, {\n        ...linking.config,\n        preserveDynamicRoutes: asPath,\n        preserveGroups: asPath,\n      });\n    },\n    [linking]\n  );\n}\n\n// TODO: Split up getPathFromState to return all this info at once.\nexport function getNormalizedStatePath({\n  path: statePath,\n  params,\n}: {\n  path: string;\n  params: any;\n}): Omit<UrlObject, \"pathname\"> {\n  const [pathname] = statePath.split(\"?\");\n  return {\n    // Strip empty path at the start\n    segments: pathname.split(\"/\").filter(Boolean).map(decodeURIComponent),\n    // TODO: This is not efficient, we should generate based on the state instead\n    // of converting to string then back to object\n    params: Object.entries(params).reduce((prev, [key, value]) => {\n      if (Array.isArray(value)) {\n        prev[key] = value.map(decodeURIComponent);\n      } else {\n        prev[key] = decodeURIComponent(value as string);\n      }\n      return prev;\n    }, {} as SearchParams),\n  };\n}\n\nconst LocationContext = React.createContext<UrlObject | undefined>(undefined);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"LocationContext\";\n}\n\nexport function LocationProvider({ children }: { children: React.ReactNode }) {\n  return (\n    <LocationContext.Provider value={useUrlObject()}>\n      {children}\n    </LocationContext.Provider>\n  );\n}\n\nfunction useLocation() {\n  const location = React.useContext(LocationContext);\n\n  if (!location) {\n    throw new Error(\n      \"Location context is missing. Make sure you are rendering a <LocationProvider />.\"\n    );\n  }\n\n  return location;\n}\n\n/** @returns Currently selected route as a normalized string without search parameters. e.g. `/acme?foo=bar` -> `/acme`. Segments will be normalized: `/[id]?id=normal` -> `/normal` */\nexport function usePathname(): string {\n  return useLocation().pathname;\n}\n\n/** @returns Current URL Search Parameters. */\nexport function useSearchParams<\n  TParams extends SearchParams = SearchParams\n>(): Partial<TParams> {\n  return useLocation().params as Partial<TParams>;\n}\n\n/** @returns Current URL Search Parameters that only update when the path matches the current route. */\nexport function useLocalSearchParams<\n  TParams extends SearchParams = SearchParams\n>(): Partial<TParams> {\n  return (useRoute()?.params ?? ({} as any)) as Partial<TParams>;\n}\n\n/** @returns Array of selected segments. */\nexport function useSegments(): string[] {\n  return useLocation().segments;\n}\n"],"mappings":"y4BAAA,OAASA,QAAQ,KAAQ,0BAA0B,CACnD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,OAASC,yBAAyB,6BAClC,OACEC,SAAS,CACTC,oBAAoB,+BAGtB,OAASC,iBAAiB,gCAC1B,OAASC,cAAc,+BACvB,OAASC,0BAA0B,oCAAuC,OAAAC,GAAA,IAAAC,IAAA,yBAU1E,QAAS,CAAAC,qBAAqBA,CAC5BC,gBAGkC,CAClCC,KAAY,CACD,CACX,IAAAC,iBAAA,CAAiBF,gBAAgB,CAACC,KAAK,CAAE,KAAK,CAAC,CAAvCE,IAAI,CAAAD,iBAAA,CAAJC,IAAI,CACZ,GAAM,CAAAC,SAAS,CAAGJ,gBAAgB,CAACC,KAAK,CAAE,IAAI,CAAC,CAC/C,OAAAI,aAAA,EACEC,QAAQ,CAAEH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAC3BC,sBAAsB,CAACJ,SAAS,CAAC,EAExC,CAEA,QAAS,CAAAK,gBAAgBA,CAACC,CAAY,CAAEC,CAAY,CAAE,CACpD,MACE,CAAAD,CAAC,CAACE,QAAQ,CAACC,MAAM,GAAKF,CAAC,CAACC,QAAQ,CAACC,MAAM,EACvCH,CAAC,CAACE,QAAQ,CAACE,KAAK,CAAC,SAACC,OAAO,CAAEC,KAAK,QAAK,CAAAD,OAAO,GAAKJ,CAAC,CAACC,QAAQ,CAACI,KAAK,CAAC,GAAC,EACnEN,CAAC,CAACJ,QAAQ,GAAKK,CAAC,CAACL,QAAQ,EACzBW,sBAAsB,CAACP,CAAC,CAACQ,MAAM,CAAEP,CAAC,CAACO,MAAM,CAAC,CAE9C,CAEA,MAAO,SAAS,CAAAD,sBAAsBA,CACpCP,CAAe,CACfC,CAAe,CACN,CACT,MAAO,CAAAnB,SAAS,CAACkB,CAAC,CAAEC,CAAC,CAAC,CACxB,CAEA,QAAS,CAAAQ,uBAAuBA,CAAA,CAAG,CACjC,GAAM,CAAAC,WAAW,CAAGzB,cAAc,EAAE,CACpC,GAAM,CAAA0B,gBAAgB,CAAGzB,0BAA0B,EAAE,CAErD,MAAO,CAAAN,KAAK,CAACgC,OAAO,CAAC,UAAM,CACzB,GAAIF,WAAW,CAAE,CACf,MAAO,CAAAA,WAAW,CACpB,CAGA,GAAI7B,yBAAyB,EAAE,CAACgC,OAAO,EAAE,CAAE,KAAAC,qBAAA,CACzC,OAAAA,qBAAA,CAAOjC,yBAAyB,EAAE,CAACkC,YAAY,EAAE,QAAAD,qBAAA,CAAIH,gBAAgB,CACvE,CAEA,MAAO,CAAAA,gBAAgB,CACzB,CAAC,CAAE,EAAE,CAAC,CACR,CAEA,QAAS,CAAAK,YAAYA,CAAA,CAAc,CACjC,GAAM,CAAA1B,gBAAgB,CAAG2B,mBAAmB,EAAE,CAE9C,IAAAC,eAAA,CAAkCtC,KAAK,CAACuC,QAAQ,CAC9C9B,qBAAqB,CACnBC,gBAAgB,CAGhBmB,uBAAuB,EAAE,CAC1B,CACF,CAAAW,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAPMI,SAAS,CAAAF,gBAAA,IAAEG,YAAY,CAAAH,gBAAA,IAS9B,GAAM,CAAAI,YAAY,CAAG5C,KAAK,CAAC6C,MAAM,CAACH,SAAS,CAAC,CAE5C1C,KAAK,CAAC8C,SAAS,CAAC,UAAM,CACpBF,YAAY,CAACG,OAAO,CAAGL,SAAS,CAClC,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf,GAAM,CAAAM,oBAAoB,CAAGhD,KAAK,CAACiD,WAAW,CAC5C,SAACtC,KAAY,CAAK,CAEhB,GAAI,CAACA,KAAK,CAAE,CACV,OACF,CAEA,GAAM,CAAAuC,YAAY,CAAGzC,qBAAqB,CAACC,gBAAgB,CAAEC,KAAK,CAAC,CACnE,GAAI,CAACQ,gBAAgB,CAACyB,YAAY,CAACG,OAAO,CAAEG,YAAY,CAAC,CAAE,CACzDP,YAAY,CAACO,YAAY,CAAC,CAC5B,CACF,CAAC,CACD,CAEExC,gBAAgB,CACjB,CACF,CAEDV,KAAK,CAAC8C,SAAS,CAAC,UAAM,CACpB,GAAM,CAAAK,cAAc,CAAGlD,yBAAyB,EAAE,CAElD,MAAO,CAAAkD,cAAc,CAACC,WAAW,CAAC,OAAO,CAAE,SAAAC,IAAA,CAAc,KAAAC,qBAAA,IAAX,CAAAC,IAAI,CAAAF,IAAA,CAAJE,IAAI,CAGhD,GAAM,CAAAC,eAAe,EAAAF,qBAAA,CACnBH,cAAc,CAAChB,YAAY,EAAE,QAAAmB,qBAAA,CAAKC,IAAI,CAAC5C,KAA0B,CAEnEqC,oBAAoB,CAACQ,eAAe,CAAC,CACvC,CAAC,CAAC,CACJ,CAAC,CAAE,CAACR,oBAAoB,CAAC,CAAC,CAE1B,MAAO,CAAAN,SAAS,CAClB,CAEA,QAAS,CAAAL,mBAAmBA,CAAA,CAAG,CAC7B,GAAM,CAAAoB,OAAO,CAAGrD,iBAAiB,EAAE,CAEnC,MAAO,CAAAJ,KAAK,CAACiD,WAAW,CACtB,SAACtC,KAA6C,CAAE+C,MAAe,CAAK,CAClE,MAAO,CAAAvD,oBAAoB,CAACQ,KAAK,CAAAI,aAAA,CAAAA,aAAA,IAC5B0C,OAAO,CAACE,MAAM,MACjBC,qBAAqB,CAAEF,MAAM,CAC7BG,cAAc,CAAEH,MAAM,GACtB,CACJ,CAAC,CACD,CAACD,OAAO,CAAC,CACV,CACH,CAGA,MAAO,SAAS,CAAAvC,sBAAsBA,CAAA4C,KAAA,CAMN,IALxB,CAAAC,SAAS,CAAAD,KAAA,CAAfjD,IAAI,CACJe,MAAM,CAAAkC,KAAA,CAANlC,MAAM,CAKN,IAAAoC,gBAAA,CAAmBD,SAAS,CAAC9C,KAAK,CAAC,GAAG,CAAC,CAAAgD,iBAAA,CAAAxB,cAAA,CAAAuB,gBAAA,IAAhChD,QAAQ,CAAAiD,iBAAA,IACf,MAAO,CAEL3C,QAAQ,CAAEN,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACiD,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAACC,kBAAkB,CAAC,CAGrEzC,MAAM,CAAE0C,MAAM,CAACC,OAAO,CAAC3C,MAAM,CAAC,CAAC4C,MAAM,CAAC,SAACC,IAAI,CAAAC,KAAA,CAAmB,KAAAC,KAAA,CAAAlC,cAAA,CAAAiC,KAAA,IAAhBE,GAAG,CAAAD,KAAA,IAAEE,KAAK,CAAAF,KAAA,IACtD,GAAIG,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAE,CACxBJ,IAAI,CAACG,GAAG,CAAC,CAAGC,KAAK,CAACT,GAAG,CAACC,kBAAkB,CAAC,CAC3C,CAAC,IAAM,CACLI,IAAI,CAACG,GAAG,CAAC,CAAGP,kBAAkB,CAACQ,KAAK,CAAW,CACjD,CACA,MAAO,CAAAJ,IAAI,CACb,CAAC,CAAE,CAAC,CAAC,CACP,CAAC,CACH,CAEA,GAAM,CAAAO,eAAe,CAAGhF,KAAK,CAACiF,aAAa,CAAwBC,SAAS,CAAC,CAE7E,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzCL,eAAe,CAACM,WAAW,CAAG,iBAAiB,CACjD,CAEA,MAAO,SAAS,CAAAC,gBAAgBA,CAAAC,KAAA,CAA8C,IAA3C,CAAAC,QAAQ,CAAAD,KAAA,CAARC,QAAQ,CACzC,MACE,CAAAjF,IAAA,CAACwE,eAAe,CAACU,QAAQ,EAACb,KAAK,CAAEzC,YAAY,EAAG,CAAAqD,QAAA,CAC7CA,QAAQ,EACgB,CAE/B,CAEA,QAAS,CAAAE,WAAWA,CAAA,CAAG,CACrB,GAAM,CAAAC,QAAQ,CAAG5F,KAAK,CAAC6F,UAAU,CAACb,eAAe,CAAC,CAElD,GAAI,CAACY,QAAQ,CAAE,CACb,KAAM,IAAI,CAAAE,KAAK,CACb,kFAAkF,CACnF,CACH,CAEA,MAAO,CAAAF,QAAQ,CACjB,CAGA,MAAO,SAAS,CAAAG,WAAWA,CAAA,CAAW,CACpC,MAAO,CAAAJ,WAAW,EAAE,CAAC3E,QAAQ,CAC/B,CAGA,MAAO,SAAS,CAAAgF,eAAeA,CAAA,CAET,CACpB,MAAO,CAAAL,WAAW,EAAE,CAAC/D,MAAM,CAC7B,CAGA,MAAO,SAAS,CAAAqE,oBAAoBA,CAAA,CAEd,KAAAC,gBAAA,CAAAC,SAAA,CACpB,OAAAD,gBAAA,EAAAC,SAAA,CAAQpG,QAAQ,EAAE,eAAVoG,SAAA,CAAYvE,MAAM,QAAAsE,gBAAA,CAAK,CAAC,CAAC,CACnC,CAGA,MAAO,SAAS,CAAAE,WAAWA,CAAA,CAAa,CACtC,MAAO,CAAAT,WAAW,EAAE,CAACrE,QAAQ,CAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
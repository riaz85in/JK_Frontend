{"ast":null,"code":"import{processColor}from\"./Colors\";import{makeShareable,isConfigured}from\"./core\";import{_updatePropsJS}from\"./js-reanimated\";import{shouldBeUseWeb}from\"./PlatformChecker\";export var colorProps=['backgroundColor','borderBottomColor','borderColor','borderLeftColor','borderRightColor','borderTopColor','borderStartColor','borderEndColor','color','shadowColor','textDecorationColor','tintColor','textShadowColor','overlayColor'];export var ColorProperties=!isConfigured()?[]:makeShareable(colorProps);var updatePropsByPlatform;if(shouldBeUseWeb()){updatePropsByPlatform=function updatePropsByPlatform(_,updates,maybeViewRef){'worklet';if(maybeViewRef){maybeViewRef.items.forEach(function(item,_){_updatePropsJS(updates,item);});}};}else{updatePropsByPlatform=function updatePropsByPlatform(viewDescriptors,updates,_){'worklet';for(var key in updates){if(ColorProperties.indexOf(key)!==-1){updates[key]=processColor(updates[key]);}}viewDescriptors.value.forEach(function(viewDescriptor){_updateProps(viewDescriptor.tag,viewDescriptor.name||'RCTView',updates);});};}export var updateProps=updatePropsByPlatform;export var updatePropsJestWrapper=function updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters){adapters.forEach(function(adapter){adapter(updates);});animatedStyle.current.value=Object.assign(Object.assign({},animatedStyle.current.value),updates);updateProps(viewDescriptors,updates,maybeViewRef);};export default updateProps;","map":{"version":3,"names":["processColor","makeShareable","isConfigured","_updatePropsJS","shouldBeUseWeb","colorProps","ColorProperties","updatePropsByPlatform","_","updates","maybeViewRef","items","forEach","item","viewDescriptors","key","indexOf","value","viewDescriptor","_updateProps","tag","name","updateProps","updatePropsJestWrapper","animatedStyle","adapters","adapter","current","Object","assign"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/react-native-reanimated/lib/reanimated2/UpdateProps.js"],"sourcesContent":["import { processColor } from './Colors';\nimport { makeShareable, isConfigured } from './core';\nimport { _updatePropsJS } from './js-reanimated';\nimport { shouldBeUseWeb } from './PlatformChecker';\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const colorProps = [\n    'backgroundColor',\n    'borderBottomColor',\n    'borderColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderTopColor',\n    'borderStartColor',\n    'borderEndColor',\n    'color',\n    'shadowColor',\n    'textDecorationColor',\n    'tintColor',\n    'textShadowColor',\n    'overlayColor',\n];\nexport const ColorProperties = !isConfigured() ? [] : makeShareable(colorProps);\nlet updatePropsByPlatform;\nif (shouldBeUseWeb()) {\n    updatePropsByPlatform = (_, updates, maybeViewRef) => {\n        'worklet';\n        if (maybeViewRef) {\n            maybeViewRef.items.forEach((item, _) => {\n                _updatePropsJS(updates, item);\n            });\n        }\n    };\n}\nelse {\n    updatePropsByPlatform = (viewDescriptors, updates, _) => {\n        'worklet';\n        for (const key in updates) {\n            if (ColorProperties.indexOf(key) !== -1) {\n                updates[key] = processColor(updates[key]);\n            }\n        }\n        viewDescriptors.value.forEach((viewDescriptor) => {\n            _updateProps(viewDescriptor.tag, viewDescriptor.name || 'RCTView', updates);\n        });\n    };\n}\nexport const updateProps = updatePropsByPlatform;\nexport const updatePropsJestWrapper = (viewDescriptors, updates, maybeViewRef, animatedStyle, adapters) => {\n    adapters.forEach((adapter) => {\n        adapter(updates);\n    });\n    animatedStyle.current.value = Object.assign(Object.assign({}, animatedStyle.current.value), updates);\n    updateProps(viewDescriptors, updates, maybeViewRef);\n};\nexport default updateProps;\n"],"mappings":"AAAA,OAASA,YAAY,gBACrB,OAASC,aAAa,CAAEC,YAAY,cACpC,OAASC,cAAc,uBACvB,OAASC,cAAc,yBAEvB,MAAO,IAAM,CAAAC,UAAU,CAAG,CACtB,iBAAiB,CACjB,mBAAmB,CACnB,aAAa,CACb,iBAAiB,CACjB,kBAAkB,CAClB,gBAAgB,CAChB,kBAAkB,CAClB,gBAAgB,CAChB,OAAO,CACP,aAAa,CACb,qBAAqB,CACrB,WAAW,CACX,iBAAiB,CACjB,cAAc,CACjB,CACD,MAAO,IAAM,CAAAC,eAAe,CAAG,CAACJ,YAAY,EAAE,CAAG,EAAE,CAAGD,aAAa,CAACI,UAAU,CAAC,CAC/E,GAAI,CAAAE,qBAAqB,CACzB,GAAIH,cAAc,EAAE,CAAE,CAClBG,qBAAqB,CAAG,SAAAA,sBAACC,CAAC,CAAEC,OAAO,CAAEC,YAAY,CAAK,CAClD,SAAS,CACT,GAAIA,YAAY,CAAE,CACdA,YAAY,CAACC,KAAK,CAACC,OAAO,CAAC,SAACC,IAAI,CAAEL,CAAC,CAAK,CACpCL,cAAc,CAACM,OAAO,CAAEI,IAAI,CAAC,CACjC,CAAC,CAAC,CACN,CACJ,CAAC,CACL,CAAC,IACI,CACDN,qBAAqB,CAAG,SAAAA,sBAACO,eAAe,CAAEL,OAAO,CAAED,CAAC,CAAK,CACrD,SAAS,CACT,IAAK,GAAM,CAAAO,GAAG,GAAI,CAAAN,OAAO,CAAE,CACvB,GAAIH,eAAe,CAACU,OAAO,CAACD,GAAG,CAAC,GAAK,CAAC,CAAC,CAAE,CACrCN,OAAO,CAACM,GAAG,CAAC,CAAGf,YAAY,CAACS,OAAO,CAACM,GAAG,CAAC,CAAC,CAC7C,CACJ,CACAD,eAAe,CAACG,KAAK,CAACL,OAAO,CAAC,SAACM,cAAc,CAAK,CAC9CC,YAAY,CAACD,cAAc,CAACE,GAAG,CAAEF,cAAc,CAACG,IAAI,EAAI,SAAS,CAAEZ,OAAO,CAAC,CAC/E,CAAC,CAAC,CACN,CAAC,CACL,CACA,MAAO,IAAM,CAAAa,WAAW,CAAGf,qBAAqB,CAChD,MAAO,IAAM,CAAAgB,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAIT,eAAe,CAAEL,OAAO,CAAEC,YAAY,CAAEc,aAAa,CAAEC,QAAQ,CAAK,CACvGA,QAAQ,CAACb,OAAO,CAAC,SAACc,OAAO,CAAK,CAC1BA,OAAO,CAACjB,OAAO,CAAC,CACpB,CAAC,CAAC,CACFe,aAAa,CAACG,OAAO,CAACV,KAAK,CAAGW,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAEL,aAAa,CAACG,OAAO,CAACV,KAAK,CAAC,CAAER,OAAO,CAAC,CACpGa,WAAW,CAACR,eAAe,CAAEL,OAAO,CAAEC,YAAY,CAAC,CACvD,CAAC,CACD,cAAe,CAAAY,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";var protocol=window.location.protocol===\"https:\"?\"wss\":\"ws\";var messageSocket=new WebSocket(protocol+\"://\"+window.location.host+\"/message\");messageSocket.onmessage=function(message){var data=JSON.parse(String(message.data));switch(data.method){case\"sendDevCommand\":switch(data.params.name){case\"reload\":window.location.reload();break;}break;case\"reload\":window.location.reload();break;case\"devMenu\":break;}};","map":{"version":3,"names":["protocol","window","location","messageSocket","WebSocket","host","onmessage","message","data","JSON","parse","String","method","params","name","reload"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\@expo\\metro-runtime\\src\\messageSocket.ts"],"sourcesContent":["/* eslint-env browser */\n\n// Setup websocket messages for reloading the page from the command line.\n// This is normally setup on the native client.\n\nconst protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\nconst messageSocket = new WebSocket(\n  `${protocol}://${window.location.host}/message`\n);\nmessageSocket.onmessage = (message) => {\n  const data = JSON.parse(String(message.data));\n  switch (data.method) {\n    case \"sendDevCommand\":\n      switch (data.params.name) {\n        case \"reload\":\n          window.location.reload();\n          break;\n      }\n      break;\n    case \"reload\":\n      window.location.reload();\n      break;\n    case \"devMenu\":\n      // no-op\n      break;\n  }\n};\n"],"mappings":"aAKA,GAAM,CAAAA,QAAQ,CAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,GAAK,QAAQ,CAAG,KAAK,CAAG,IAAI,CACrE,GAAM,CAAAG,aAAa,CAAG,GAAI,CAAAC,SAAS,CAC9BJ,QAAQ,OAAMC,MAAM,CAACC,QAAQ,CAACG,IAAI,YACtC,CACDF,aAAa,CAACG,SAAS,CAAG,SAACC,OAAO,CAAI,CACpC,GAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,MAAM,CAACJ,OAAO,CAACC,IAAI,CAAC,CAAC,CAC7C,OAAQA,IAAI,CAACI,MAAM,EACjB,IAAK,gBAAgB,CACnB,OAAQJ,IAAI,CAACK,MAAM,CAACC,IAAI,EACtB,IAAK,QAAQ,CACXb,MAAM,CAACC,QAAQ,CAACa,MAAM,EAAE,CACxB,MAAM,CAEV,MACF,IAAK,QAAQ,CACXd,MAAM,CAACC,QAAQ,CAACa,MAAM,EAAE,CACxB,MACF,IAAK,SAAS,CAEZ,MAAM,CAEZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{createNavigationContainerRef}from\"@react-navigation/native\";import React from\"react\";import UpstreamNavigationContainer from\"./fork/NavigationContainer\";import{getLinkingConfig}from\"./getLinkingConfig\";import{RootNavigationRef}from\"./useRootNavigation\";import{useRootRouteNodeContext}from\"./useRootRouteNodeContext\";import{SplashScreen}from\"./views/Splash\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var navigationRef=createNavigationContainerRef();export function getNavigationContainerRef(){return navigationRef;}export function NavigationContainer(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isReady=_React$useState2[0],setReady=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isSplashReady=_React$useState4[0],setSplashReady=_React$useState4[1];var ref=React.useMemo(function(){return isReady?navigationRef:null;},[isReady]);var root=useRootRouteNodeContext();var linking=React.useMemo(function(){return getLinkingConfig(root);},[root]);return _jsxs(RootNavigationRef.Provider,{value:{ref:ref},children:[!isSplashReady&&_jsx(SplashScreen,{}),_jsx(UpstreamNavigationContainer,_objectSpread(_objectSpread({},props),{},{linking:linking,ref:navigationRef,onReady:function onReady(){setReady(true);requestAnimationFrame(function(){setSplashReady(true);});}}))]});}","map":{"version":3,"names":["createNavigationContainerRef","React","UpstreamNavigationContainer","getLinkingConfig","RootNavigationRef","useRootRouteNodeContext","SplashScreen","jsx","_jsx","jsxs","_jsxs","navigationRef","getNavigationContainerRef","NavigationContainer","props","_React$useState","useState","_React$useState2","_slicedToArray","isReady","setReady","_React$useState3","_React$useState4","isSplashReady","setSplashReady","ref","useMemo","root","linking","Provider","value","children","_objectSpread","onReady","requestAnimationFrame"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/NavigationContainer.tsx"],"sourcesContent":["import { createNavigationContainerRef } from \"@react-navigation/native\";\nimport React from \"react\";\n\nimport UpstreamNavigationContainer from \"./fork/NavigationContainer\";\nimport { getLinkingConfig } from \"./getLinkingConfig\";\nimport { RootNavigationRef } from \"./useRootNavigation\";\nimport { useRootRouteNodeContext } from \"./useRootRouteNodeContext\";\nimport { SplashScreen } from \"./views/Splash\";\n\nconst navigationRef = createNavigationContainerRef<Record<string, unknown>>();\n\n/** Get the root navigation container ref. */\nexport function getNavigationContainerRef() {\n  return navigationRef;\n}\n\n/** react-navigation `NavigationContainer` with automatic `linking` prop generated from the routes context. */\nexport function NavigationContainer(props: { children: React.ReactNode }) {\n  const [isReady, setReady] = React.useState(false);\n  const [isSplashReady, setSplashReady] = React.useState(false);\n  const ref = React.useMemo(() => (isReady ? navigationRef : null), [isReady]);\n  const root = useRootRouteNodeContext();\n  const linking = React.useMemo(() => getLinkingConfig(root), [root]);\n\n  return (\n    <RootNavigationRef.Provider value={{ ref }}>\n      {!isSplashReady && <SplashScreen />}\n      <UpstreamNavigationContainer\n        {...props}\n        linking={linking}\n        ref={navigationRef}\n        onReady={() => {\n          setReady(true);\n          // Allow one cycle for the children to mount a splash screen\n          // that will prevent the splash screen from hiding.\n          requestAnimationFrame(() => {\n            setSplashReady(true);\n          });\n        }}\n      />\n    </RootNavigationRef.Provider>\n  );\n}\n"],"mappings":"y4BAAA,OAASA,4BAA4B,KAAQ,0BAA0B,CACvE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,2BAA2B,kCAClC,OAASC,gBAAgB,0BACzB,OAASC,iBAAiB,2BAC1B,OAASC,uBAAuB,iCAChC,OAASC,YAAY,sBAAyB,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,GAAM,CAAAC,aAAa,CAAGX,4BAA4B,EAA2B,CAG7E,MAAO,SAAS,CAAAY,yBAAyBA,CAAA,CAAG,CAC1C,MAAO,CAAAD,aAAa,CACtB,CAGA,MAAO,SAAS,CAAAE,mBAAmBA,CAACC,KAAoC,CAAE,CACxE,IAAAC,eAAA,CAA4Bd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAA1CI,OAAO,CAAAF,gBAAA,IAAEG,QAAQ,CAAAH,gBAAA,IACxB,IAAAI,gBAAA,CAAwCpB,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC,CAAAM,gBAAA,CAAAJ,cAAA,CAAAG,gBAAA,IAAtDE,aAAa,CAAAD,gBAAA,IAAEE,cAAc,CAAAF,gBAAA,IACpC,GAAM,CAAAG,GAAG,CAAGxB,KAAK,CAACyB,OAAO,CAAC,iBAAO,CAAAP,OAAO,CAAGR,aAAa,CAAG,IAAI,EAAC,CAAE,CAACQ,OAAO,CAAC,CAAC,CAC5E,GAAM,CAAAQ,IAAI,CAAGtB,uBAAuB,EAAE,CACtC,GAAM,CAAAuB,OAAO,CAAG3B,KAAK,CAACyB,OAAO,CAAC,iBAAM,CAAAvB,gBAAgB,CAACwB,IAAI,CAAC,GAAE,CAACA,IAAI,CAAC,CAAC,CAEnE,MACE,CAAAjB,KAAA,CAACN,iBAAiB,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAEL,GAAG,CAAHA,GAAI,CAAE,CAAAM,QAAA,EACxC,CAACR,aAAa,EAAIf,IAAA,CAACF,YAAY,IAAG,CACnCE,IAAA,CAACN,2BAA2B,CAAA8B,aAAA,CAAAA,aAAA,IACtBlB,KAAK,MACTc,OAAO,CAAEA,OAAQ,CACjBH,GAAG,CAAEd,aAAc,CACnBsB,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbb,QAAQ,CAAC,IAAI,CAAC,CAGdc,qBAAqB,CAAC,UAAM,CAC1BV,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAAC,CACJ,CAAE,GACF,GACyB,CAEjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
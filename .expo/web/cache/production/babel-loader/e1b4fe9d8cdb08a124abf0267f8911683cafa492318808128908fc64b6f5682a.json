{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import DiscreteGestureHandler from\"./DiscreteGestureHandler\";import*as NodeManager from\"./NodeManager\";import PressGestureHandler from\"./PressGestureHandler\";import{TEST_MIN_IF_NOT_NAN,VEC_LEN_SQ}from\"./utils\";var NativeViewGestureHandler=function(_PressGestureHandler){_inherits(NativeViewGestureHandler,_PressGestureHandler);var _super=_createSuper(NativeViewGestureHandler);function NativeViewGestureHandler(){_classCallCheck(this,NativeViewGestureHandler);return _super.apply(this,arguments);}_createClass(NativeViewGestureHandler,[{key:\"isNative\",get:function get(){return true;}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this=this;_get(_getPrototypeOf(NativeViewGestureHandler.prototype),\"onRawEvent\",this).call(this,ev);if(!ev.isFinal){if(TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({x:ev.deltaX,y:ev.deltaY}),10)){if(this.config.disallowInterruption){var gestures=Object.values(NodeManager.getNodes()).filter(function(gesture){var handlerTag=gesture.handlerTag,view=gesture.view,isGestureRunning=gesture.isGestureRunning;return handlerTag!==_this.handlerTag&&isGestureRunning&&gesture instanceof DiscreteGestureHandler&&view&&_this.view.contains(view);});for(var gesture of gestures){gesture.forceInvalidate(ev);}}}}}}]);return NativeViewGestureHandler;}(PressGestureHandler);export default NativeViewGestureHandler;","map":{"version":3,"names":["DiscreteGestureHandler","NodeManager","PressGestureHandler","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","NativeViewGestureHandler","_PressGestureHandler","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","value","onRawEvent","ev","_this","_get","_getPrototypeOf","prototype","call","isFinal","x","deltaX","y","deltaY","config","disallowInterruption","gestures","Object","values","getNodes","filter","gesture","handlerTag","view","isGestureRunning","contains","forceInvalidate"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\NativeViewGestureHandler.ts"],"sourcesContent":["import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  get isNative() {\n    return true;\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        // @ts-ignore FIXME(TS) config type\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(\n            (gesture) => {\n              const { handlerTag, view, isGestureRunning } = gesture;\n              return (\n                // Check if this gesture isn't self\n                handlerTag !== this.handlerTag &&\n                // Ensure the gesture needs to be cancelled\n                isGestureRunning &&\n                // ScrollView can cancel discrete gestures like taps and presses\n                gesture instanceof DiscreteGestureHandler &&\n                // Ensure a view exists and is a child of the current view\n                view &&\n                // @ts-ignore FIXME(TS) view type\n                this.view.contains(view)\n              );\n            }\n          );\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n"],"mappings":"kjCAAA,MAAO,CAAAA,sBAAP,gCAEA,MAAO,GAAK,CAAAC,WAAZ,qBACA,MAAO,CAAAC,mBAAP,6BACA,OAASC,mBAAT,CAA8BC,UAA9B,kBAEM,CAAAC,wBAAN,UAAAC,oBAAA,EAAAC,SAAA,CAAAF,wBAAA,CAAAC,oBAAA,MAAAE,MAAA,CAAAC,YAAA,CAAAJ,wBAAA,WAAAA,yBAAA,EAAAK,eAAA,MAAAL,wBAAA,SAAAG,MAAA,CAAAG,KAAA,MAAAC,SAAA,GAAAC,YAAA,CAAAR,wBAAA,GAAAS,GAAA,YAAAC,GAAA,CACc,SAAAA,IAAA,CAAG,CACb,MAAO,KAAP,CACD,IAAAD,GAAA,cAAAE,KAAA,CAED,SAAAC,WAAWC,EAAD,CAAqB,KAAAC,KAAA,MAC7BC,IAAA,CAAAC,eAAA,CAAAhB,wBAAA,CAAAiB,SAAA,qBAAAC,IAAA,MAAiBL,EAAjB,EACA,GAAI,CAACA,EAAE,CAACM,OAAR,CAAiB,CAEf,GAAIrB,mBAAmB,CAACC,UAAU,CAAC,CAAEqB,CAAC,CAAEP,EAAE,CAACQ,MAAR,CAAgBC,CAAC,CAAET,EAAE,CAACU,MAAtB,CAAD,CAAX,CAA6C,EAA7C,CAAvB,CAAyE,CAEvE,GAAI,KAAKC,MAAL,CAAYC,oBAAhB,CAAsC,CACpC,GAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACC,MAAP,CAAchC,WAAW,CAACiC,QAAZ,EAAd,EAAsCC,MAAtC,CACd,SAAAC,OAAD,CAAa,CACX,GAAQ,CAAAC,UAAF,CAAyCD,OAA/C,CAAQC,UAAF,CAAcC,IAAd,CAAyCF,OAA/C,CAAoBE,IAAd,CAAoBC,gBAAA,CAAqBH,OAA/C,CAA0BG,gBAAA,CAC1B,MAEE,CAAAF,UAAU,GAAKlB,KAAA,CAAKkB,UAApB,EAEAE,gBAFA,EAIAH,OAAO,WAAY,CAAApC,sBAJnB,EAMAsC,IANA,EAQAnB,KAAA,CAAKmB,IAAL,CAAUE,QAAV,CAAmBF,IAAnB,EAEH,CAfc,CAAjB,CAkBA,IAAK,GAAM,CAAAF,OAAX,GAAsB,CAAAL,QAAtB,CAAgC,CAE9BK,OAAO,CAACK,eAAR,CAAwBvB,EAAxB,EACD,CACF,CACF,CACF,CACF,YAAAb,wBAAA,GArCoCH,mBAAvC,EAwCA,cAAe,CAAAG,wBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
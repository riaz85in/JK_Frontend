{"ast":null,"code":"import _defineProperty2 from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty2(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import{Component}from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import{PanGestureHandler}from\"../handlers/PanGestureHandler\";import{TapGestureHandler}from\"../handlers/TapGestureHandler\";import{State}from\"../State\";var DRAG_TOSS=0.05;var Swipeable=function(_Component){_inherits(Swipeable,_Component);var _super=_createSuper(Swipeable);function Swipeable(_props){var _this;_classCallCheck(this,Swipeable);_this=_super.call(this,_props);_defineProperty(_assertThisInitialized(_this),\"onGestureEvent\",void 0);_defineProperty(_assertThisInitialized(_this),\"transX\",void 0);_defineProperty(_assertThisInitialized(_this),\"showLeftAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"leftActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"showRightAction\",void 0);_defineProperty(_assertThisInitialized(_this),\"rightActionTranslate\",void 0);_defineProperty(_assertThisInitialized(_this),\"updateAnimatedEvent\",function(props,state){var friction=props.friction,overshootFriction=props.overshootFriction;var dragX=state.dragX,rowTranslation=state.rowTranslation,_state$leftWidth=state.leftWidth,leftWidth=_state$leftWidth===void 0?0:_state$leftWidth,_state$rowWidth=state.rowWidth,rowWidth=_state$rowWidth===void 0?0:_state$rowWidth;var _state$rightOffset=state.rightOffset,rightOffset=_state$rightOffset===void 0?rowWidth:_state$rightOffset;var rightWidth=Math.max(0,rowWidth-rightOffset);var _props$overshootLeft=props.overshootLeft,overshootLeft=_props$overshootLeft===void 0?leftWidth>0:_props$overshootLeft,_props$overshootRight=props.overshootRight,overshootRight=_props$overshootRight===void 0?rightWidth>0:_props$overshootRight;var transX=Animated.add(rowTranslation,dragX.interpolate({inputRange:[0,friction],outputRange:[0,1]})).interpolate({inputRange:[-rightWidth-1,-rightWidth,leftWidth,leftWidth+1],outputRange:[-rightWidth-(overshootRight?1/overshootFriction:0),-rightWidth,leftWidth,leftWidth+(overshootLeft?1/overshootFriction:0)]});_this.transX=transX;_this.showLeftAction=leftWidth>0?transX.interpolate({inputRange:[-1,0,leftWidth],outputRange:[0,0,1]}):new Animated.Value(0);_this.leftActionTranslate=_this.showLeftAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});_this.showRightAction=rightWidth>0?transX.interpolate({inputRange:[-rightWidth,0,1],outputRange:[1,0,0]}):new Animated.Value(0);_this.rightActionTranslate=_this.showRightAction.interpolate({inputRange:[0,Number.MIN_VALUE],outputRange:[-10000,0],extrapolate:'clamp'});});_defineProperty(_assertThisInitialized(_this),\"onTapHandlerStateChange\",function(_ref){var nativeEvent=_ref.nativeEvent;if(nativeEvent.oldState===State.ACTIVE){_this.close();}});_defineProperty(_assertThisInitialized(_this),\"onHandlerStateChange\",function(ev){if(ev.nativeEvent.oldState===State.ACTIVE){_this.handleRelease(ev);}});_defineProperty(_assertThisInitialized(_this),\"handleRelease\",function(ev){var _ev$nativeEvent=ev.nativeEvent,velocityX=_ev$nativeEvent.velocityX,dragX=_ev$nativeEvent.translationX;var _this$state=_this.state,_this$state$leftWidth=_this$state.leftWidth,leftWidth=_this$state$leftWidth===void 0?0:_this$state$leftWidth,_this$state$rowWidth=_this$state.rowWidth,rowWidth=_this$state$rowWidth===void 0?0:_this$state$rowWidth,rowState=_this$state.rowState;var _this$state$rightOffs=_this.state.rightOffset,rightOffset=_this$state$rightOffs===void 0?rowWidth:_this$state$rightOffs;var rightWidth=rowWidth-rightOffset;var _this$props11=_this.props,friction=_this$props11.friction,_this$props11$leftThr=_this$props11.leftThreshold,leftThreshold=_this$props11$leftThr===void 0?leftWidth/2:_this$props11$leftThr,_this$props11$rightTh=_this$props11.rightThreshold,rightThreshold=_this$props11$rightTh===void 0?rightWidth/2:_this$props11$rightTh;var startOffsetX=_this.currentOffset()+dragX/friction;var translationX=(dragX+DRAG_TOSS*velocityX)/friction;var toValue=0;if(rowState===0){if(translationX>leftThreshold){toValue=leftWidth;}else if(translationX<-rightThreshold){toValue=-rightWidth;}}else if(rowState===1){if(translationX>-leftThreshold){toValue=leftWidth;}}else{if(translationX<rightThreshold){toValue=-rightWidth;}}_this.animateRow(startOffsetX,toValue,velocityX/friction);});_defineProperty(_assertThisInitialized(_this),\"animateRow\",function(fromValue,toValue,velocityX){var _this$state2=_this.state,dragX=_this$state2.dragX,rowTranslation=_this$state2.rowTranslation;dragX.setValue(0);rowTranslation.setValue(fromValue);_this.setState({rowState:Math.sign(toValue)});Animated.spring(rowTranslation,_objectSpread({restSpeedThreshold:1.7,restDisplacementThreshold:0.4,velocity:velocityX,bounciness:0,toValue:toValue,useNativeDriver:_this.props.useNativeAnimations},_this.props.animationOptions)).start(function(_ref2){var finished=_ref2.finished;if(finished){if(toValue>0){var _this$props$onSwipeab,_this$props,_this$props$onSwipeab2,_this$props2;(_this$props$onSwipeab=(_this$props=_this.props).onSwipeableLeftOpen)===null||_this$props$onSwipeab===void 0?void 0:_this$props$onSwipeab.call(_this$props);(_this$props$onSwipeab2=(_this$props2=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab2===void 0?void 0:_this$props$onSwipeab2.call(_this$props2,'left',_assertThisInitialized(_this));}else if(toValue<0){var _this$props$onSwipeab3,_this$props3,_this$props$onSwipeab4,_this$props4;(_this$props$onSwipeab3=(_this$props3=_this.props).onSwipeableRightOpen)===null||_this$props$onSwipeab3===void 0?void 0:_this$props$onSwipeab3.call(_this$props3);(_this$props$onSwipeab4=(_this$props4=_this.props).onSwipeableOpen)===null||_this$props$onSwipeab4===void 0?void 0:_this$props$onSwipeab4.call(_this$props4,'right',_assertThisInitialized(_this));}else{var _this$props$onSwipeab5,_this$props5;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab5=(_this$props5=_this.props).onSwipeableClose)===null||_this$props$onSwipeab5===void 0?void 0:_this$props$onSwipeab5.call(_this$props5,closingDirection,_assertThisInitialized(_this));}}});if(toValue>0){var _this$props$onSwipeab6,_this$props6,_this$props$onSwipeab7,_this$props7;(_this$props$onSwipeab6=(_this$props6=_this.props).onSwipeableLeftWillOpen)===null||_this$props$onSwipeab6===void 0?void 0:_this$props$onSwipeab6.call(_this$props6);(_this$props$onSwipeab7=(_this$props7=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab7===void 0?void 0:_this$props$onSwipeab7.call(_this$props7,'left');}else if(toValue<0){var _this$props$onSwipeab8,_this$props8,_this$props$onSwipeab9,_this$props9;(_this$props$onSwipeab8=(_this$props8=_this.props).onSwipeableRightWillOpen)===null||_this$props$onSwipeab8===void 0?void 0:_this$props$onSwipeab8.call(_this$props8);(_this$props$onSwipeab9=(_this$props9=_this.props).onSwipeableWillOpen)===null||_this$props$onSwipeab9===void 0?void 0:_this$props$onSwipeab9.call(_this$props9,'right');}else{var _this$props$onSwipeab10,_this$props10;var closingDirection=fromValue>0?'left':'right';(_this$props$onSwipeab10=(_this$props10=_this.props).onSwipeableWillClose)===null||_this$props$onSwipeab10===void 0?void 0:_this$props$onSwipeab10.call(_this$props10,closingDirection);}});_defineProperty(_assertThisInitialized(_this),\"onRowLayout\",function(_ref3){var nativeEvent=_ref3.nativeEvent;_this.setState({rowWidth:nativeEvent.layout.width});});_defineProperty(_assertThisInitialized(_this),\"currentOffset\",function(){var _this$state3=_this.state,_this$state3$leftWidt=_this$state3.leftWidth,leftWidth=_this$state3$leftWidt===void 0?0:_this$state3$leftWidt,_this$state3$rowWidth=_this$state3.rowWidth,rowWidth=_this$state3$rowWidth===void 0?0:_this$state3$rowWidth,rowState=_this$state3.rowState;var _this$state$rightOffs2=_this.state.rightOffset,rightOffset=_this$state$rightOffs2===void 0?rowWidth:_this$state$rightOffs2;var rightWidth=rowWidth-rightOffset;if(rowState===1){return leftWidth;}else if(rowState===-1){return-rightWidth;}return 0;});_defineProperty(_assertThisInitialized(_this),\"close\",function(){_this.animateRow(_this.currentOffset(),0);});_defineProperty(_assertThisInitialized(_this),\"openLeft\",function(){var _this$state$leftWidth2=_this.state.leftWidth,leftWidth=_this$state$leftWidth2===void 0?0:_this$state$leftWidth2;_this.animateRow(_this.currentOffset(),leftWidth);});_defineProperty(_assertThisInitialized(_this),\"openRight\",function(){var _this$state$rowWidth2=_this.state.rowWidth,rowWidth=_this$state$rowWidth2===void 0?0:_this$state$rowWidth2;var _this$state$rightOffs3=_this.state.rightOffset,rightOffset=_this$state$rightOffs3===void 0?rowWidth:_this$state$rightOffs3;var rightWidth=rowWidth-rightOffset;_this.animateRow(_this.currentOffset(),-rightWidth);});var _dragX=new Animated.Value(0);_this.state={dragX:_dragX,rowTranslation:new Animated.Value(0),rowState:0,leftWidth:undefined,rightOffset:undefined,rowWidth:undefined};_this.updateAnimatedEvent(_props,_this.state);_this.onGestureEvent=Animated.event([{nativeEvent:{translationX:_dragX}}],{useNativeDriver:_props.useNativeAnimations});return _this;}_createClass(Swipeable,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(props,state){if(this.props.friction!==props.friction||this.props.overshootLeft!==props.overshootLeft||this.props.overshootRight!==props.overshootRight||this.props.overshootFriction!==props.overshootFriction||this.state.leftWidth!==state.leftWidth||this.state.rightOffset!==state.rightOffset||this.state.rowWidth!==state.rowWidth){this.updateAnimatedEvent(props,state);}return true;}},{key:\"render\",value:function render(){var _this2=this;var rowState=this.state.rowState;var _this$props12=this.props,children=_this$props12.children,renderLeftActions=_this$props12.renderLeftActions,renderRightActions=_this$props12.renderRightActions;var left=renderLeftActions&&React.createElement(Animated.View,{style:[styles.leftActions,{transform:[{translateX:this.leftActionTranslate}]}]},renderLeftActions(this.showLeftAction,this.transX),React.createElement(View,{onLayout:function onLayout(_ref4){var nativeEvent=_ref4.nativeEvent;return _this2.setState({leftWidth:nativeEvent.layout.x});}}));var right=renderRightActions&&React.createElement(Animated.View,{style:[styles.rightActions,{transform:[{translateX:this.rightActionTranslate}]}]},renderRightActions(this.showRightAction,this.transX,this),React.createElement(View,{onLayout:function onLayout(_ref5){var nativeEvent=_ref5.nativeEvent;return _this2.setState({rightOffset:nativeEvent.layout.x});}}));return React.createElement(PanGestureHandler,_extends({activeOffsetX:[-10,10]},this.props,{onGestureEvent:this.onGestureEvent,onHandlerStateChange:this.onHandlerStateChange}),React.createElement(Animated.View,{onLayout:this.onRowLayout,style:[styles.container,this.props.containerStyle]},left,right,React.createElement(TapGestureHandler,{enabled:rowState!==0,onHandlerStateChange:this.onTapHandlerStateChange},React.createElement(Animated.View,{pointerEvents:rowState===0?'auto':'box-only',style:[{transform:[{translateX:this.transX}]},this.props.childrenContainerStyle]},children))));}}]);return Swipeable;}(Component);export{Swipeable as default};_defineProperty(Swipeable,\"defaultProps\",{friction:1,overshootFriction:1,useNativeAnimations:true});var styles=StyleSheet.create({container:{overflow:'hidden'},leftActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row-reverse':'row'}),rightActions:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{flexDirection:I18nManager.isRTL?'row':'row-reverse'})});","map":{"version":3,"names":["React","Component","Animated","StyleSheet","View","I18nManager","PanGestureHandler","TapGestureHandler","State","DRAG_TOSS","Swipeable","_Component","_inherits","_super","_createSuper","_props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","props","state","friction","overshootFriction","dragX","rowTranslation","_state$leftWidth","leftWidth","_state$rowWidth","rowWidth","_state$rightOffset","rightOffset","rightWidth","Math","max","_props$overshootLeft","overshootLeft","_props$overshootRight","overshootRight","transX","add","interpolate","inputRange","outputRange","showLeftAction","Value","leftActionTranslate","Number","MIN_VALUE","extrapolate","showRightAction","rightActionTranslate","_ref","nativeEvent","oldState","ACTIVE","close","ev","handleRelease","_ev$nativeEvent","velocityX","translationX","_this$state","_this$state$leftWidth","_this$state$rowWidth","rowState","_this$state$rightOffs","_this$props11","_this$props11$leftThr","leftThreshold","_this$props11$rightTh","rightThreshold","startOffsetX","currentOffset","toValue","animateRow","fromValue","_this$state2","setValue","setState","sign","spring","_objectSpread","restSpeedThreshold","restDisplacementThreshold","velocity","bounciness","useNativeDriver","useNativeAnimations","animationOptions","start","_ref2","finished","_this$props$onSwipeab","_this$props","_this$props$onSwipeab2","_this$props2","onSwipeableLeftOpen","onSwipeableOpen","_this$props$onSwipeab3","_this$props3","_this$props$onSwipeab4","_this$props4","onSwipeableRightOpen","_this$props$onSwipeab5","_this$props5","closingDirection","onSwipeableClose","_this$props$onSwipeab6","_this$props6","_this$props$onSwipeab7","_this$props7","onSwipeableLeftWillOpen","onSwipeableWillOpen","_this$props$onSwipeab8","_this$props8","_this$props$onSwipeab9","_this$props9","onSwipeableRightWillOpen","_this$props$onSwipeab10","_this$props10","onSwipeableWillClose","_ref3","layout","width","_this$state3","_this$state3$leftWidt","_this$state3$rowWidth","_this$state$rightOffs2","_this$state$leftWidth2","_this$state$rowWidth2","_this$state$rightOffs3","_dragX","undefined","updateAnimatedEvent","onGestureEvent","event","_createClass","key","value","shouldComponentUpdate","render","_this2","_this$props12","children","renderLeftActions","renderRightActions","left","createElement","style","styles","leftActions","transform","translateX","onLayout","_ref4","x","right","rightActions","_ref5","_extends","activeOffsetX","onHandlerStateChange","onRowLayout","container","containerStyle","enabled","onTapHandlerStateChange","pointerEvents","childrenContainerStyle","default","create","overflow","absoluteFillObject","flexDirection","isRTL"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\Swipeable.tsx"],"sourcesContent":["// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from '../handlers/PanGestureHandler';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerEventPayload,\n} from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\n// Animated.AnimatedInterpolation has been converted to a generic type\n// in @types/react-native 0.70. This way we can maintain compatibility\n// with all versions of @types/react-native\ntype AnimatedInterpolation = ReturnType<Animated.Value['interpolate']>;\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when left action panel gets open.\n   */\n  onSwipeableLeftOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when right action panel gets open.\n   */\n  onSwipeableRightOpen?: () => void;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (direction: 'left' | 'right', swipeable: Swipeable) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: 'left' | 'right',\n    swipeable: Swipeable\n  ) => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when left action panel starts animating on open.\n   */\n  onSwipeableLeftWillOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when right action panel starts animating on open.\n   */\n  onSwipeableRightWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (direction: 'left' | 'right') => void;\n\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: AnimatedInterpolation,\n    dragAnimatedValue: AnimatedInterpolation\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: AnimatedInterpolation,\n    dragAnimatedValue: AnimatedInterpolation,\n    swipeable: Swipeable\n  ) => React.ReactNode;\n\n  useNativeAnimations?: boolean;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  shouldComponentUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n\n    return true;\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: AnimatedInterpolation;\n  private showLeftAction?: AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: AnimatedInterpolation;\n  private showRightAction?: AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const { overshootLeft = leftWidth > 0, overshootRight = rightWidth > 0 } =\n      props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 / overshootFriction! : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 / overshootFriction! : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0) {\n          this.props.onSwipeableLeftOpen?.();\n          this.props.onSwipeableOpen?.('left', this);\n        } else if (toValue < 0) {\n          this.props.onSwipeableRightOpen?.();\n          this.props.onSwipeableOpen?.('right', this);\n        } else {\n          const closingDirection = fromValue > 0 ? 'left' : 'right';\n          this.props.onSwipeableClose?.(closingDirection, this);\n        }\n      }\n    });\n    if (toValue > 0) {\n      this.props.onSwipeableLeftWillOpen?.();\n      this.props.onSwipeableWillOpen?.('left');\n    } else if (toValue < 0) {\n      this.props.onSwipeableRightWillOpen?.();\n      this.props.onSwipeableWillOpen?.('right');\n    } else {\n      const closingDirection = fromValue > 0 ? 'left' : 'right';\n      this.props.onSwipeableWillClose?.(closingDirection);\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // all those and below parameters can have ! since they are all\n          // asigned in constructor in `updateAnimatedEvent` but TS cannot spot\n          // it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!, this)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
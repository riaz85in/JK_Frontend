{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import{useImperativeHandle,useRef}from'react';import{NativeViewGestureHandler,nativeViewProps}from\"./NativeViewGestureHandler\";var NATIVE_WRAPPER_PROPS_FILTER=[].concat(_toConsumableArray(nativeViewProps),['onGestureHandlerEvent','onGestureHandlerStateChange']);export default function createNativeWrapper(Component){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _Component$render;var ComponentWrapper=React.forwardRef(function(props,ref){var gestureHandlerProps=Object.keys(props).reduce(function(res,key){var allowedKeys=NATIVE_WRAPPER_PROPS_FILTER;if(allowedKeys.includes(key)){res[key]=props[key];}return res;},_objectSpread({},config));var _ref=useRef();var _gestureHandlerRef=useRef();useImperativeHandle(ref,function(){var node=_gestureHandlerRef.current;if(_ref.current&&node){_ref.current.handlerTag=node.handlerTag;return _ref.current;}return null;},[_ref,_gestureHandlerRef]);return React.createElement(NativeViewGestureHandler,_extends({},gestureHandlerProps,{ref:_gestureHandlerRef}),React.createElement(Component,_extends({},props,{ref:_ref})));});ComponentWrapper.displayName=(Component===null||Component===void 0?void 0:Component.displayName)||(Component===null||Component===void 0?void 0:(_Component$render=Component.render)===null||_Component$render===void 0?void 0:_Component$render.name)||typeof Component==='string'&&Component||'ComponentWrapper';return ComponentWrapper;}","map":{"version":3,"names":["React","useImperativeHandle","useRef","NativeViewGestureHandler","nativeViewProps","NATIVE_WRAPPER_PROPS_FILTER","concat","_toConsumableArray","createNativeWrapper","Component","config","arguments","length","undefined","_Component$render","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","allowedKeys","includes","_objectSpread","_ref","_gestureHandlerRef","node","current","handlerTag","createElement","_extends","displayName","render","name"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\createNativeWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\n\nimport {\n  NativeViewGestureHandler,\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  ...nativeViewProps,\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n] as const;\n\nexport default function createNativeWrapper<P>(\n  Component: React.ComponentType<P>,\n  config: Readonly<NativeViewGestureHandlerProps> = {}\n) {\n  const ComponentWrapper = React.forwardRef<\n    React.ComponentType<any>,\n    P & NativeViewGestureHandlerProps\n  >((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        // TS being overly protective with it's types, see https://github.com/microsoft/TypeScript/issues/26255#issuecomment-458013731 for more info\n        const allowedKeys: readonly string[] = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          // @ts-ignore FIXME(TS)\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    const _ref = useRef<React.ComponentType<P>>();\n    const _gestureHandlerRef = useRef<React.ComponentType<P>>();\n    useImperativeHandle(\n      ref,\n      // @ts-ignore TODO(TS) decide how nulls work in this context\n      () => {\n        const node = _gestureHandlerRef.current;\n        // add handlerTag for relations config\n        if (_ref.current && node) {\n          // @ts-ignore FIXME(TS) think about createHandler return type\n          _ref.current.handlerTag = node.handlerTag;\n          return _ref.current;\n        }\n        return null;\n      },\n      [_ref, _gestureHandlerRef]\n    );\n    return (\n      <NativeViewGestureHandler\n        {...gestureHandlerProps}\n        // @ts-ignore TODO(TS)\n        ref={_gestureHandlerRef}>\n        <Component {...props} ref={_ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  ComponentWrapper.displayName =\n    Component?.displayName ||\n    // @ts-ignore if render doesn't exist it will return undefined and go further\n    Component?.render?.name ||\n    (typeof Component === 'string' && Component) ||\n    'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":"wqCAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,mBAAT,CAA8BC,MAA9B,KAA4C,OAA5C,CAEA,OACEC,wBADF,CAGEC,eAHF,kCAaA,GAAM,CAAAC,2BAA2B,IAAAC,MAAA,CAAAC,kBAAA,CAC5BH,eAD+B,GAElC,uBAFkC,CAGlC,6BAHkC,EAApC,CAMA,cAAe,SAAS,CAAAI,mBAATA,CACbC,SADa,CAGb,IADA,CAAAC,MAA+C,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAFrC,CAGb,IAAAG,iBAAA,CACA,GAAM,CAAAC,gBAAgB,CAAGf,KAAK,CAACgB,UAAN,CAGvB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAEhB,GAAM,CAAAC,mBAAmB,CAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAC1B,SAACC,GAAD,CAAMC,GAAN,CAAc,CAEZ,GAAM,CAAAC,WAA8B,CAAGpB,2BAAvC,CACA,GAAIoB,WAAW,CAACC,QAAZ,CAAqBF,GAArB,CAAJ,CAA+B,CAE7BD,GAAG,CAACC,GAAD,CAAH,CAAWP,KAAK,CAACO,GAAD,CAAhB,CACD,CACD,MAAO,CAAAD,GAAP,CACD,CATyB,CAAAI,aAAA,IAUrBjB,MAAA,EAVP,CAYA,GAAM,CAAAkB,IAAI,CAAG1B,MAAM,EAAnB,CACA,GAAM,CAAA2B,kBAAkB,CAAG3B,MAAM,EAAjC,CACAD,mBAAmB,CACjBiB,GADiB,CAGjB,UAAM,CACJ,GAAM,CAAAY,IAAI,CAAGD,kBAAkB,CAACE,OAAhC,CAEA,GAAIH,IAAI,CAACG,OAAL,EAAgBD,IAApB,CAA0B,CAExBF,IAAI,CAACG,OAAL,CAAaC,UAAb,CAA0BF,IAAI,CAACE,UAA/B,CACA,MAAO,CAAAJ,IAAI,CAACG,OAAZ,CACD,CACD,MAAO,KAAP,CACD,CAZgB,CAajB,CAACH,IAAD,CAAOC,kBAAP,CAbiB,CAAnB,CAeA,MACE,CAAA7B,KAAA,CAAAiC,aAAA,CAAC9B,wBAAD,CAAA+B,QAAA,IACMf,mBADN,EAGED,GAAG,CAAEW,kBAHP,GAIE7B,KAAA,CAAAiC,aAAA,CAACxB,SAAD,CAAAyB,QAAA,IAAejB,KAAf,EAAsBC,GAAG,CAAEU,IAA3B,GAJF,CADF,CAQD,CA1CwB,CAAzB,CA6CAb,gBAAgB,CAACoB,WAAjB,CACE,CAAA1B,SAAS,OAAT,EAAAA,SAAS,SAAT,QAAAA,SAAS,CAAE0B,WAAX,IAEA1B,SAFA,SAEAA,SAFA,kBAAAK,iBAAA,CAEAL,SAAS,CAAE2B,MAFX,UAAAtB,iBAAA,iBAEAA,iBAAA,CAAmBuB,IAFnB,GAGC,MAAO,CAAA5B,SAAP,GAAqB,QAArB,EAAiCA,SAHlC,EAIA,kBALF,CAOA,MAAO,CAAAM,gBAAP,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import Platform from\"react-native-web/dist/exports/Platform\";import findNodeHandleRN from\"react-native-web/dist/exports/findNodeHandle\";import{handlerIDToTag}from\"./handlersRegistry\";import{toArray}from\"../utils\";import RNGestureHandlerModule from\"../RNGestureHandlerModule\";var commonProps=['id','enabled','shouldCancelWhenOutside','hitSlop','cancelsTouchesInView','userSelect'];var componentInteractionProps=['waitFor','simultaneousHandlers'];export var baseGestureHandlerProps=[].concat(commonProps,componentInteractionProps,['onBegan','onFailed','onCancelled','onActivated','onEnded','onGestureEvent','onHandlerStateChange']);export var baseGestureHandlerWithMonitorProps=[].concat(commonProps,['needsPointerData','manualActivation']);function isConfigParam(param,name){return param!==undefined&&(param!==Object(param)||!('__isNative'in param))&&name!=='onHandlerStateChange'&&name!=='onGestureEvent';}export function filterConfig(props,validProps){var defaults=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var filteredConfig=_objectSpread({},defaults);for(var key of validProps){var value=props[key];if(isConfigParam(value,key)){if(key==='simultaneousHandlers'||key==='waitFor'){value=transformIntoHandlerTags(props[key]);}else if(key==='hitSlop'&&typeof value!=='object'){value={top:value,left:value,bottom:value,right:value};}filteredConfig[key]=value;}}return filteredConfig;}function transformIntoHandlerTags(handlerIDs){handlerIDs=toArray(handlerIDs);if(Platform.OS==='web'){return handlerIDs.map(function(_ref){var current=_ref.current;return current;}).filter(function(handle){return handle;});}return handlerIDs.map(function(handlerID){var _handlerID$current;return handlerIDToTag[handlerID]||((_handlerID$current=handlerID.current)===null||_handlerID$current===void 0?void 0:_handlerID$current.handlerTag)||-1;}).filter(function(handlerTag){return handlerTag>0;});}export function findNodeHandle(node){if(Platform.OS==='web'){return node;}return findNodeHandleRN(node);}var scheduledFlushOperationsId=null;export function scheduleFlushOperations(){if(scheduledFlushOperationsId===null){scheduledFlushOperationsId=requestAnimationFrame(function(){RNGestureHandlerModule.flushOperations();scheduledFlushOperationsId=null;});}}","map":{"version":3,"names":["handlerIDToTag","toArray","RNGestureHandlerModule","commonProps","componentInteractionProps","baseGestureHandlerProps","concat","baseGestureHandlerWithMonitorProps","isConfigParam","param","name","undefined","Object","filterConfig","props","validProps","defaults","arguments","length","filteredConfig","_objectSpread","key","value","transformIntoHandlerTags","top","left","bottom","right","handlerIDs","Platform","OS","map","_ref","current","filter","handle","handlerID","_handlerID$current","handlerTag","findNodeHandle","node","findNodeHandleRN","scheduledFlushOperationsId","scheduleFlushOperations","requestAnimationFrame","flushOperations"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestureHandlerCommon.ts"],"sourcesContent":["// Previous types exported gesture handlers as classes which creates an interface and variable, both named the same as class.\n// Without those types, we'd introduce breaking change, forcing users to prefix every handler type specification with typeof\n// e.g. React.createRef<TapGestureHandler> -> React.createRef<typeof TapGestureHandler>.\n// See https://www.typescriptlang.org/docs/handbook/classes.html#constructor-functions for reference.\nimport * as React from 'react';\nimport { Platform, findNodeHandle as findNodeHandleRN } from 'react-native';\n\nimport { State } from '../State';\nimport { TouchEventType } from '../TouchEventType';\nimport { ValueOf } from '../typeUtils';\nimport { handlerIDToTag } from './handlersRegistry';\nimport { toArray } from '../utils';\nimport RNGestureHandlerModule from '../RNGestureHandlerModule';\n\nconst commonProps = [\n  'id',\n  'enabled',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'cancelsTouchesInView',\n  'userSelect',\n] as const;\n\nconst componentInteractionProps = ['waitFor', 'simultaneousHandlers'] as const;\n\nexport const baseGestureHandlerProps = [\n  ...commonProps,\n  ...componentInteractionProps,\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'onGestureEvent',\n  'onHandlerStateChange',\n] as const;\n\nexport const baseGestureHandlerWithMonitorProps = [\n  ...commonProps,\n  'needsPointerData',\n  'manualActivation',\n];\n\nexport interface GestureEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n}\nexport interface HandlerStateChangeEventPayload extends GestureEventPayload {\n  oldState: ValueOf<typeof State>;\n}\n\nexport type HitSlop =\n  | number\n  | Partial<\n      Record<\n        'left' | 'right' | 'top' | 'bottom' | 'vertical' | 'horizontal',\n        number\n      >\n    >\n  | Record<'width' | 'left', number>\n  | Record<'width' | 'right', number>\n  | Record<'height' | 'top', number>\n  | Record<'height' | 'bottom', number>;\n\nexport type UserSelect = 'none' | 'auto' | 'text';\n\n//TODO(TS) events in handlers\n\nexport interface GestureEvent<ExtraEventPayloadT = Record<string, unknown>> {\n  nativeEvent: Readonly<GestureEventPayload & ExtraEventPayloadT>;\n}\nexport interface HandlerStateChangeEvent<\n  ExtraEventPayloadT = Record<string, unknown>\n> {\n  nativeEvent: Readonly<HandlerStateChangeEventPayload & ExtraEventPayloadT>;\n}\n\nexport type TouchData = {\n  id: number;\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport type GestureTouchEvent = {\n  handlerTag: number;\n  numberOfTouches: number;\n  state: ValueOf<typeof State>;\n  eventType: TouchEventType;\n  allTouches: TouchData[];\n  changedTouches: TouchData[];\n};\n\nexport type GestureUpdateEvent<GestureEventPayloadT = Record<string, unknown>> =\n  GestureEventPayload & GestureEventPayloadT;\n\nexport type GestureStateChangeEvent<\n  GestureStateChangeEventPayloadT = Record<string, unknown>\n> = HandlerStateChangeEventPayload & GestureStateChangeEventPayloadT;\n\nexport type CommonGestureConfig = {\n  enabled?: boolean;\n  shouldCancelWhenOutside?: boolean;\n  hitSlop?: HitSlop;\n  userSelect?: UserSelect;\n};\n\n// Events payloads are types instead of interfaces due to TS limitation.\n// See https://github.com/microsoft/TypeScript/issues/15300 for more info.\nexport type BaseGestureHandlerProps<\n  ExtraEventPayloadT extends Record<string, unknown> = Record<string, unknown>\n> = CommonGestureConfig & {\n  id?: string;\n  waitFor?: React.Ref<unknown> | React.Ref<unknown>[];\n  simultaneousHandlers?: React.Ref<unknown> | React.Ref<unknown>[];\n  testID?: string;\n  cancelsTouchesInView?: boolean;\n  // TODO(TS) - fix event types\n  onBegan?: (event: HandlerStateChangeEvent) => void;\n  onFailed?: (event: HandlerStateChangeEvent) => void;\n  onCancelled?: (event: HandlerStateChangeEvent) => void;\n  onActivated?: (event: HandlerStateChangeEvent) => void;\n  onEnded?: (event: HandlerStateChangeEvent) => void;\n\n  //TODO(TS) consider using NativeSyntheticEvent\n  onGestureEvent?: (event: GestureEvent<ExtraEventPayloadT>) => void;\n  onHandlerStateChange?: (\n    event: HandlerStateChangeEvent<ExtraEventPayloadT>\n  ) => void;\n  // implicit `children` prop has been removed in @types/react^18.0.0\n  children?: React.ReactNode;\n};\n\nfunction isConfigParam(param: unknown, name: string) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) ||\n      !('__isNative' in (param as Record<string, unknown>))) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nexport function filterConfig(\n  props: Record<string, unknown>,\n  validProps: string[],\n  defaults: Record<string, unknown> = {}\n) {\n  const filteredConfig = { ...defaults };\n  for (const key of validProps) {\n    let value = props[key];\n    if (isConfigParam(value, key)) {\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop' && typeof value !== 'object') {\n        value = { top: value, left: value, bottom: value, right: value };\n      }\n      filteredConfig[key] = value;\n    }\n  }\n  return filteredConfig;\n}\n\nfunction transformIntoHandlerTags(handlerIDs: any) {\n  handlerIDs = toArray(handlerIDs);\n\n  if (Platform.OS === 'web') {\n    return handlerIDs\n      .map(({ current }: { current: any }) => current)\n      .filter((handle: any) => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      (handlerID: any) =>\n        handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1\n    )\n    .filter((handlerTag: number) => handlerTag > 0);\n}\n\nexport function findNodeHandle(\n  node: null | number | React.Component<any, any> | React.ComponentClass<any>\n): null | number | React.Component<any, any> | React.ComponentClass<any> {\n  if (Platform.OS === 'web') {\n    return node;\n  }\n  return findNodeHandleRN(node);\n}\n\nlet scheduledFlushOperationsId: ReturnType<\n  typeof requestAnimationFrame\n> | null = null;\n\nexport function scheduleFlushOperations() {\n  if (scheduledFlushOperationsId === null) {\n    scheduledFlushOperationsId = requestAnimationFrame(() => {\n      RNGestureHandlerModule.flushOperations();\n\n      scheduledFlushOperationsId = null;\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}export var resolveHref=function resolveHref(href){var _href$pathname;if(typeof href===\"string\"){return resolveHref({pathname:href!=null?href:\"\"});}var path=(_href$pathname=href.pathname)!=null?_href$pathname:\"\";if(!(href!=null&&href.params)){return path;}var _createQualifiedPathn=createQualifiedPathname(path,_objectSpread({},href.params)),pathname=_createQualifiedPathn.pathname,params=_createQualifiedPathn.params;return pathname+(Object.keys(params).length?\"?\"+createQueryParams(params):\"\");};function createQualifiedPathname(pathname,params){for(var _ref of Object.entries(params)){var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var _ref2$=_ref2[1];var value=_ref2$===void 0?\"\":_ref2$;var dynamicKey=\"[\"+key+\"]\";var deepDynamicKey=\"[...\"+key+\"]\";if(pathname.includes(dynamicKey)){pathname=pathname.replace(dynamicKey,Array.isArray(value)?value.join(\"/\"):value);}else if(pathname.includes(deepDynamicKey)){pathname=pathname.replace(deepDynamicKey,Array.isArray(value)?value.join(\"/\"):value);}else{continue;}delete params[key];}return{pathname:pathname,params:params};}function createQueryParams(params){return Object.entries(params).map(function(props){return props.join(\"=\");}).join(\"&\");}","map":{"version":3,"names":["resolveHref","href","_href$pathname","pathname","path","params","_createQualifiedPathn","createQualifiedPathname","_objectSpread","Object","keys","length","createQueryParams","_ref","entries","_ref2","_slicedToArray","key","_ref2$","value","dynamicKey","deepDynamicKey","includes","replace","Array","isArray","join","map","props"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/link/href.ts"],"sourcesContent":["export type Href = string | HrefObject;\n\nexport type HrefObject = {\n  /** Path representing the selected route `/[id]`. */\n  pathname?: string;\n  /** Query parameters for the path. */\n  params?: Record<string, any>;\n};\n\n/** Resolve an href object into a fully qualified, relative href. */\nexport const resolveHref = (href: Href): string => {\n  if (typeof href === \"string\") {\n    return resolveHref({ pathname: href ?? \"\" });\n  }\n  const path = href.pathname ?? \"\";\n  if (!href?.params) {\n    return path;\n  }\n  const { pathname, params } = createQualifiedPathname(path, {\n    ...href.params,\n  });\n  return (\n    pathname +\n    (Object.keys(params).length ? `?${createQueryParams(params)}` : \"\")\n  );\n};\n\nfunction createQualifiedPathname(\n  pathname: string,\n  params: Record<string, any>\n): Omit<Required<HrefObject>, \"query\"> {\n  for (const [key, value = \"\"] of Object.entries(params)) {\n    const dynamicKey = `[${key}]`;\n    const deepDynamicKey = `[...${key}]`;\n    if (pathname.includes(dynamicKey)) {\n      pathname = pathname.replace(\n        dynamicKey,\n        Array.isArray(value) ? value.join(\"/\") : value\n      );\n    } else if (pathname.includes(deepDynamicKey)) {\n      pathname = pathname.replace(\n        deepDynamicKey,\n        Array.isArray(value) ? value.join(\"/\") : value\n      );\n    } else {\n      continue;\n    }\n\n    delete params[key];\n  }\n  return { pathname, params };\n}\n\nfunction createQueryParams(params: Record<string, any>): string {\n  return Object.entries(params)\n    .map((props) => props.join(\"=\"))\n    .join(\"&\");\n}\n"],"mappings":"y4BAUA,MAAO,IAAM,CAAAA,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,IAAU,CAAa,KAAAC,cAAA,CACjD,GAAI,MAAO,CAAAD,IAAI,GAAK,QAAQ,CAAE,CAC5B,MAAO,CAAAD,WAAW,CAAC,CAAEG,QAAQ,CAAEF,IAAI,OAAJA,IAAI,CAAI,EAAG,CAAC,CAAC,CAC9C,CACA,GAAM,CAAAG,IAAI,EAAAF,cAAA,CAAGD,IAAI,CAACE,QAAQ,QAAAD,cAAA,CAAI,EAAE,CAChC,GAAI,EAACD,IAAI,QAAJA,IAAI,CAAEI,MAAM,EAAE,CACjB,MAAO,CAAAD,IAAI,CACb,CACA,IAAAE,qBAAA,CAA6BC,uBAAuB,CAACH,IAAI,CAAAI,aAAA,IACpDP,IAAI,CAACI,MAAM,EACd,CAFMF,QAAQ,CAAAG,qBAAA,CAARH,QAAQ,CAAEE,MAAM,CAAAC,qBAAA,CAAND,MAAM,CAGxB,MACE,CAAAF,QAAQ,EACPM,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,MAAM,KAAOC,iBAAiB,CAACP,MAAM,CAAC,CAAK,EAAE,CAAC,CAEvE,CAAC,CAED,QAAS,CAAAE,uBAAuBA,CAC9BJ,QAAgB,CAChBE,MAA2B,CACU,CACrC,QAAAQ,IAAA,GAAgC,CAAAJ,MAAM,CAACK,OAAO,CAACT,MAAM,CAAC,CAAE,KAAAU,KAAA,CAAAC,cAAA,CAAAH,IAAA,OAA5C,CAAAI,GAAG,CAAAF,KAAA,QAAAG,MAAA,CAAAH,KAAA,OAAE,CAAAI,KAAK,CAAAD,MAAA,UAAG,EAAE,CAAAA,MAAA,CACzB,GAAM,CAAAE,UAAU,KAAOH,GAAG,IAAG,CAC7B,GAAM,CAAAI,cAAc,QAAUJ,GAAG,IAAG,CACpC,GAAId,QAAQ,CAACmB,QAAQ,CAACF,UAAU,CAAC,CAAE,CACjCjB,QAAQ,CAAGA,QAAQ,CAACoB,OAAO,CACzBH,UAAU,CACVI,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,CAAGA,KAAK,CAACO,IAAI,CAAC,GAAG,CAAC,CAAGP,KAAK,CAC/C,CACH,CAAC,IAAM,IAAIhB,QAAQ,CAACmB,QAAQ,CAACD,cAAc,CAAC,CAAE,CAC5ClB,QAAQ,CAAGA,QAAQ,CAACoB,OAAO,CACzBF,cAAc,CACdG,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,CAAGA,KAAK,CAACO,IAAI,CAAC,GAAG,CAAC,CAAGP,KAAK,CAC/C,CACH,CAAC,IAAM,CACL,SACF,CAEA,MAAO,CAAAd,MAAM,CAACY,GAAG,CAAC,CACpB,CACA,MAAO,CAAEd,QAAQ,CAARA,QAAQ,CAAEE,MAAM,CAANA,MAAO,CAAC,CAC7B,CAEA,QAAS,CAAAO,iBAAiBA,CAACP,MAA2B,CAAU,CAC9D,MAAO,CAAAI,MAAM,CAACK,OAAO,CAACT,MAAM,CAAC,CAC1BsB,GAAG,CAAC,SAACC,KAAK,QAAK,CAAAA,KAAK,CAACF,IAAI,CAAC,GAAG,CAAC,GAAC,CAC/BA,IAAI,CAAC,GAAG,CAAC,CACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}
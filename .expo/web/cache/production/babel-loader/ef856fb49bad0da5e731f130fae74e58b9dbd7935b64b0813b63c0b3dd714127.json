{"ast":null,"code":"\"use strict\";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{\"default\":mod};};Object.defineProperty(exports,\"__esModule\",{value:true});exports.symbolicate=exports.deleteStack=void 0;var symbolicateStackTrace_1=__importDefault(require(\"../modules/symbolicateStackTrace\"));var cache=new Map();var sanitize=function sanitize(_ref){var maybeStack=_ref.stack,codeFrame=_ref.codeFrame;if(!Array.isArray(maybeStack)){throw new Error(\"Expected stack to be an array.\");}var stack=[];for(var maybeFrame of maybeStack){var collapse=false;if(\"collapse\"in maybeFrame){if(typeof maybeFrame.collapse!==\"boolean\"){throw new Error(\"Expected stack frame `collapse` to be a boolean.\");}collapse=maybeFrame.collapse;}stack.push({arguments:[],column:maybeFrame.column,file:maybeFrame.file,lineNumber:maybeFrame.lineNumber,methodName:maybeFrame.methodName,collapse:collapse});}return{stack:stack,codeFrame:codeFrame};};function deleteStack(stack){cache.delete(stack);}exports.deleteStack=deleteStack;function symbolicate(stack){var promise=cache.get(stack);if(promise==null){promise=(0,symbolicateStackTrace_1.default)(stack).then(sanitize);cache.set(stack,promise);}return promise;}exports.symbolicate=symbolicate;","map":{"version":3,"names":["symbolicateStackTrace_1","__importDefault","require","cache","Map","sanitize","_ref","maybeStack","stack","codeFrame","Array","isArray","Error","maybeFrame","collapse","push","arguments","column","file","lineNumber","methodName","deleteStack","delete","exports","symbolicate","promise","get","default","then","set"],"sources":["C:\\Riaz\\Projects\\JK\\JK_Frontend\\node_modules\\@expo\\metro-runtime\\src\\error-overlay\\Data\\LogBoxSymbolication.tsx"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { StackFrame as UpstreamStackFrame } from \"stacktrace-parser\";\n\nimport symbolicateStackTrace from \"../modules/symbolicateStackTrace\";\n\ntype SymbolicatedStackTrace = any;\n\ntype StackFrame = UpstreamStackFrame & { collapse?: boolean };\n\nexport type Stack = StackFrame[];\n\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\n\n/**\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n */\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame,\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error(\"Expected stack to be an array.\");\n  }\n  const stack: StackFrame[] = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if (\"collapse\" in maybeFrame) {\n      if (typeof maybeFrame.collapse !== \"boolean\") {\n        throw new Error(\"Expected stack frame `collapse` to be a boolean.\");\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      arguments: [],\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse,\n    });\n  }\n  return { stack, codeFrame };\n};\n\nexport function deleteStack(stack: Stack): void {\n  cache.delete(stack);\n}\n\nexport function symbolicate(stack: Stack): Promise<SymbolicatedStackTrace> {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n\n  return promise;\n}\n"],"mappings":"oOAUA,IAAAA,uBAAA,CAAAC,eAAA,CAAAC,OAAA,sCAQA,GAAM,CAAAC,KAAK,CAAgD,GAAI,CAAAC,GAAG,EAAE,CAKpE,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAAC,IAAA,CAGuC,IAF5C,CAAAC,UAAU,CAAAD,IAAA,CAAjBE,KAAK,CACLC,SAAS,CAAAH,IAAA,CAATG,SAAS,CAET,GAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,CAAE,CAC9B,KAAM,IAAI,CAAAK,KAAK,CAAC,gCAAgC,CAAC,C,CAEnD,GAAM,CAAAJ,KAAK,CAAiB,EAAE,CAC9B,IAAK,GAAM,CAAAK,UAAU,GAAI,CAAAN,UAAU,CAAE,CACnC,GAAI,CAAAO,QAAQ,CAAG,KAAK,CACpB,GAAI,UAAU,EAAI,CAAAD,UAAU,CAAE,CAC5B,GAAI,MAAO,CAAAA,UAAU,CAACC,QAAQ,GAAK,SAAS,CAAE,CAC5C,KAAM,IAAI,CAAAF,KAAK,CAAC,kDAAkD,CAAC,C,CAErEE,QAAQ,CAAGD,UAAU,CAACC,QAAQ,C,CAEhCN,KAAK,CAACO,IAAI,CAAC,CACTC,SAAS,CAAE,EAAE,CACbC,MAAM,CAAEJ,UAAU,CAACI,MAAM,CACzBC,IAAI,CAAEL,UAAU,CAACK,IAAI,CACrBC,UAAU,CAAEN,UAAU,CAACM,UAAU,CACjCC,UAAU,CAAEP,UAAU,CAACO,UAAU,CACjCN,QAAQ,CAARA,Q,CACD,CAAC,C,CAEJ,MAAO,CAAEN,KAAK,CAALA,KAAK,CAAEC,SAAS,CAATA,SAAS,CAAE,CAC7B,CAAC,CAED,QAAgB,CAAAY,WAAWA,CAACb,KAAY,EACtCL,KAAK,CAACmB,MAAM,CAACd,KAAK,CAAC,CACrB,CAFAe,OAAA,CAAAF,WAAA,CAAAA,WAAA,CAIA,QAAgB,CAAAG,WAAWA,CAAChB,KAAY,EACtC,GAAI,CAAAiB,OAAO,CAAGtB,KAAK,CAACuB,GAAG,CAAClB,KAAK,CAAC,CAC9B,GAAIiB,OAAO,EAAI,IAAI,CAAE,CACnBA,OAAO,CAAG,GAAAzB,uBAAA,CAAA2B,OAAqB,EAACnB,KAAK,CAAC,CAACoB,IAAI,CAACvB,QAAQ,CAAC,CACrDF,KAAK,CAAC0B,GAAG,CAACrB,KAAK,CAAEiB,OAAO,CAAC,C,CAG3B,MAAO,CAAAA,OAAO,CAChB,CARAF,OAAA,CAAAC,WAAA,CAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import*as React from\"react\";import{useOptionalNavigation}from\"./link/useLoadedNavigation\";export function useFocusEffect(effect,do_not_pass_a_second_prop){var navigation=useOptionalNavigation();if(do_not_pass_a_second_prop!==undefined){var message=\"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \"+\"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\"+\"useFocusEffect(\\n\"+\"  React.useCallback(() => {\\n\"+\"    // Your code here\\n\"+\"  }, [depA, depB])\\n\"+\");\\n\\n\"+\"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";console.error(message);}React.useEffect(function(){if(!navigation){return;}var isFocused=false;var cleanup;var callback=function callback(){var destroy=effect();if(destroy===undefined||typeof destroy===\"function\"){return destroy;}if(process.env.NODE_ENV!==\"production\"){var _message=\"An effect function must not return anything besides a function, which is used for clean-up.\";if(destroy===null){_message+=\" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";}else if(typeof destroy.then===\"function\"){_message+=\"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \"+\"Instead, write the async function inside your effect \"+\"and call it immediately:\\n\\n\"+\"useFocusEffect(\\n\"+\"  React.useCallback(() => {\\n\"+\"    async function fetchData() {\\n\"+\"      // You can await here\\n\"+\"      const response = await MyAPI.getData(someId);\\n\"+\"      // ...\\n\"+\"    }\\n\\n\"+\"    fetchData();\\n\"+\"  }, [someId])\\n\"+\");\\n\\n\"+\"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";}else{_message+=\" You returned '\"+JSON.stringify(destroy)+\"'.\";}console.error(_message);}};if(navigation.isFocused()){cleanup=callback();isFocused=true;}var unsubscribeFocus=navigation.addListener(\"focus\",function(){if(isFocused){return;}if(cleanup!==undefined){cleanup();}cleanup=callback();isFocused=true;});var unsubscribeBlur=navigation.addListener(\"blur\",function(){if(cleanup!==undefined){cleanup();}cleanup=undefined;isFocused=false;});return function(){if(cleanup!==undefined){cleanup();}unsubscribeFocus();unsubscribeBlur();};},[effect,navigation]);}","map":{"version":3,"names":["React","useOptionalNavigation","useFocusEffect","effect","do_not_pass_a_second_prop","navigation","undefined","message","console","error","useEffect","isFocused","cleanup","callback","destroy","process","env","NODE_ENV","then","JSON","stringify","unsubscribeFocus","addListener","unsubscribeBlur"],"sources":["C:/Riaz/Projects/JK/JK_Frontend/node_modules/expo-router/src/useFocusEffect.tsx"],"sourcesContent":["// A fork of `useFocusEffect` that waits for the navigation state to load before\n// running the effect. This is especially useful for native redirects.\nimport * as React from \"react\";\n\nimport { useOptionalNavigation } from \"./link/useLoadedNavigation\";\n\ntype EffectCallback = () => undefined | void | (() => void);\n\n/**\n * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n * This can be used to perform side-effects such as fetching data or subscribing to events.\n * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n *\n * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n */\nexport function useFocusEffect(\n  effect: EffectCallback,\n  do_not_pass_a_second_prop?: any\n) {\n  const navigation = useOptionalNavigation();\n\n  if (do_not_pass_a_second_prop !== undefined) {\n    const message =\n      \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" +\n      \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" +\n      \"useFocusEffect(\\n\" +\n      \"  React.useCallback(() => {\\n\" +\n      \"    // Your code here\\n\" +\n      \"  }, [depA, depB])\\n\" +\n      \");\\n\\n\" +\n      \"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";\n\n    console.error(message);\n  }\n\n  React.useEffect(() => {\n    if (!navigation) {\n      return;\n    }\n\n    let isFocused = false;\n    let cleanup: undefined | void | (() => void);\n\n    const callback = () => {\n      const destroy = effect();\n\n      if (destroy === undefined || typeof destroy === \"function\") {\n        return destroy;\n      }\n\n      if (process.env.NODE_ENV !== \"production\") {\n        let message =\n          \"An effect function must not return anything besides a function, which is used for clean-up.\";\n\n        if (destroy === null) {\n          message +=\n            \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n        } else if (typeof (destroy as any).then === \"function\") {\n          message +=\n            \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" +\n            \"Instead, write the async function inside your effect \" +\n            \"and call it immediately:\\n\\n\" +\n            \"useFocusEffect(\\n\" +\n            \"  React.useCallback(() => {\\n\" +\n            \"    async function fetchData() {\\n\" +\n            \"      // You can await here\\n\" +\n            \"      const response = await MyAPI.getData(someId);\\n\" +\n            \"      // ...\\n\" +\n            \"    }\\n\\n\" +\n            \"    fetchData();\\n\" +\n            \"  }, [someId])\\n\" +\n            \");\\n\\n\" +\n            \"See usage guide: https://reactnavigation.org/docs/use-focus-effect\";\n        } else {\n          message += ` You returned '${JSON.stringify(destroy)}'.`;\n        }\n\n        console.error(message);\n      }\n    };\n\n    // We need to run the effect on intial render/dep changes if the screen is focused\n    if (navigation.isFocused()) {\n      cleanup = callback();\n      isFocused = true;\n    }\n\n    const unsubscribeFocus = navigation.addListener(\"focus\", () => {\n      // If callback was already called for focus, avoid calling it again\n      // The focus event may also fire on intial render, so we guard against runing the effect twice\n      if (isFocused) {\n        return;\n      }\n\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = callback();\n      isFocused = true;\n    });\n\n    const unsubscribeBlur = navigation.addListener(\"blur\", () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      cleanup = undefined;\n      isFocused = false;\n    });\n\n    return () => {\n      if (cleanup !== undefined) {\n        cleanup();\n      }\n\n      unsubscribeFocus();\n      unsubscribeBlur();\n    };\n  }, [effect, navigation]);\n}\n"],"mappings":"AAEA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,CAE9B,OAASC,qBAAqB,kCAW9B,MAAO,SAAS,CAAAC,cAAcA,CAC5BC,MAAsB,CACtBC,yBAA+B,CAC/B,CACA,GAAM,CAAAC,UAAU,CAAGJ,qBAAqB,EAAE,CAE1C,GAAIG,yBAAyB,GAAKE,SAAS,CAAE,CAC3C,GAAM,CAAAC,OAAO,CACX,sFAAsF,CACtF,8EAA8E,CAC9E,mBAAmB,CACnB,+BAA+B,CAC/B,yBAAyB,CACzB,sBAAsB,CACtB,QAAQ,CACR,oEAAoE,CAEtEC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC,CACxB,CAEAP,KAAK,CAACU,SAAS,CAAC,UAAM,CACpB,GAAI,CAACL,UAAU,CAAE,CACf,OACF,CAEA,GAAI,CAAAM,SAAS,CAAG,KAAK,CACrB,GAAI,CAAAC,OAAwC,CAE5C,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACrB,GAAM,CAAAC,OAAO,CAAGX,MAAM,EAAE,CAExB,GAAIW,OAAO,GAAKR,SAAS,EAAI,MAAO,CAAAQ,OAAO,GAAK,UAAU,CAAE,CAC1D,MAAO,CAAAA,OAAO,CAChB,CAEA,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC,GAAI,CAAAV,QAAO,CACT,6FAA6F,CAE/F,GAAIO,OAAO,GAAK,IAAI,CAAE,CACpBP,QAAO,EACL,kGAAkG,CACtG,CAAC,IAAM,IAAI,MAAQ,CAAAO,OAAO,CAASI,IAAI,GAAK,UAAU,CAAE,CACtDX,QAAO,EACL,uFAAuF,CACvF,uDAAuD,CACvD,8BAA8B,CAC9B,mBAAmB,CACnB,+BAA+B,CAC/B,oCAAoC,CACpC,+BAA+B,CAC/B,uDAAuD,CACvD,gBAAgB,CAChB,WAAW,CACX,oBAAoB,CACpB,kBAAkB,CAClB,QAAQ,CACR,oEAAoE,CACxE,CAAC,IAAM,CACLA,QAAO,oBAAsBY,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,KAAI,CAC1D,CAEAN,OAAO,CAACC,KAAK,CAACF,QAAO,CAAC,CACxB,CACF,CAAC,CAGD,GAAIF,UAAU,CAACM,SAAS,EAAE,CAAE,CAC1BC,OAAO,CAAGC,QAAQ,EAAE,CACpBF,SAAS,CAAG,IAAI,CAClB,CAEA,GAAM,CAAAU,gBAAgB,CAAGhB,UAAU,CAACiB,WAAW,CAAC,OAAO,CAAE,UAAM,CAG7D,GAAIX,SAAS,CAAE,CACb,OACF,CAEA,GAAIC,OAAO,GAAKN,SAAS,CAAE,CACzBM,OAAO,EAAE,CACX,CAEAA,OAAO,CAAGC,QAAQ,EAAE,CACpBF,SAAS,CAAG,IAAI,CAClB,CAAC,CAAC,CAEF,GAAM,CAAAY,eAAe,CAAGlB,UAAU,CAACiB,WAAW,CAAC,MAAM,CAAE,UAAM,CAC3D,GAAIV,OAAO,GAAKN,SAAS,CAAE,CACzBM,OAAO,EAAE,CACX,CAEAA,OAAO,CAAGN,SAAS,CACnBK,SAAS,CAAG,KAAK,CACnB,CAAC,CAAC,CAEF,MAAO,WAAM,CACX,GAAIC,OAAO,GAAKN,SAAS,CAAE,CACzBM,OAAO,EAAE,CACX,CAEAS,gBAAgB,EAAE,CAClBE,eAAe,EAAE,CACnB,CAAC,CACH,CAAC,CAAE,CAACpB,MAAM,CAAEE,UAAU,CAAC,CAAC,CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}